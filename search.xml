<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[mysql]]></title>
    <url>%2F2018%2F12%2F20%2F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86%2F</url>
    <content type="text"><![CDATA[MYSQL数据库关系型数据库基础安装MySQL管理数据库和表用户和权限管理函数，存储过程和触发器MySQL架构存储引擎服务器选项，系统和状态变量优化查询和索引管理锁和事务管理日志管理备份还原MySQL集群 数据的时代涉及的数据量大数据不随程序的结束而消失数据被多个应用程序共享大数据 数据库的发展史萌芽阶段：文件系统 使用磁盘文件来存储数据初级阶段：第一代数据库 出现了网状模型、层次模型的数据库中级阶段：第二代数据库 关系型数据库和结构化查询语言高级阶段：新一代数据库 “关系-对象”型数据库 文件管理系统的缺点编写应用程序不方便数据冗余不可避免应用程序依赖性不支持对文件的并发访问数据间联系弱难以按用户视图表示数据无安全控制功能 数据库管理系统的优点相互关联的数据的集合较少的数据冗余程序与数据相互独立保证数据的安全、可靠最大限度地保证数据的正确性数据可以并发使用并能同时保证一致性 数据库管理系统数据库是数据的汇集，它以一定的组织形式存于存储介质上DBMS是管理数据库的系统软件，它实现数据库系统的各种功能。是数据库系 统的核心DBA：负责数据库的规划、设计、协调、维护和管理等工作应用程序指以数据库为基础的应用程序 数据库管理系统的基本功能数据定义数据处理数据安全数据备份 网状数据库最早出现的是网状DBMS，1964年通用电气公司的Charles Bachman成功地开发出世界上第一 个网状IDS，也是第一个数据库管理系统，IDS 具有数据模式和日志的特征，只能在GE主机运行 层次数据库数据库系统的架构单机架构大型主机/终端架构主从式架构（C/S）分布式架构 关系型数据库关系型数据库：使用的是sql语言，结构化的查询语言 ，内部机制特性ACID特性：保证数据库的安全稳定，影响性能NOSQL：redis:高性能，高并发 关系 ：关系就是二维表，其中：表中的行、列次序并不重要行row：表中的每一行，又称为一条记录列column：表中的每一列，称为属性，字段主键（Primary key）：用于惟一确定一个记录的字段域domain：属性的取值范围，如，性别只能是‘男’和‘女’两个值 一个服务器可以搭建多个DBMSDBMS:多个数据库 ，推荐存放一个数据库，防止访问量过大库：同一个项目的相关系数据，多个表表：一个表多个字段和记录 关系数据库RDBMS：&ensp;&ensp;MySQL: MySQL, MariaDB, Percona Server&ensp;&ensp;PostgreSQL: 简称为pgsql，EnterpriseDB &ensp;&ensp;Oracle MSSQL&ensp;&ensp;DB2数据库排名： https://db-engines.com/en/ranking 实体-联系模型E-R实体Entity：客观存在并可以相互区分的客观事物或抽象事件称为实体&ensp;&ensp;在E-R图中用矩形框表示实体，把实体名写在框内属性：实体所具有的特征或性质联系：联系是数据之间的关联集合，是客观存在的应用语义链&ensp;&ensp;实体内部的联系：指组成实体的各属性之间的联系。如职工实体中，职工号和 部门经理号之间有一种关联关系&ensp;&ensp;实体之间的联系：指不同实体之间联系。例：学生选课实体和学生基本信息实 体之间&ensp;&ensp;实体之间的联系用菱形框表示 联系类型联系的类型&ensp;&ensp;一对一联系(1:1)&ensp;&ensp;一对多联系(1:n)&ensp;&ensp;多对多联系(m:n)数据的操作：&ensp;&ensp;数据提取：在数据集合中提取感兴趣的内容。SELECT&ensp;&ensp;数据更新：变更数据库中的数据。INSERT、DELETE、UPDATE数据的约束条件 ：是一组完整性规则的集合&ensp;&ensp;实体（行）完整性 Entity integrity&ensp;&ensp;域（列）完整性 Domain Integrity&ensp;&ensp;参考完整性 Referential Integrity 简易数据规划流程第一阶段：收集数据，得到字段&ensp;&ensp;收集必要且完整的数据项&ensp;&ensp;转换成数据表的字段第二阶段：把字段分类，归入表，建立表的关联&ensp;&ensp;关联：表和表间的关系&ensp;&ensp;分割数据表并建立关联的优点&ensp;&ensp;节省空间&ensp;&ensp;减少输入错误&ensp;&ensp;方便数据修改第三阶段：&ensp;&ensp;规范化数据库 数据库的正规化分析RDMBS设计范式基础概念&ensp;&ensp;设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不 同的规范要求被称为不同范式，各种范式呈递次规范，越高的范式数据库冗余越小&ensp;&ensp;目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式 （3NF）、巴德斯科范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称 完美范式）。满足最低要求的范式是第一范式（1NF）。在第一范式的基础上 进一步满足更多规范要求的称为第二范式（2NF），其余范式以次类推。一般 数据库只需满足第三范式(3NF）即可 1NF：无重复的列，每一列都是不可分割的基本数据项，同一列中不能有多个 值，即实体中的某个属性不能有多个值或者不能有重复的属性。除去同类型的 字段，就是无重复的列说明：第一范式（1NF）是对关系模式的基本要求，不满足第一范式（1NF） 的数据库就不是关系数据库2NF：属性完全依赖于主键，第二范式必须先满足第一范式，要求表中的每个 行必须可以被唯一地区分。通常为表加上一个列，以存储各个实例的唯一标识 PK，非PK的字段需要与整个PK有直接相关性3NF：属性不依赖于其它非主属性，满足第三范式必须先满足第二范式。第三 范式要求一个数据库表中不包含已在其它表中已包含的非主关键字信息，非PK 的字段间不能有从属关系 SQL概念SQL: Structure Query Language&ensp;&ensp;结构化查询语言&ensp;&ensp;SQL解释器：&ensp;&ensp;数据存储协议：应用层协议，C/SS：server, 监听于套接字，接收并处理客户端的应用请求C：Client&ensp;&ensp;客户端程序接口&ensp;&ensp;&ensp;&ensp;CLI 字符、命令行&ensp;&ensp;&ensp;&ensp;GUI 图形化&ensp;&ensp;应用编程接口 API&ensp;&ensp;&ensp;&ensp;ODBC：Open Database Connectivity 开放的数据库连接&ensp;&ensp;&ensp;&ensp;JDBC：Java Data Base Connectivity java开放数据库的开发接口 mysql：端口tcp 3306oracle：端口tcp 1521sqlserver:端口tcp 1433 约束约束：constraint，表中的数据要遵守的限制&ensp;&ensp;主键pk：一个或多个字段的组合，填入的数据必须能在本表中唯一标识本行； 必须提供数据，即NOT NULL，一个表只能有一个&ensp;&ensp;惟一键uk：一个或多个字段的组合，填入的数据必须能在本表中唯一标识本行； 允许为NULL，一个表可以存在多个&ensp;&ensp;外键fk：一个表中的某字段可填入的数据取决于另一个表的主键或唯一键已有 的数据 ,作用在依赖的表上，被依赖的表上，可以作用主键和唯一键&ensp;&ensp;检查：字段值在一定范围内 基本概念索引：将表中的一个或多个字段中的数据复制一份另存，并且按特定次序排序 存储 （例如：书签，标识）关系运算：&ensp;&ensp;选择：挑选出符合条件的行&ensp;&ensp;投影：挑选出需要的字段&ensp;&ensp;连接：表间字段的关联 数据模型数据抽象：&ensp;&ensp;物理层：数据存储格式，即RDBMS在磁盘上如何组织文件&ensp;&ensp;逻辑层：DBA角度，描述存储什么数据，以及数据间存在什么样的关系&ensp;&ensp;视图层：用户角度，描述DB中的部分数据关系模型的分类：&ensp;&ensp;关系模型&ensp;&ensp;基于对象的关系模型&ensp;&ensp;半结构化的关系模型：XML数据 ：扩展的标记语言 范例：基于xml语言存放的数据12下面目录内的文件都是基于xml语言存放数据的文件[root@centos6 gconf]# cd /etc/gconf/gconf.xml.defaults/ 范例：设置开机自动登陆12345[root@centos6 ~]# vim /etc/gdm/custom.conf # GDM configuration storage[daemon]AutomaticLoginEnable=tureAutomaticLongin=root MySQL历史1979年：TcX公司 Monty Widenius，Unireg1996年：发布MySQL1.0，Solaris版本，Linux版本1999年：MySQL AB公司，瑞典2003年：MySQL 5.0版本，提供视图、存储过程等功能2008年：Sun 收购2009年：Oracle收购sun2009年：Monty成立MariaDB MySQL和MariaDB官方网址：https://www.mysql.com/http://mariadb.org/官方文档https://dev.mysql.com/doc/https://mariadb.com/kb/en/版本演变：MySQL：5.1 –&gt; 5.5 –&gt; 5.6 –&gt; 5.7 –&gt;8.0MariaDB：5.5 –&gt;10.0–&gt; 10.1 –&gt; 10.2 –&gt; 10.3123yum info ..centos6默认光盘安装mysql 5.1.73centos7使用的是mariadb 5.5.56 MYSQL的特性插件式存储引擎：也称为“表类型”，存储管理器有多种实现版本，功能和特 性可能均略有差别；用户可根据需要灵活选择,Mysql5.5.5开始innoDB引擎是 MYSQL默认引擎&ensp;&ensp;MyISAM ==&gt; Aria&ensp;&ensp;InnoDB ==&gt; XtraDB单进程，多线程诸多扩展和新特性提供了较多测试组件开源 raw:裸文件系统：无文件系统：二进制方式存储]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>数据库基础原理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql]]></title>
    <url>%2F2018%2F12%2F20%2Fmysql%E5%AE%89%E8%A3%85%20centos7%2F</url>
    <content type="text"><![CDATA[mysql安装 centos7光盘自带的版本123456789101112131415161718192021222324[root@centos7 ~]# yum info mariadbLoaded plugins: fastestmirror, langpacksLoading mirror speeds from cached hostfile * base: mirrors.tuna.tsinghua.edu.cn * extras: mirror.bit.edu.cn * updates: mirror.bit.edu.cnAvailable PackagesName : mariadbArch : x86_64Epoch : 1Version : 5.5.60Release : 1.el7_5Size : 8.9 MRepo : updates/7/x86_64Summary : A community developed branch of MySQLURL : http://mariadb.orgLicense : GPLv2 with exceptions and LGPLv2 and BSDDescription : MariaDB is a community developed branch of MySQL. : MariaDB is a multi-user, multi-threaded SQL database : server. It is a client/server implementation consisting : of a server daemon (mysqld) and many different client : programs and libraries. The base package contains the : standard MariaDB/MySQL client programs and generic MySQL : files. rpm 方式安装Mariadb：mysql端口默认为tcp 3306123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172安装：[root@centos7 ~]# yum install mariadb-server -y查看安装包主要的文件列表：[root@centos7 ~]# rpm -ql mariadb-server/etc/my.cnf.d/server.cnf 服务器端配置文件/usr/libexec/mysqld 服务器主程序/var/lib/mysql 存放数据库数据的路径/var/log/mariadb/mariadb.log 日志/usr/lib/systemd/system/mariadb.service 服务启动脚本启动程序： 启动前查看数据库数据目录是为空 [root@centos7 ~]# ls /var/lib/mysql/ [root@centos7 ~]# [root@centos7 ~]# systemctl restart mariadbroot@centos7 ~]# ls /var/lib/mysql/aria_log.00000001 ib_logfile0 mysql.sockaria_log_control ib_logfile1 performance_schemaibdata1 mysql test连接数据库：[root@centos7 ~]# mysqlWelcome to the MariaDB monitor. Commands end with ; or \g.Your MariaDB connection id is 2Server version: 5.5.60-MariaDB MariaDB ServerCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.MariaDB [(none)]&gt; 查看搜索引擎：MariaDB [(none)]&gt; show engines;+--------------------+---------+----------------------------------------------------------------------------+--------------+------+------------+| Engine | Support | Comment | Transactions | XA | Savepoints |+--------------------+---------+----------------------------------------------------------------------------+--------------+------+------------+| MEMORY | YES | Hash based, stored in memory, useful for temporary tables | NO | NO | NO || MRG_MYISAM | YES | Collection of identical MyISAM tables | NO | NO | NO || CSV | YES | CSV storage engine | NO | NO | NO || BLACKHOLE | YES | /dev/null storage engine (anything you write to it disappears) | NO | NO | NO || MyISAM | YES | MyISAM storage engine | NO | NO | NO || InnoDB | DEFAULT | Percona-XtraDB, Supports transactions, row-level locking, and foreign keys | YES | YES | YES || ARCHIVE | YES | Archive storage engine | NO | NO | NO || FEDERATED | YES | FederatedX pluggable storage engine | YES | NO | YES || PERFORMANCE_SCHEMA | YES | Performance Schema | NO | NO | NO || Aria | YES | Crash-safe tables with MyISAM heritage | NO | NO | NO |+--------------------+---------+----------------------------------------------------------------------------+--------------+------+------------+10 rows in set (0.00 sec)从服务器中得到相关的状态信息MariaDB [(none)]&gt; \s--------------mysql Ver 15.1 Distrib 5.5.60-MariaDB, for Linux (x86_64) using readline 5.1Connection id: 2Current database: Current user: root@localhostSSL: Not in useCurrent pager: stdoutUsing outfile: ''Using delimiter: ;Server: MariaDBServer version: 5.5.60-MariaDB MariaDB ServerProtocol version: 10Connection: Localhost via UNIX socketServer characterset: latin1Db characterset: latin1Client characterset: utf8Conn. characterset: utf8UNIX socket: /var/lib/mysql/mysql.sockUptime: 9 min 44 secThreads: 1 Questions: 6 Slow queries: 0 Opens: 0 Flush tables: 2 Open tables: 26 Queries per second avg: 0.010-------------- 范例：centos7修改提示符：（centos7mysql的配置文件和客户端是分开的）1234567891011121314151617[root@centos7 ~]# cd /etc/my.cnf.d/[root@centos7 my.cnf.d]# lsclient.cnf mysql-clients.cnf server.cnf编辑客户端配置文件修改提示符[root@centos7 my.cnf.d]# vim mysql-clients.cnf [mysql]prompt='\u@\D-&gt;'查看是否修改成功[root@centos7 my.cnf.d]# mysqlWelcome to the MariaDB monitor. Commands end with ; or \g.Your MariaDB connection id is 3Server version: 5.5.60-MariaDB MariaDB ServerCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and otherType 'help;' or '\h' for help. Type '\c' to clear the current inputatement.root@Tue Nov 27 15:04:34 2018-&gt; 12345678910111213141516171819202122232425262728293031323334353637383940414243444546MariaDB [(none)]&gt; none:表示当前正在处于哪个数据库里面查看数据库的数据路径目录形式的代表数据库，也是系统自带的数据库，所以可以理解为数据库存放数据 分为系统自身用的数据、用户创建生产的数据库[root@centos7 ~]# ls /var/lib/mysql/aria_log.00000001 ib_logfile0 mysql.sockaria_log_control ib_logfile1 performance_schemaibdata1 mysql test查看当前有多少数据库即表MariaDB [(none)]&gt; show databases;+--------------------+| Database |+--------------------+| information_schema || mysql || performance_schema || test |+--------------------+4 rows in set (0.00 sec)查看当前数据库的版本信息（数据库中带有括号的命令，表现为系统自带的函数）MariaDB [(none)]&gt; select version();+----------------+| version() |+----------------+| 5.5.60-MariaDB |+----------------+1 row in set (0.00 sec)查看当前的用户信息MariaDB [(none)]&gt; select user();+----------------+| user() |+----------------+| root@localhost |+----------------+1 row in set (0.00 sec)查看用户当前所在哪个数据库中MariaDB [(none)]&gt; select database();+------------+| database() |+------------+| NULL |+------------+1 row in set (0.00 sec) 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179使用use 客户端工具切换到指定的数据库，作为当前使用的数据库MariaDB [(none)]&gt; use mysqlReading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedMariaDB [mysql]&gt; 查看当前使用的数据库中的所有表列表MariaDB [mysql]&gt; show tables;+---------------------------+| Tables_in_mysql |+---------------------------+| columns_priv || db || event || func || general_log || help_category || help_keyword || help_relation || help_topic || host || ndb_binlog_index || plugin || proc || procs_priv || proxies_priv || servers || slow_log || tables_priv || time_zone || time_zone_leap_second || time_zone_name || time_zone_transition || time_zone_transition_type || user |+---------------------------+24 rows in set (0.00 sec)命令行指定显示指定数据库中的表列表(意义同上命令)MariaDB [mysql]&gt; show tables from mysql;....上面的数据库中的表实际表现为[root@centos7 ~]# ls /var/lib/mysql/mysql查看服务端命令的帮助help + 服务端命令``` `范例：安装完数据库，linux上的任何用户都可以使用mysql的root用户登陆，也可以使用任何一个用户连接登陆````bash查看mysql存放的用户信息[root@centos7 ~]# mysqlWelcome to the MariaDB monitor. Commands end with ; or \g.Your MariaDB connection id is 7Server version: 5.5.60-MariaDB MariaDB ServerCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.MariaDB [(none)]&gt; use mysqlReading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedMariaDB [mysql]&gt; show tables;+---------------------------+| Tables_in_mysql |+---------------------------+| columns_priv || db || event || func || general_log || help_category || help_keyword || help_relation || help_topic || host || ndb_binlog_index || plugin || proc || procs_priv || proxies_priv || servers || slow_log || tables_priv || time_zone || time_zone_leap_second || time_zone_name || time_zone_transition || time_zone_transition_type || user |+---------------------------+24 rows in set (0.00 sec)MariaDB [mysql]&gt; select user,host,password from user;+------+-------------+----------+| user | host | password |+------+-------------+----------+| root | localhost | || root | centos7.com | || root | 127.0.0.1 | || root | ::1 | || | localhost | || | centos7.com | |+------+-------------+----------+6 rows in set (0.00 sec)安全加固，执行初始化命令[root@centos7 ~]# mysql_secure_installation Enter current password for root (enter for none): （输入当前数据库中root用户的口令，若无口令，直接回车）Set root password? [Y/n] （是否设置root的口令）yNew password: 口令Re-enter new password: 确定口令Password updated successfully!Reloading privilege tables.. ... Success!Remove anonymous users? [Y/n] （是否删除匿名用户）yDisallow root login remotely? [Y/n] (是否禁用远程登陆)yRemove test database and access to it? [Y/n] (是否删除测试数据库)yReload privilege tables now? [Y/n] (是否重新加载特权表)yThanks for using MariaDB!再次连接mysql数据库[root@centos7 ~]# mysql -u root -pMariaDB [(none)]&gt; use mysqlReading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedMariaDB [mysql]&gt; show tables;+---------------------------+| Tables_in_mysql |+---------------------------+| columns_priv || db || event || func || general_log || help_category || help_keyword || help_relation || help_topic || host || ndb_binlog_index || plugin || proc || procs_priv || proxies_priv || servers || slow_log || tables_priv || time_zone || time_zone_leap_second || time_zone_name || time_zone_transition || time_zone_transition_type || user |+---------------------------+24 rows in set (0.00 sec)MariaDB [mysql]&gt; select user,host,password from user;+------+-----------+-------------------------------------------+| user | host | password |+------+-----------+-------------------------------------------+| root | localhost | *0E04F27C8B21547FD069D6E8519AE49B7ECE8E94 || root | 127.0.0.1 | *0E04F27C8B21547FD069D6E8519AE49B7ECE8E94 || root | ::1 | *0E04F27C8B21547FD069D6E8519AE49B7ECE8E94 |+------+-----------+-------------------------------------------+3 rows in set (0.00 sec)目前仅可以本机连接，使用centos6连接测试[root@centos6 ~]# mysql -u root -p centos -h 172.18.135.88Enter password: 连接不上 范例：查看mysql账号数据库是否活跃123[root@centos7 ~]# mysqladmin -u root -p pingEnter password: mysqld is alive 范例：停止此用户的数据库123456789101112131415[root@centos7 ~]# mysqladmin -u root -p shutdownEnter password: 测试：连接不上去了[root@centos7 ~]# mysql -u root -pEnter password: ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/var/lib/mysql/mysql.sock' (2)启动服务[root@centos7 ~]# systemctl restart mariadb查看连接信息[root@centos7 ~]# mysqladmin statusUptime: 23 Threads: 1 Questions: 3 Slow queries: 0 Opens: 0 Flush tables: 2 Open tables: 18 Queries per second avg: 0.130`]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql安装-centos7</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql]]></title>
    <url>%2F2018%2F12%2F20%2Fmysql%E5%AE%89%E8%A3%85%20centos6%2F</url>
    <content type="text"><![CDATA[mysql安装 centos6光盘自带的版本12345678910111213141516171819202122[root@centos6 ~]# yum info mysqlLoaded plugins: fastestmirror, refresh-packagekit, securityLoading mirror speeds from cached hostfile * base: mirror.bit.edu.cn * extras: ftp.sjtu.edu.cn * updates: mirrors.huaweicloud.comAvailable PackagesName : mysqlArch : x86_64Version : 5.1.73Release : 8.el6_8Size : 895 kRepo : baseSummary : MySQL client programs and shared librariesURL : http://www.mysql.comLicense : GPLv2 with exceptionsDescription : MySQL is a multi-user, multi-threaded SQL database : server. MySQL is a client/server implementation : consisting of a server daemon (mysqld) and many different : client programs and libraries. The base package contains : the standard MySQL client programs and generic MySQL : files. rpm 方式安装Mariadb：mysql端口默认为tcp 3306123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113安装：[root@centos6 ~]# yum install mysql-server -y查看安装包主要的文件列表：[root@centos6 ~]# rpm -ql mysql-server/etc/rc.d/init.d/mysqld 服务启动脚本/usr/libexec/mysqld 服务器主程序/var/lib/mysql 存放数据库的数据的路径/var/log/mysqld.log 日志文件/etc/my.cnf 服务的配置文件[root@centos6 ~]# rpm -qf /etc/my.cnf （可以作为mysql数据库的服务器的配置文件，也可以作为客户端的配置文件）mysql-libs-5.1.73-8.el6_8.x86_64启动服务：[root@centos6 ~]# service mysqld starInstalling MySQL system tables...OKFilling help tables...OKTo start mysqld at boot time you have to copysupport-files/mysql.server to the right place for your systePLEASE REMEMBERTO SET A PASSWORD FOR THE MySQL root USER !To do so, start the server, then issue the following command/usr/bin/mysqladmin -u root password 'new-password'/usr/bin/mysqladmin -u root -h centos6.com password 'new-pasd'Alternatively you can run:/usr/bin/mysql_secure_installation 初始化服务脚本，可以设置root口令，也可以更安全的数据库which will also give you the option of removing the testdatabases and anonymous user created by default. This isstrongly recommended for production servers.See the manual for more instructions.You can start the MySQL daemon with:cd /usr ; /usr/bin/mysqld_safe &amp;You can test the MySQL daemon with mysql-test-run.plcd /usr/mysql-test ; perl mysql-test-run.plPlease report any problems with the /usr/bin/mysqlbug script [ ok ]Starting mysqld: [ ok ] 启动程序后，生成数据库数据相关的文件，未启动之前时空的： [root@centos6 ~]# ls /var/lib/mysql/ ibdata1 ib_logfile0 ib_logfile1 mysql mysql.sock（数据库的套接字） test 自己连接本机的mysql服务端，可以走套接字（数据库服务的用户与linux用户无关）使用客户端工具连接数据库[root@centos6 ~]# which mysql/usr/bin/mysql[root@centos6 ~]# rpm -qf /usr/bin/mysqlmysql-5.1.73-8.el6_8.x86_64查看进程：[root@centos6 ~]# ps auxroot 4616 0.0 0.0 108228 1468 pts/1 S 21:05 0:00 /bin/sh /usr/bin/mysqld_safe --datadir=/var/lib/mysql --socket=/var/lib/mysql/mysql.sock --（数据库的主程序）mysql 4718 0.0 1.6 367520 30848 pts/1 Sl 21:05 0:00 /usr/libexec/mysqld --basedir=/usr --datadir=/var/lib/mysql --user=mysql --log-error=/var/lmysql数据库是单进程多线程的数据库程序：[root@centos6 ~]# pstree -p├─mysqld_safe(4616)───mysqld(4718)─┬─&#123;mysqld&#125;(4720) │ ├─&#123;mysqld&#125;(4721)线程 │ ├─&#123;mysqld&#125;(4722) │ ├─&#123;mysqld&#125;(4723) │ ├─&#123;mysqld&#125;(4724) │ ├─&#123;mysqld&#125;(4725) │ ├─&#123;mysqld&#125;(4726) │ ├─&#123;mysqld&#125;(4727) │ └─&#123;mysqld&#125;(4728)查看数据库安装脚本[root@centos6 ~]# rpm -q --scripts mysql-serverpreinstall scriptlet (using /bin/sh):/usr/sbin/groupadd -g 27 -o -r mysql &gt;/dev/null 2&gt;&amp;1 || :/usr/sbin/useradd -M -N -g mysql -o -r -d /var/lib/mysql -s /bin/bash \ -c "MySQL Server" -u 27 mysql &gt;/dev/null 2&gt;&amp;1 || :postinstall scriptlet (using /bin/sh):if [ $1 = 1 ]; then /sbin/chkconfig --add mysqldfi/bin/chmod 0755 /var/lib/mysql/bin/touch /var/log/mysqld.logpreuninstall scriptlet (using /bin/sh):if [ $1 = 0 ]; then /sbin/service mysqld stop &gt;/dev/null 2&gt;&amp;1 /sbin/chkconfig --del mysqldfipostuninstall scriptlet (using /bin/sh):if [ $1 -ge 1 ]; then /sbin/service mysqld condrestart &gt;/dev/null 2&gt;&amp;1 || :fi连接数据库：（本地连接数据库是由本机的sock套接字连接） 使用mysql客户端工具连接： mysql -u 数据库用户 -p （提示输入口令）-s 指定套接字路径 （默认为/var/lib/mysql/mysql.sock）[root@centos6 ~]# mysqlWelcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 2Server version: 5.1.73 Source distributionCopyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type 'help;' or '\h' 帮助for help. Type '\c'清屏 to clear the current input statement.mysql&gt; 范例：下面为mysql数据库的客户端命令123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869下面为mysql数据库的客户端命令mysql&gt; help List of all MySQL commands:Note that all text commands must be first on line and end with ';'? (\?) Synonym for `help'. clear (\c) --清除当前输入的语句connect (\r) --重新连接，通常用于被剔除或异常断开后重新连接，SQL*plus下也有这样一个connect命令delimiter (\d) --设置命令终止符，缺省为；，比如我们可以设定为/来表示语句结束 edit (\e) --编辑缓冲区的上一条SQL语句到文件，缺省调用vi，文件会放在/tmp路径下ego (\G) --控制结果显示为垂直显示exit (\q) --退出mysqlgo (\g) --发送命令到mysql服务help (\h) Display this help.nopager (\n) --关闭页设置，打印到标准输出 notee (\t) --关闭输出到文件pager (\P) --设置pager方式，可以设置为调用more,less等等，主要是用于分页显示print (\p) Print current command. prompt (\R) --改变mysql的提示符 quit (\q) Quit mysql. rehash (\#) --自动补齐相关对象名字 source (\.) --执行脚本文件status (\s) --获得状态信息system (\!) --执行系统命令 tee (\T) --操作结果输出到文件 use (\u) --切换数据库charset (\C) --设置字符集warnings (\W) --打印警告信息nowarning (\w) Don't show warnings after every statement.--上面的所有命令，扩号内的为快捷操作，即只需要输入“\”+ 字母即可执行查看mysql数据库的存储引擎：（服务器端命令）mysql&gt; show engines;+------------+---------+------------------------------------------------------------+--------------+------+------------+| Engine | Support | Comment | Transactions | XA | Savepoints |+------------+---------+------------------------------------------------------------+--------------+------+------------+| MRG_MYISAM | YES | Collection of identical MyISAM tables | NO | NO | NO || CSV | YES | CSV storage engine | NO | NO | NO || MyISAM | DEFAULT | Default engine as of MySQL 3.23 with great performance | NO | NO | NO || InnoDB | YES | Supports transactions, row-level locking, and foreign keys | YES | YES | YES || MEMORY | YES | Hash based, stored in memory, useful for temporary tables | NO | NO | NO |+------------+---------+------------------------------------------------------------+--------------+------+------------+5 rows in set (0.00 sec)从服务器中得到相关的状态信息mysql&gt; status--------------mysql Ver 14.14 Distrib 5.1.73, for redhat-linux-gnu (x86_64) using readline 5.1Connection id: 2Current database: Current user: root@localhost（当前连接身份）SSL: Not in useCurrent pager: stdoutUsing outfile: ''Using delimiter: ;Server version: 5.1.73 Source distributionProtocol version: 10Connection: Localhost via UNIX socketServer characterset: latin1 （字符集）Db characterset: latin1Client characterset: latin1Conn. characterset: latin1UNIX socket: /var/lib/mysql/mysql.sock（套接字文件路径）Uptime: 1 hour 1 min 14 secThreads: 1（当前线程） Questions: 8 Slow queries: 0 Opens: 15 Flush tables: 1 Open tables: 8 Queries per second avg: 0.2--------------调用linux命令mysql&gt; system hostnamecentos6.com 范例：mysql中的提示符1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162提示符：修改方式建议为了方便我们在平时的使用，有效的给我们提示信息。 建议参考Linux系统的提示符方式命名，即：用户名@主机名+当前所在位置。 在MySQL中可以通过参数来获取提示符信息，下面列表中列出了常用的四个信息，方便我们等下修改MySQL提示符。参数 描述\D 完整的日期\d 当前数据库\h 服务器名称\u 当前用户mysql&gt; PROMPT \u@\h \d &gt; root@localhost (none) &gt;CREATE DATABASE testdb;root@localhost (none) &gt;USE testdb;root@localhost testdb &gt;修改mysql数据库的提示符mysql&gt; prompt mysql--&gt;PROMPT set to 'mysql--&gt;'mysql--&gt;命令行进入mysql顺便修改提示符[root@centos6 ~]# mysql --prompt="\u@\D"Welcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 3Server version: 5.1.73 Source distributionCopyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reservedOracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.root@Tue Nov 27 22:53:50 2018修改mysql提示符，永久保存生效(centos6的服务端和客户端的配置文件在同一个文件中) 编辑数据库的配置文件，写入客户端配置[root@centos6 ~]# vim /etc/my.cnf 服务端配置[mysqld]datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.sockuser=mysql# Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links=0服务端配置[mysqld_safe]log-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid客户端配置，写入提示符信息[mysql]prompt='\u@\D-&gt;'保存，进入数据库，查看提示符，是否发生变化[root@centos6 ~]# mysqlWelcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 4Server version: 5.1.73 Source distributionCopyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.root@Tue Nov 27 22:58:29 2018-&gt;]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql安装-centos6</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql]]></title>
    <url>%2F2018%2F12%2F20%2FMariadb%E5%AE%9E%E7%8E%B0%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[mairadb实现源码安装10.2.19123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112第一步：安装相关的依赖包[root@centos7 yum.repos.d]# yum install bison bison-devel zlib-devel libcurl-devel libarchive-devel boost-devel gcc gcc-c++ cmake ncurses-devel gnutls-devel libxml2-devel openssl-devel libevent-devel libaio-devel第二步：创建对应的账号 （数据库存放数据的路径）[root@centos7 yum.repos.d]# useradd -r -s /sbin/nologin -d /data/mysql/ mysql 第三步：创建数据对应的数据库路径[root@centos7 ~]# mkdir /data/mysql[root@centos7 ~]# chown mysql:mysql /data/mysql第四步：下载源码解压[root@centos7 ~]# lsmariadb-10.2.19.tar.gz[root@centos7 ~]# tar xvf mariadb-10.2.19.tar.gz [root@centos7 ~]# lsmariadb-10.2.19 mariadb-10.2.19.tar.gz[root@centos7 ~]# du -sh mariadb-10.2.19506M mariadb-10.2.19第五步：cmack编译[root@centos7 ~]# cd mariadb-10.2.19/[root@centos7 mariadb-10.2.19]# cmake . \-DCMAKE_INSTALL_PREFIX=/app/mysql \-DMYSQL_DATADIR=/data/mysql/ \-DSYSCONFDIR=/etc \-DMYSQL_USER=mysql \-DWITH_INNOBASE_STORAGE_ENGINE=1 \-DWITH_ARCHIVE_STORAGE_ENGINE=1 \-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \-DWITH_PARTITION_STORAGE_ENGINE=1 \-DWITHOUT_MROONGA_STORAGE_ENGINE=1 \-DWITH_DEBUG=0 \-DWITH_READLINE=1 \-DWITH_SSL=system \-DWITH_ZLIB=system \-DWITH_LIBWRAP=0 \-DENABLED_LOCAL_INFILE=1 \-DMYSQL_UNIX_ADDR=/data/mysql/mysql.sock \-DDEFAULT_CHARSET=utf8 \-DDEFAULT_COLLATION=utf8_general_ci 多线程编译[root@centos7 ~]# make -j 4 &amp;&amp; make install[root@centos7 mariadb-10.2.19]# ls /app/mysql/bin EXCEPTIONS-CLIENT README.mdCOPYING include README-wsrepCOPYING.thirdparty INSTALL-BINARY scriptsCREDITS lib sharedata man sql-benchdocs mysql-test support-files第五步：生成数据库文件[root@centos7 mysql]# scripts/mysql_install_db --user=mysql --datadir=/data/mysql[root@centos7 mysql]# ls -l /data/mysql/total 110620-rw-rw----. 1 mysql mysql 16384 Nov 27 21:02 aria_log.00000001-rw-rw----. 1 mysql mysql 52 Nov 27 21:02 aria_log_control-rw-rw----. 1 mysql mysql 938 Nov 27 21:02 ib_buffer_pool-rw-rw----. 1 mysql mysql 12582912 Nov 27 21:02 ibdata1-rw-rw----. 1 mysql mysql 50331648 Nov 27 21:02 ib_logfile0-rw-rw----. 1 mysql mysql 50331648 Nov 27 21:02 ib_logfile1drwx------. 2 mysql root 4096 Nov 27 21:02 mysqldrwx------. 2 mysql mysql 20 Nov 27 21:02 performance_schemadrwx------. 2 mysql root 6 Nov 27 21:02 test第六步：设置PATH变量[root@centos7 mysql]# echo 'PATH=/app/mysql/bin:$PATH' &gt; /etc/profile.d/mysql.sh[root@centos7 mysql]# source /etc/profile.d/mysql.sh 第七步：拷贝模板配置文件[root@centos7 mysql]# pwd/app/mysql[root@centos7 mysql]# cp support-files/my-huge.cnf /etc/my.cnfcp: overwrite ‘/etc/my.cnf’? y第八步：设置启动脚本[root@centos7 ~]# cd /app/mysql/support-files/[root@centos7 support-files]# lsbinary-configure my-medium.cnf policymagic my-small.cnf wsrep.cnfmy-huge.cnf mysqld_multi.server wsrep_notifymy-innodb-heavy-4G.cnf mysql-log-rotatemy-large.cnf mysql.server[root@centos7 support-files]# cp mysql.server /etc/init.d/mysqld[root@centos7 ~]# chkconfig --add mysqld[root@centos7 ~]# chkconfig --listNote: This output shows SysV services only and does not include native systemd services. SysV configuration data might be overridden by native systemd configuration. If you want to list systemd services use 'systemctl list-unit-files'. To see services enabled on particular target use 'systemctl list-dependencies [target]'.mysqld 0:off 1:off 2:on 3:on 4:on 5:on 6:off启动[root@centos7 ~]# service mysqld restartRestarting mysqld (via systemctl): [ OK ][root@centos7 ~]# ss -ntlLISTEN 0 80 :::3306 :::* 安全脚本mysql_secure_installation]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mariadb实现源码编译</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[mysql]]></title>
    <url>%2F2018%2F12%2F20%2Fmariadb%E5%AE%9E%E7%8E%B0%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85%2F</url>
    <content type="text"><![CDATA[通用二进制格式安装过程范例：二进制格式安装的mysql版本为：mysql-10.2 第一步：将二进制编译完的文件传进linux中，解压缩、创建软连接 [root@centos7 ~]# ls mariadb-10.2.19-linux-x86_64.tar.gz [root@centos7 ~]# tar xfv mariadb-10.2.19-linux-x86_64.tar.gz -C /usr/local [root@centos7 ~]# ls /usr/local bin games lib libexec sbin src etc include lib64 mariadb-10.2.19-linux-x86_64 share 创建软连接，方便下次升级（链接程序所在路径，因为源码编译时文档中指定程序路径放置在/usr/local/mysql） [root@centos7 ~]# ln -s /usr/local/mariadb-10.2.19-linux-x86_64/ /usr/local/mysql [root@centos7 ~]# ll /usr/local/mysql lrwxrwxrwx. 1 root root 40 Nov 27 17:01 /usr/local/mysql -&gt; /usr/local/mariadb-10.2.19-linux-x86_64/ 第二步：修改程序目录的属性 [root@centos7 ~]# chown -R root:root /usr/local/mysql/ [root@centos7 ~]# ll /usr/local/mysql/ total 180 drwxrwxr-x. 2 root root 4096 Sep 23 10:13 bin 程序 -rw-r--r--. 1 root root 17987 Nov 13 00:32 COPYING -rw-r--r--. 1 root root 86263 Nov 13 00:32 COPYING.thirdparty -rw-r--r--. 1 root root 2354 Nov 13 00:32 CREDITS drwxrwxr-x. 3 root root 18 Nov 13 07:37 data -rw-r--r--. 1 root root 8245 Nov 13 00:32 EXCEPTIONS-CLIENT drwxrwxr-x. 3 root root 19 Nov 13 07:37 include -rw-r--r--. 1 root root 8694 Nov 13 00:32 INSTALL-BINARY drwxrwxr-x. 5 root root 4096 Sep 23 10:14 lib drwxrwxr-x. 4 root root 30 Nov 13 07:37 man drwxrwxr-x. 11 root root 4096 Nov 13 07:37 mysql-test -rw-r--r--. 1 root root 2469 Nov 13 00:32 README.md -rw-r--r--. 1 root root 19510 Nov 13 00:32 README-wsrep drwxrwxr-x. 2 root root 30 Nov 13 07:37 scripts drwxrwxr-x. 32 root root 4096 Nov 13 07:37 share drwxrwxr-x. 4 root root 4096 Nov 13 07:37 sql-bench drwxrwxr-x. 3 root root 275 Nov 13 07:37 support-files 第三步：创建程序用户 [root@centos7 ~]# useradd -r -s /sbin/nologin -d /data/mysql -c "mariadb user" mysql [root@centos7 ~]# getent passwd mysql mysql:x:989:983:mariadb user:/data/mysql:/sbin/nologin 第四步：创建数据库目录：存放数据库的数据 [root@centos7 ~]# ls -ld /data/mysql ls: cannot access /data/mysql: No such file or directory [root@centos7 ~]# mkdir /data/mysql [root@centos7 ~]# install -d /data/mysql -o root -g mysql [root@centos7 ~]# ls -ld /data/mysql drwxr-xr-x. 2 root mysql 6 Nov 27 17:15 /data/mysql 第四步：生成系统数据库 [root@centos7 ~]# ls /usr/local/mysql/ bin include README-wsrep COPYING INSTALL-BINARY scripts COPYING.thirdparty lib share CREDITS man sql-bench data mysql-test support-files EXCEPTIONS-CLIENT README.md 安装数据库的脚本：生成系统数据库 [root@centos7 ~]# ls /usr/local/mysql/scripts/ mysql_install_db [root@centos7 mysql]# pwd /usr/local/mysql [root@centos7 mysql]# scripts/mysql_install_db --user=mysql --datadir=/data/mysql 确定是否生成了数据库 [root@centos7 mysql]# ls /data/mysql/ aria_log.00000001 ibdata1 mysql aria_log_control ib_logfile0 performance_schema ib_buffer_pool ib_logfile1 test 第五步：准备数据库的配置文件 [root@centos7 ~]# mkdir /etc/mysql [root@centos7 ~]# ls /usr/local/mysql/support-files/ binary-configure my-medium.cnf policy magic my-small.cnf wsrep.cnf my-huge.cnf mysqld_multi.server wsrep_notify my-innodb-heavy-4G.cnf mysql-log-rotate my-large.cnf mysql.server [root@centos7 ~]# cd /usr/local/mysql/support-files/ [root@centos7 support-files]# cp my-huge.cnf /etc/mysql/my.cnf 第六步：修改配置文件，根据自己定义的数据路径进行修改 [root@centos7 ~]# vim /etc/mysql/my.cnf [mysqld] datadir=/data/mysql port = 3306 socket = /tmp/mysql.sock 第七步：准备程序服务的启动脚本 [root@centos7 ~]# ls /usr/local/mysql/support-files/ mysql.server [root@centos7 ~]# cp /usr/local/mysql/support-files/mysql.server /etc/init.d/ 可以改名，方便启动 [root@centos7 ~]# cd /etc/init.d/ [root@centos7 init.d]# ls functions mysql.server netconsole network README [root@centos7 init.d]# mv mysql.server mysqld 第八步：准备启动 [root@centos7 ~]# chkconfig --add mysqld [root@centos7 ~]# chkconfig --list mysqld 0:off 1:off 2:on 3:on 4:on 5:on 6:off netconsole 0:off 1:off 2:off 3:off 4:off 5:off 6:off network 0:off 1:off 2:on 3:on 4:on 5:on 6:off 启动 [root@centos7 ~]# service mysqld restart Restarting mysqld (via systemctl): [ OK ] 准备PATH变量 [root@centos7 ~]# echo 'PATH=/usr/local/mysql/bin:$PATH' &gt; /etc/profile.d/mysql.sh [root@centos7 ~]# source /etc/profile.d/mysql.sh 连接测试 [root@centos7 ~]# mysql Welcome to the MariaDB monitor. Commands end with ; or \g. Your MariaDB connection id is 10 Server version: 10.2.19-MariaDB-log MariaDB Server Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others. Type 'help;' or '\h' for help. Type '\c' to clear the current input statement. MariaDB [(none)]&gt; exit 查看数据库路径 方法1 MariaDB [(none)]&gt; show variables like 'datadir' -&gt; ; +---------------+--------------+ | Variable_name | Value | +---------------+--------------+ | datadir | /data/mysql/ | +---------------+--------------+ 1 row in set (0.01 sec) 方法2 MariaDB [(none)]&gt; select @@datadir -&gt; ; +--------------+ | @@datadir | +--------------+ | /data/mysql/ | +--------------+ 1 row in set (0.00 sec) 执行初始化安装脚本 [root@centos7 ~]# ls /usr/local/mysql/bin/ mysql_secure_installation [root@centos7 ~]# mysql_secure_installation]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mariadb实现二进制安装</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F12%2F19%2Fnfs%E6%9C%8D%E5%8A%A1%E5%99%A8%2F</url>
    <content type="text"><![CDATA[title: ftptags: linux服务categories: NFS服务器date: top: NFS服务 NFS：Network File System 网络文件系统，基于内核的文件系统。Sun公司 开发，通过使用NFS，用户和程序可以像访问本地文件一样访问远端系统上的 文件，基于RPC（Remote Procedure Call Protocol远程过程调用）实现 RPC采用C/S模式。客户机请求程序调用进程发送一个有进程参数的调用信息 到服务进程，然后等待应答信息。在服务器端，进程保持睡眠状态直到调用 信息到达为止。当一个调用信息到达，服务器获得进程参数，计算结果，发 送答复信息，然后等待下一个调用信息，最后，客户端调用进程接收答复信 息，获得进程结果，然后调用执行继续进行 NFS优势：节省本地存储空间，将常用的数据,如home目录,存放在NFS服务 器上且可以通过网络访问，本地终端将可减少自身存储空间的使用 12345678910111213常用系统的驱动查看模块[root@centos7 ~]# locate xfs.ko/usr/lib/modules/3.10.0-862.el7.x86_64/kernel/fs/xfs/xfs.ko.xz[root@centos7 ~]# ls /usr/lib/modules/3.10.0-862.el7.x86_64/kernel/fs/binfmt_misc.ko.xz cifs ext4 gfs2 mbcache.ko.xz nls udfbtrfs cramfs fat isofs nfs overlayfs xfscachefiles dlm fscache jbd2 nfs_common pstoreceph exofs fuse lockd nfsd squashfslinux内核默认已经安装nfs文件系统，已经加载驱动模块[root@centos7 ~]# locate nfs.ko/usr/lib/modules/3.10.0-862.el7.x86_64/kernel/drivers/xen/xenfs/xenfs.ko.xz/usr/lib/modules/3.10.0-862.el7.x86_64/kernel/fs/nfs/nfs.ko.xz NFS文件系统 NFS工作原理 NFS各个版本的对比s NFS服务介绍软件包：nfs-utils（并非服务器包时文件系统即工具）Kernel支持:nfs.ko端口：2049(nfsd), 其它端口由portmap(111)分配配置文件：/etc/exports,/etc/exports.d/*.exportsCentOS7不支持同一目录同时用nfs和samba共享，因为使用锁机制不同相关软件包:rpcbind（必须rpcbind， 服务如果不可用则nfs服务也不可用），tcp_wrappersCentOS6开始portmap进程由rpcbind代替NFS服务主要进程：&ensp;&ensp;rpc.nfsd 最主要的NFS进程，管理客户端是否可登录&ensp;&ensp;rpc.mountd 挂载和卸载NFS文件系统，包括权限管理&ensp;&ensp;rpc.lockd 非必要，管理文件锁，避免同时写出错&ensp;&ensp;rpc.statd 非必要，检查文件一致性，可修复文件日志：/var/lib/nfs/ 范例：查看nfs对应的端口123456[root@centos7 ~]# rpcinfo -p program vers proto port service 100000 4 tcp 111 portmapper 100000 3 tcp 111 portmapper此服务使用的随机端口比较多，所以此服务一般不会跨网络使用，最好在局域网内使用 范例：配置防火墙，将随机端口绑死，实现跨网络12345678910配置防火墙，开放NFS服务 配置NFS使用固定端口 vim /etc/sysconfig/nfs RQUOTAD_PORT=875 LOCKD_TCPPORT=32803 LOCKD_UDPPORT=32769 MOUNTD_PORT=892 STATD_PORT=662 STATD_OUTGOING_PORT=2020 防火墙除开放上述端口，还需开放TCP和UDP的111和2049共4个端 范例：实现共享文件夹1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677服务端：创建共享的目录 [root@centos7 ~]# mkdir /data/a [root@centos7 ~]# mkdir /data/b编辑服务器的配置文件（此配置配置文件是系统的基本文件，此文件可以定义共享的目录的策略） [root@centos7 ~]# rpm -qf /etc/exports setup-2.8.71-9.el7.noarch [root@centos7 ~]# vim /etc/exports （*代表所有人可以访问） /data/a * 生效配置文件（提示我们没有配置策略使用默认的配置策略，sync直接写磁盘，不放buffer） [root@centos7 ~]# exportfs -r exportfs: No options for /data/a *: suggest *(sync) to avoid warning客户端： 创建挂载点，使用服务端共享的目录进行挂载 [root@centos7 ~]# mkdir /data/nfs1 /data/nfs2 [root@centos7 ~]# showmount -e 192.168.52.179 Export list for 192.168.52.179: /data/a * 挂载指向服务端的地址 [root@centos7 ~]# mount 192.168.52.179:/data/a /data/nfs1 [root@centos7 ~]# df 192.168.52.179:/data/a 20961280 33024 20928256 1% /data/nfs1服务端在共享的目录中创建文件，客户端查看是否同步 [root@centos7 ~]# touch /data/a/a.txt [root@centos7 ~]# ls /data/nfs1/ a.txt 查看共享默认的权限：只读属性 [root@centos7 ~]# touch /data/nfs1/b.txt touch: cannot touch ‘/data/nfs1/b.txt’: Read-only file system 客户端查看挂载属性：默认使用的挂载版本为vers=4 [root@centos7 ~]# mount 192.168.52.179:/data/a on /data/nfs1 type nfs4 (rw,relatime,vers=4.1,rsize=262144,wsize=262144,namlen=255,hard,proto=tcp,port=0,timeo=600,retrans=2,sec=sys,clientaddr=192.168.52.179,local_lock=none,addr=192.168.52.179) 客户端挂载指定版本挂载 [root@centos7 ~]# mount -o vers=3 192.168.52.179:/data/a /data/nfs1 [root@centos7 ~]# mount | tail -n1 192.168.52.179:/data/a on /data/nfs1 type nfs (rw,relatime,vers=3,rsize=262144,wsize=262144,namlen=255,hard,proto=tcp,timeo=600,retrans=2,sec=sys,mountaddr=192.168.52.179,mountvers=3,mountport=20048,mountproto=udp,local_lock=none,addr=192.168.52.179)服务端修改挂载的目录权限 [root@centos7 ~]# vim /etc/exports /data/a *(sync,ro) 同步，只读 /data/b *(rw) 可读可写 生效并查看权限 [root@centos7 ~]# exportfs -r [root@centos7 ~]# exportfs -v （root_squash压榨root权限 no_all_squash普通用户不压榨） /data/a &lt;world&gt;(ro,sync,wdelay,hide,no_subtree_check,sec=sys,secure,root_squash,no_all_squash) /data/b &lt;world&gt;(rw,sync,wdelay,hide,no_subtree_check,sec=sys,secure,root_squash,no_all_squash)客户端挂载:挂载也是有读写权限的但是还是不可以创建文件 [root@centos7 ~]# mkdir /data/nfs2/ [root@centos7 ~]# mount 192.168.52.179:/data/b /data/nfs2/ [root@centos7 ~]# touch /data/nfs2/a.txt touch: cannot touch ‘/data/nfs2/a.txt’: Permission denied 因为客户端访问服务端的共享目录的身份默认的是以nfsnoboby身份服务端授权设置acl [root@centos7 ~]# setfacl -m u:nfsnobody:rwx /data/b/客户端测试 [root@centos7 ~]# touch /data/nfs2/a.txt [root@centos7 ~]# ll !$ ll /data/nfs2/a.txt -rw-r--r--. 1 nfsnobody nfsnobody 0 Dec 19 20:17 /data/nfs2/a.tx客户端使用客户端的普通用户，在服务端共享的目录中创建文件显示权限不足（因为客户端创建的用户为普通用户，如果有同名用户则显示相同的用户，如果没有则显示客户端的用户的id）(映射成id相同的人，普通用户不压榨) 导出的文件系统的格式：&ensp;&ensp;/dir 主机1(opt1,opt2) 主机2(opt1,opt2)… #开始为注释 主机格式：&ensp;&ensp;/单个主机：ipv4，ipv6，FQDN&ensp;&ensp;/IP networks：两种掩码格式均支持&ensp;&ensp;/&ensp;&ensp;/172.18.0.0/255.255.0.0&ensp;&ensp;/&ensp;&ensp;/172.18.0.0/16&ensp;&ensp;/wildcards：主机名通配，例如.magedu.com，IP不可以&ensp;&ensp;/netgroups：NIS域的主机组，@group_name&ensp;&ensp;/anonymous：表示使用通配所有客户端 nfs配置文件每个条目指定目录导出到的哪些主机，及相关的权限和选项&ensp;&ensp;默认选项：(ro,sync,root_squash,no_all_squash)&ensp;&ensp;ro,rw 只读和读写 • async 异步，数据变化后不立即写磁盘，性能高&ensp;&ensp;sync（1.0.0后为默认）同步，数据在请求时立即写入共享&ensp;&ensp;no_all_squash （默认）保留共享文件的UID和GID&ensp;&ensp;all_squash 所有远程用户(包括root)都变成nfsnobody&ensp;&ensp;root_squash （默认）远程root映射为nfsnobody,UID为65534，早期版本 是4294967294 (nfsnobody)&ensp;&ensp;no_root_squash 远程root映射成root用户&ensp;&ensp;anonuid和anongid 指明匿名用户映射为特定用户UID和组GID，而非 nfsnobody,可配合all_squash使用 1234567不压榨远程root用户的权限 [root@centos7 ~]# vim /etc/exports /data/a *(sync,ro) /data/b *(rw,no_root_squash) [root@centos7 ~]# exportfs -v /data/a &lt;world&gt;(ro,sync,wdelay,hide,no_subtree_check,sec=sys,secure,root_squash,no_all_squash) /data/b &lt;world&gt;(rw,sync,wdelay,hide,no_subtree_check,sec=sys,secure,root_squash,no_all_squash) NFS工具rpcinfo&ensp;&ensp;rpcinfo -p hostname&ensp;&ensp;rpcinfo –s hostname 查看RPC注册程序 exportfs&ensp;&ensp;–v 查看本机所有NFS共享&ensp;&ensp;–r 重读配置文件，并共享目录&ensp;&ensp;–a 输出本机所有共享&ensp;&ensp;–au 停止本机所有共享 showmount -e hostnamemount.nfs 挂载工具NFSv4支持通过挂载NFS服务器的共享“根”，从而浏览NFS服务器上的共享 目录列表&ensp;&ensp;mount nfsserver:/ /mnt/nfs 客户端NFS挂载基于安全考虑，建议使用nosuid,nodev,noexec挂载选项NFS相关的挂载选项：&ensp;&ensp;fg（默认）前台挂载，bg后台挂载&ensp;&ensp;hard（默认）持续请求，soft 非持续请求&ensp;&ensp;intr 和hard配合，请求可中断&ensp;&ensp;rsize和wsize 一次读和写数据最大字节数，rsize=32768&ensp;&ensp;_netdev 无网络不挂载示例：&ensp;&ensp;mount -o rw,nosuid,fg,hard,intr 172.16.0.1:/testdir /mnt/nfs/开机挂载:/etc/fstab&ensp;&ensp;172.16.0.1:/public /mnt/nfs nfs defaults 0 0 自动挂载可使用autofs按需要挂载NFS共享，在空闲时自动卸载由autofs包提供系统管理器指定由/etc/auto.master自动挂载器守护进程控制的挂载点自动挂载监视器访问这些目录并按要求挂载文件系统文件系统在失活的指定间隔5分钟后会自动卸载为所有导出到网络中的NFS启用特殊匹配 -host 至“browse”参看帮助：man 5 autofs支持含通配符的目录名&ensp;&ensp;* server:/export/&amp; 直接匹配直接匹配包括绝对路径名称不会影响本地目录结构示例：&ensp;&ensp;/etc/auto.master:&ensp;&ensp;/- /etc/auto.direct &ensp;&ensp;/etc/auto.direct:&ensp;&ensp;/foo server1:/export/foo&ensp;&ensp;/user/local/ server1:/usr/local]]></content>
  </entry>
  <entry>
    <title><![CDATA[mysql]]></title>
    <url>%2F2018%2F03%2F06%2Fmysql%E5%AE%89%E8%A3%85%E5%92%8C%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[MYSQL的特性插件式存储引擎：也称为“表类型”，存储管理器有多种实现版本，功能和特 性可能均略有差别；用户可根据需要灵活选择,Mysql5.5.5开始&amp;innoDB引擎是 MYSQL默认引擎&ensp;&ensp;MyISAM ==&gt; Aria&ensp;&ensp;InnoDB ==&gt; XtraDB单进程，多线程诸多扩展和新特性提供了较多测试组件开源 安装MYSQLMariadb安装方式：1、源代码：编译安装2、二进制格式的程序包：展开至特定路径，并经过简单配置后即可使用3、程序包管理器管理的程序包CentOS 安装光盘项目官方： https://downloads.mariadb.org/mariadb/repositories/国内镜像： https://mirrors.tuna.tsinghua.edu.cn/mariadb/mariadbx.y.z/yum/centos/7/x86_64/ RPM包安装MySQLRPM包安装&ensp;&ensp;CentOS 7：安装光盘直接提供&ensp;&ensp;&ensp;&ensp;mariadb-server 服务器包&ensp;&ensp;&ensp;&ensp;mariadb 客户端工具包&ensp;&ensp;CentOS 6提高安全性&ensp;&ensp;mysql_secure_installation&ensp;&ensp;&ensp;&ensp;设置数据库管理员root口令&ensp;&ensp;&ensp;&ensp;禁止root远程登录&ensp;&ensp;&ensp;&ensp;删除anonymous用户帐号&ensp;&ensp;&ensp;&ensp;删除test数据库 MariaDB程序客户端程序：&ensp;&ensp;mysql: 交互式的CLI工具&ensp;&ensp;mysqldump：备份工具，基于mysql协议向mysqld发起查询请求，并将查得的所有数据转换成insert等写操作语句保存文本文件中&ensp;&ensp;mysqladmin：基于mysql协议管理mysqld&ensp;&ensp;mysqlimport：数据导入工具MyISAM存储引擎的管理工具：&ensp;&ensp;myisamchk：检查MyISAM库&ensp;&ensp;myisampack：打包MyISAM表，只读服务器端程序&ensp;&ensp;mysqld_safe&ensp;&ensp;mysqld&ensp;&ensp;mysqld_multi 多实例（一个程序在系统上运行多次，多个进程，缺点仅能实现单一版本的多实例） ，示例：mysqld_multi –example 用户账号mysql用户账号由两部分组成：&ensp;&ensp;‘USERNAME‘@’HOST‘说明：&ensp;&ensp;HOST限制此用户可通过哪些远程主机连接mysql服务器&ensp;&ensp;支持使用通配符：&ensp;&ensp;&ensp;&ensp;% 匹配任意长度的任意字符&ensp;&ensp;&ensp;&ensp;172.16.0.0/255.255.0.0 或 172.16.%.%&ensp;&ensp;&ensp;&ensp;_ 匹配任意单个字符 Mysql 客户端mysql使用模式：交互式模式：&ensp;&ensp;可运行命令有两类：&ensp;&ensp;客户端命令：&ensp;&ensp;&ensp;&ensp;\h, help&ensp;&ensp;&ensp;&ensp;\u，use&ensp;&ensp;&ensp;&ensp;\s，status&ensp;&ensp;&ensp;&ensp;!，system&ensp;&ensp;服务器端命令：&ensp;&ensp;&ensp;&ensp;SQL语句， 需要语句结束符；脚本模式：&ensp;&ensp;mysql –uUSERNAME -pPASSWORD &lt; /path/somefile.sql&ensp;&ensp;mysql&gt; source /path/from/somefile.sql Mysql客户端mysql客户端可用选项：-A, –no-auto-rehash 禁止补全-u, –user= 用户名,默认为root-h, –host= 服务器主机,默认为localhost-p, –passowrd= 用户密码,建议使用-p,默认为空密码-P, –port= 服务器端口-S, –socket= 指定连接socket文件路径-D, –database= 指定默认数据库-C, –compress 启用压缩-e “SQL“ 执行SQL命令-V, –version 显示版本-v –verbose 显示详细信息–print-defaults 获取程序默认使用的配置 socket地址服务器监听的两种socket地址：&ensp;&ensp;ip socket: 监听在tcp的3306端口，支持远程通信&ensp;&ensp;unix sock: 监听在sock文件上，仅支持本机通信&ensp;&ensp;&ensp;&ensp;如：/var/lib/mysql/mysql.sock)说明：host为localhost,127.0.0.1时自动使用unix sock 执行命令运行mysql命令：默认空密码登录&ensp;&ensp;mysql&gt;use mysql&ensp;&ensp;mysql&gt;select user();查看当前用户&ensp;&ensp;mysql&gt;SELECT User,Host,Password FROM user;登录系统：mysql –uroot –p客户端命令：本地执行&ensp;&ensp;mysql&gt; help&ensp;&ensp;每个命令都完整形式和简写格式&ensp;&ensp;mysql&gt; status 或 \s服务端命令：通过mysql协议发往服务器执行并取回结果 每个命令末尾都必须使用命令结束符号，默认为分号&ensp;&ensp;示例：SELECT VERSION(); 服务器端配置服务器端(mysqld)：工作特性有多种配置方式1、命令行选项：2、配置文件：类ini格式集中式的配置，能够为mysql的各应用程序提供配置信息&ensp;&ensp;[mysqld]&ensp;&ensp;[mysqld_safe]&ensp;&ensp;[mysqld_multi]&ensp;&ensp;[mysql]&ensp;&ensp;[mysqldump]&ensp;&ensp;[server]&ensp;&ensp;[client]格式：parameter = value说明：_和- 相同&ensp;&ensp;1，ON，TRUE意义相同， 0，OFF，FALSE意义相同 配置文件配置文件：后面覆盖前面的配置文件，顺序如下：下面的优先级高/etc/my.cnf Global选项/etc/mysql/my.cnf Global选项SYSCONFDIR/my.cnf Global选项$MYSQL_HOME/my.cnf Server-specific 选项–defaults-extra-file= path~/.my.cnf User-specific 选项 MairaDB配置侦听3306/tcp端口可以在绑定有一个或全部接口IP上vim /etc/my.cnf[mysqld]skip-networking=1关闭网络连接，只侦听本地客户端， 所有和服务器的交互都通过一个socket实 现，socket的配置存放在/var/lib/mysql/mysql.sock） 可在/etc/my.cnf修改 通用二进制格式安装过程二进制格式安装过程(1) 准备用户&ensp;&ensp;groupadd -r -g 306 mysql&ensp;&ensp;useradd -r -g 306 -u 306 –d /data/mysql mysql(2) 准备数据目录，建议使用逻辑卷&ensp;&ensp;mkdir /data/mysql&ensp;&ensp;chown mysql:mysql /data/mysql(3) 准备二进制程序&ensp;&ensp;tar xf mariadb-VERSION-linux-x86_64.tar.gz -C /usr/local&ensp;&ensp;cd /usr/local&ensp;&ensp;ln -sv mariadb-VERSION mysql&ensp;&ensp;chown -R root:mysql /usr/local/mysql/(4) 准备配置文件&ensp;&ensp;mkdir /etc/mysql/&ensp;&ensp;cp support-files/my-large.cnf /etc/mysql/my.cnf&ensp;&ensp;[mysqld]中添加三个选项：&ensp;&ensp;datadir = /data/mysql&ensp;&ensp;innodb_file_per_table = on&ensp;&ensp;skip_name_resolve = on 禁止主机名解析，建议使用(5)创建数据库文件&ensp;&ensp;cd /usr/local/mysql/&ensp;&ensp;./scripts/mysql_install_db –datadir=/data/mysql –user=mysql(6)准备服务脚本，并启动服务&ensp;&ensp;cp ./support-files/mysql.server /etc/rc.d/init.d/mysqld&ensp;&ensp;chkconfig –add mysqldservice mysqld start(7)PATH路径&ensp;&ensp;echo ‘PATH=/user/local/mysql/bin:$PATH’ &gt; /etc/profile.d/mysql(8)安全初始化 &ensp;&ensp;/user/local/mysql/bin/mysql_secure_installation 源码编译安装mariadb安装包&ensp;&ensp;yum install bison bison-devel zlib-devel libcurl-devel libarchive-devel boost-devel gcc gcc-c++ cmake ncurses-devel gnutls-devel libxml2-devel openssl-devel libevent-devel libaio-devel做准备用户和数据目录&ensp;&ensp;useradd –r –s /sbin/nologin –d /data/mysql/ mysql&ensp;&ensp;mkdir /data/mysql&ensp;&ensp;chown mysql.mysql /data/mysql&ensp;&ensp;tar xvf mariadb-10.2.18.tar.gzcmake 编译安装&ensp;&ensp;cmake的重要特性之一是其独立于源码(out-of-source)的编译功能，即编译工作可以在 另一个指定的目录中而非源码目录中进行，这可以保证源码目录不受任何一次编译的影 响，因此在同一个源码树上可以进行多次不同的编译，如针对于不同平台编译 编译选项:https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html cd mariadb-10.2.18/cmake . \-DCMAKE_INSTALL_PREFIX=/app/mysql \-DMYSQL_DATADIR=/data/mysql/ \-DSYSCONFDIR=/etc \-DMYSQL_USER=mysql \-DWITH_INNOBASE_STORAGE_ENGINE=1 \-DWITH_ARCHIVE_STORAGE_ENGINE=1 \-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \-DWITH_PARTITION_STORAGE_ENGINE=1 \-DWITHOUT_MROONGA_STORAGE_ENGINE=1 \-DWITH_DEBUG=0 \-DWITH_READLINE=1 \-DWITH_SSL=system \-DWITH_ZLIB=system \-DWITH_LIBWRAP=0 \-DENABLED_LOCAL_INFILE=1 \-DMYSQL_UNIX_ADDR=/data/mysql/mysql.sock \-DDEFAULT_CHARSET=utf8 \-DDEFAULT_COLLATION=utf8_general_ci make &amp;&amp; make install提示：如果出错，执行rm -f CMakeCache.txt 准备环境变量echo ‘PATH=/app/mysql/bin:$PATH’ &gt; /etc/profile.d/mysql.sh. /etc/profile.d/mysql.sh生成数据库文件cd /app/mysql/scripts/mysql_install_db –datadir=/data/mysql/ –user=mysql准备配置文件cp /app/mysql/support-files/my-huge.cnf /etc/my.cnf准备启动脚本cp /app/mysql/support-files/mysql.server /etc/init.d/mysqld启动服务chkconfig –add mysqld ;service mysqld start 关系型数据库的常见组件数据库：database表：table 行：row 列：column索引：index视图：view用户：user权限：privilege存储过程：procedure存储函数：function触发器：trigger事件调度器：event scheduler，任务计划 SQL语言的兴起与语法标准20世纪70年代，IBM开发出SQL，用于DB21981年，IBM推出SQL/DS数据库业内标准微软和Sybase的T-SQL，Oracle的PL/SQLSQL作为关系型数据库所使用的标准语言，最初是基于IBM的实现在1986年被 批准的。1987年，“国际标准化组织(ISO)”把ANSI(美国国家标准化组织) SQL作为国际标准。SQL：ANSI SQLSQL-1986, SQL-1989, SQL-1992, SQL-1999, SQL-2003 , SQL-2008 SQL-2011 SQL语言规范在数据库系统中，SQL语句不区分大小写(建议用大写)SQL语句可单行或多行书写，以“;”结尾关键词不能跨多行或简写用空格和缩进来提高语句的可读性子句通常位于独立行，便于编辑，提高可读性注释：&ensp;&ensp;SQL标准：&ensp;&ensp;/注释内容/ 多行注释&ensp;&ensp;– 注释内容 单行注释，注意有空格&ensp;&ensp;MySQL注释： # 数据库对象数据库的组件(对象)：&ensp;&ensp;数据库、表、索引、视图、用户、存储过程、函数、触发器、事件调度器等命名规则：&ensp;&ensp;必须以字母开头&ensp;&ensp;可包括数字和三个特殊字符（# _ $）&ensp;&ensp;不要使用MySQL的保留字&ensp;&ensp;同一database(Schema)下的对象不能同名 SQL语句分类SQL语句分类：DDL: Data Defination Language 数据定义语言&ensp;&ensp;CREATE，DROP，ALTERDML: Data Manipulation Language 数据操纵语言&ensp;&ensp;INSERT，DELETE，UPDATEDCL：Data Control Language 数据控制语言&ensp;&ensp;GRANT，REVOKE，COMMIT，ROLLBACKDQL：Data Query Language 数据查询语言&ensp;&ensp;SELECT SQL语句构成SQL语句构成：&ensp;&ensp;Keyword组成clause&ensp;&ensp;多条clause组成语句示例：SELECT * SELECT子句FROM products FROM子句WHERE price&gt;400 WHERE子句说明：一组SQL语句，由三个子句构成，SELECT,FROM和WHERE是关键字 数据库操作创建数据库：&ensp;&ensp;CREATE DATABASE|SCHEMA [IF NOT EXISTS] ‘DB_NAME’;&ensp;&ensp;CHARACTER SET ‘character set name’&ensp;&ensp;COLLATE ‘collate name’删除数据库&ensp;&ensp;DROP DATABASE|SCHEMA [IF EXISTS] ‘DB_NAME’;查看支持所有字符集：&ensp;&ensp;SHOW CHARACTER SET;查看支持所有排序规则：&ensp;&ensp;SHOW COLLATION;获取命令使用帮助：&ensp;&ensp;mysql&gt; HELP KEYWORD;查看数据库列表：&ensp;&ensp;mysql&gt; SHOW DATABASES;]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>mysql数据库</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[旧事-大好河山]]></title>
    <url>%2F2017%2F10%2F01%2F%E6%97%A7%E4%BA%8B-%E5%A4%A7%E5%A5%BD%E6%B2%B3%E5%B1%B1%2F</url>
    <content type="text"><![CDATA[输入密码,PC:Enter查看,Phone:输入法换行查看. U2FsdGVkX1/N/U//pDiffMH3MF6ubPTWe5o7eV5KMv20P6EeCt6k7x25I4wyMb6nepRTHWzGIC5NWviDXTqAOEh1PNngqI5UvQnU0aYKcyKFhTot61J3ynCIwFBCKAjM6/82kY630UsQdQicrFFxiWHXb+uaB7Z0ZHo0WtH+aljvIOk7R4OL7/geA/oGybiZjkEBgOovh8DJ2u60NIGQQNeHk1eHGNlyCLO6upwjbHFm9rggoD3kQiCsYfl3jG8Cj8hWkjSfhoaD1AAGU8EzXONAZH7lBOcl5HWDbthp5ACxAtara4WD89XyJEwGAbOj2USOCZUybCPKPoOkPrPGORrB2CWBmuSTu/3l0e4zyBc=]]></content>
      <categories>
        <category>旧事，杂记</category>
      </categories>
      <tags>
        <tag>旧事，杂记</tag>
      </tags>
  </entry>
</search>
