<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dai zhe&#39;s notes</title>
  
  <subtitle>Just Du It</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://daizhe.net.cn/"/>
  <updated>2019-01-20T12:52:23.598Z</updated>
  <id>https://daizhe.net.cn/</id>
  
  <author>
    <name>哆啦A梦</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>session一致性架构设计实践</title>
    <link href="https://daizhe.net.cn/2019/01/20/session%E4%B8%80%E8%87%B4%E6%80%A7%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1%E5%AE%9E%E8%B7%B5/"/>
    <id>https://daizhe.net.cn/2019/01/20/session一致性架构设计实践/</id>
    <published>2019-01-20T11:44:12.413Z</published>
    <updated>2019-01-20T12:52:23.598Z</updated>
    
    <content type="html"><![CDATA[<h1 id="session一致性架构设计实践"><a href="#session一致性架构设计实践" class="headerlink" title="session一致性架构设计实践"></a>session一致性架构设计实践</h1><p><img src="/2019/01/20/session一致性架构设计实践/标题.gif" alt=""><br><a id="more"></a></p><h2 id="一、缘起"><a href="#一、缘起" class="headerlink" title="一、缘起"></a>一、缘起</h2><p>什么是session？</p><ul><li>服务器为每个用户创建一个会话，存储用户的相关信息，以便多次请求能够定位到同一个上下文。</li><li>Web开发中，web-server可以自动为同一个浏览器的访问用户自动创建session，提供数据存储功能。最常见的，会把用户的登录信息、用户信息存储在session中，以保持登录状态。</li></ul><p>什么是session一致性问题？</p><ul><li>只要用户不重启浏览器，每次http短连接请求，理论上服务端都能定位到session，保持会话。</li></ul><p><img src="/2019/01/20/session一致性架构设计实践/1.png" alt=""></p><ul><li><p>当只有一台web-server提供服务时，每次http短连接请求，都能够正确路由到存储session的对应web-server（废话，因为只有一台）。</p></li><li><p>此时的web-server是无法保证高可用的，采用“冗余+故障转移”的多台web-server来保证高可用时，每次http短连接请求就不一定能路由到正确的session了。</p></li></ul><p><img src="/2019/01/20/session一致性架构设计实践/2.png" alt=""></p><ul><li><p>如上图，假设用户包含登录信息的session都记录在第一台web-server上，反向代理如果将请求路由到另一台web-server上，可能就找不到相关信息，而导致用户需要重新登录。</p></li><li><p>在web-server高可用时，如何保证session路由的一致性，是今天将要讨论的问题。</p></li></ul><h2 id="二、session同步法"><a href="#二、session同步法" class="headerlink" title="二、session同步法"></a>二、session同步法</h2><p><img src="/2019/01/20/session一致性架构设计实践/3.png" alt=""></p><ul><li><p>思路：多个web-server之间相互同步session，这样每个web-server之间都包含全部的session</p></li><li><p>优点：web-server支持的功能，应用程序不需要修改代码</p></li><li><p>不足：</p><ul><li>session的同步需要数据传输，占内网带宽，有时延</li><li>所有web-server都包含所有session数据，数据量受内存限制，无法水平扩展</li><li>有更多web-server时要歇菜</li></ul></li></ul><h2 id="三、客户端存储法"><a href="#三、客户端存储法" class="headerlink" title="三、客户端存储法"></a>三、客户端存储法</h2><p><img src="/2019/01/20/session一致性架构设计实践/4.png" alt=""></p><ul><li>思路：服务端存储所有用户的session，内存占用较大，可以将session存储到浏览器cookie中，每个端只要存储一个用户的数据了</li><li>优点：服务端不需要存储</li><li>缺点：<ul><li>每次http请求都携带session，占外网带宽</li><li>数据存储在端上，并在网络传输，存在泄漏、篡改、窃取等安全隐患</li><li>session存储的数据大小受cookie限制</li></ul></li><li>“端存储”的方案虽然不常用，但确实是一种思路。</li></ul><h2 id="四、反向代理hash一致性"><a href="#四、反向代理hash一致性" class="headerlink" title="四、反向代理hash一致性"></a>四、反向代理hash一致性</h2><ul><li>思路：web-server为了保证高可用，有多台冗余，反向代理层能不能做一些事情，让同一个用户的请求保证落在一台web-server上呢？</li></ul><p><img src="/2019/01/20/session一致性架构设计实践/5.png" alt=""></p><h3 id="方案一：四层代理hash"><a href="#方案一：四层代理hash" class="headerlink" title="方案一：四层代理hash"></a>方案一：四层代理hash</h3><ul><li>反向代理层使用用户ip来做hash，以保证同一个ip的请求落在同一个web-server上</li></ul><p><img src="/2019/01/20/session一致性架构设计实践/6.png" alt=""></p><h3 id="方案二：七层代理hash"><a href="#方案二：七层代理hash" class="headerlink" title="方案二：七层代理hash"></a>方案二：七层代理hash</h3><ul><li>反向代理使用http协议中的某些业务属性来做hash，例如sid，city_id，user_id等，能够更加灵活的实施hash策略，以保证同一个浏览器用户的请求落在同一个web-server上</li><li><p>优点：</p><ul><li>只需要改nginx配置，不需要修改应用代码</li><li>负载均衡，只要hash属性是均匀的，多台web-server的负载是均衡的</li><li>可以支持web-server水平扩展（session同步法是不行的，受内存限制）</li></ul></li><li><p>不足：</p><ul><li>如果web-server重启，一部分session会丢失，产生业务影响，例如部分用户重新登录</li><li><p>如果web-server水平扩展，rehash后session重新分布，也会有一部分用户路由不到正确的session</p></li><li><p>session一般是有有效期的，所有不足中的两点，可以认为等同于部分session失效，一般问题不大。</p></li><li>对于四层hash还是七层hash，个人推荐前者：让专业的软件做专业的事情，反向代理就负责转发，尽量不要引入应用层业务属性，除非不得不这么做（例如，有时候多机房多活需要按照业务属性路由到不同机房的web-server）。</li></ul></li></ul><h2 id="四、后端统一存储"><a href="#四、后端统一存储" class="headerlink" title="四、后端统一存储"></a>四、后端统一存储</h2><p><img src="/2019/01/20/session一致性架构设计实践/7.png" alt=""></p><ul><li>思路：将session存储在web-server后端的存储层，数据库或者缓存</li><li><p>优点：</p><ul><li>没有安全隐患</li><li>可以水平扩展，数据库/缓存水平切分即可</li><li>web-server重启或者扩容都不会有session丢失</li></ul></li><li><p>不足：增加了一次网络调用，并且需要修改应用代码</p><ul><li>对于db存储还是cache，个人推荐后者：session读取的频率会很高，数据库压力会比较大。如果有session高可用需求，cache可以做高可用，但大部分情况下session可以丢失，一般也不需要考虑高可用。</li></ul></li></ul><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><ul><li><p>保证session一致性的架构设计常见方法：</p><ul><li>session同步法：多台web-server相互同步数据</li><li>客户端存储法：一个用户只存储自己的数据</li><li>反向代理hash一致性：四层hash和七层hash都可以做，保证一个用户的请求落在一台web-server上</li><li>后端统一存储：web-server重启和扩容，session也不会丢失</li></ul></li><li><p>对于方案3和方案4，个人建议推荐后者：</p><ul><li>web层、service层无状态是大规模分布式系统设计原则之一，session属于状态，不宜放在web层</li><li>让专业的软件做专业的事情，web-server存session？还是让cache去做这样的事情吧</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;session一致性架构设计实践&quot;&gt;&lt;a href=&quot;#session一致性架构设计实践&quot; class=&quot;headerlink&quot; title=&quot;session一致性架构设计实践&quot;&gt;&lt;/a&gt;session一致性架构设计实践&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/20/session一致性架构设计实践/标题.gif&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="outside class" scheme="https://daizhe.net.cn/categories/outside-class/"/>
    
    
      <category term="outside class" scheme="https://daizhe.net.cn/tags/outside-class/"/>
    
  </entry>
  
  <entry>
    <title>tomcat会话服务</title>
    <link href="https://daizhe.net.cn/2019/01/20/tomcat%E4%BC%9A%E8%AF%9D%E6%9C%8D%E5%8A%A1/"/>
    <id>https://daizhe.net.cn/2019/01/20/tomcat会话服务/</id>
    <published>2019-01-20T03:35:27.812Z</published>
    <updated>2019-01-20T10:16:40.261Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tomcat-Session-Server"><a href="#Tomcat-Session-Server" class="headerlink" title="Tomcat Session Server"></a>Tomcat Session Server</h1><p><img src="/2019/01/20/tomcat会话服务/标题.png" alt=""><br><a id="more"></a></p><h2 id="session会话"><a href="#session会话" class="headerlink" title="session会话"></a>session会话</h2><ul><li>session(会话保持)<ul><li>session stick:调度器<ul><li>使用调度器的调度算法来解决问题，损害调度器的负载均衡效果，引入session单点即有一台服务器宕机都会造成数据的丢失。</li></ul></li><li>session replication cluster (sesssion复制集群)：后端服务器组织成集群<ul><li>将后端的服务器组织起来（单播，多播，广播等方式）将单个服务器的会话同步给集群中的其他服务器，从而使得用户的请求被调度到任何一个服务器上得到的session都是相同的（实现调度的服务器到后端被调度的服务器之间的解耦，实现将有状态变成了无状态实现按需进行调度）</li><li>劣势：每个节点都会持有集群中的所有的session信息，对内存资源的消耗非常大，同时对网络资源的占用也非常严重</li></ul></li><li>session server:后端服务器之后即存储服务器</li></ul></li></ul><hr><h3 id="session-server-后端服务器之后即存储服务器"><a href="#session-server-后端服务器之后即存储服务器" class="headerlink" title="session server:后端服务器之后即存储服务器"></a>session server:后端服务器之后即存储服务器</h3><ul><li><p>存储系统种类繁多</p><ul><li>Session Manager 需要专门添加并非内建</li></ul></li><li><p>存储系统性能高</p><ul><li>存储系统要保存session ，而session通常都是简单的数据，但是必须要具有流逝化的特性</li><li>session变化特别的频繁所以存储系统必须要做到快速的存取</li></ul></li><li><p>存储系统要有冗余能力</p><ul><li>存储系统一旦成为一个集中的session server后，将成为整个系统的单点</li></ul></li></ul><hr><ul><li>Cache 缓存：无持久能力（memcached）<ul><li>一般而言都是在内存当中或者即便实在磁盘上，通常系统重启后数据则将丢失，无法完成重构。</li></ul></li><li>Store 存储 (redis)<ul><li>数据的读写有可能是在内存中完成，但是本身却拥有持久存储功能即持久是必备功能</li></ul></li></ul><hr><p>memcached（缓存服务）</p><ul><li>缓存的数据的大小不可大于1M，如果数据大于1M则不被缓存</li><li>完全基于内存工作</li></ul><p>缓存系统使用场景</p><ul><li>服务器存储的系统存在热区</li><li>服务器的数据读多写少</li></ul><p>memcached特证</p><ul><li>协议简单</li><li>基于libevent的事件处理（单进程处理多路请求）</li><li>内置内存存储方式</li><li>memcached不互通信额分布式</li></ul><hr><p>范例：基于nginx实现负载均衡，实现mamcache会话缓存</p><p><img src="/2019/01/20/tomcat会话服务/tomcat负载均衡/负载.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">实验准备</span><br><span class="line">  三台主机</span><br><span class="line">    nginx_server      yum install nginx -y</span><br><span class="line">    tomcat_serverA    yum install java-11-openjdk-devel -y  &amp;&amp; yum install tomcat-admin-webapps tomcat-webapps tomcat-docs-webapp -y  yum install memcached -y</span><br><span class="line">    tomcat_serverB    yum install java-11-openjdk-devel -y  &amp;&amp; yum install tomcat-admin-webapps tomcat-webapps tomcat-docs-webapp -y  yum install memcached -y</span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">在两台tomcat上分别创建测试页面并定制虚拟主机</span><br><span class="line"></span><br><span class="line">tomcatA</span><br><span class="line">  ~]<span class="comment"># mkdir /data/webapps/myapp-v0.1</span></span><br><span class="line">  ~]<span class="comment"># cd /data/webapps/myapp-v0.1</span></span><br><span class="line">  myapp-v0.1]<span class="comment"># mkdir classes lib WEB-INF WETA-INF</span></span><br><span class="line">  myapp-v0.1]<span class="comment">#  vi index.jsp</span></span><br><span class="line">  &lt;%@ page language=<span class="string">"java"</span> %&gt;</span><br><span class="line">   &lt;html&gt;</span><br><span class="line">      &lt;head&gt;&lt;title&gt;TomcatA&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">       &lt;body&gt;</span><br><span class="line">         &lt;h1&gt;&lt;font color=<span class="string">"purple"</span>&gt;TomcatA.daizhe.com&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">            &lt;table align=<span class="string">"centre"</span> border=<span class="string">"1"</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">            &lt;% session.setAttribute(<span class="string">"a.com"</span>,<span class="string">"a.com"</span>); %&gt;</span><br><span class="line">              &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">             &lt;/tr&gt;</span><br><span class="line">             &lt;tr&gt;</span><br><span class="line">         &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">   &lt;/html&gt;</span><br><span class="line"></span><br><span class="line">  webapps]<span class="comment"># ln -sv myapp-v0.1 myapp</span></span><br><span class="line">   ~]<span class="comment"># tree /data</span></span><br><span class="line">  /data</span><br><span class="line">  └── webapps</span><br><span class="line">     ├── myapp -&gt; myapp-v0.1</span><br><span class="line">     └── myapp-v0.1</span><br><span class="line">          ├── classes</span><br><span class="line">          ├── index.jsp</span><br><span class="line">          ├── lib</span><br><span class="line">          ├── WEB-INF</span><br><span class="line">          └── WETA-INF</span><br><span class="line"><span class="comment">#定义虚拟主机使用别名访问</span></span><br><span class="line">   ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">   <span class="comment">#140行</span></span><br><span class="line">  &lt;Context path=<span class="string">"/myapp"</span> docBase=<span class="string">"/data/webapps/myapp"</span> reloadable=<span class="string">""</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#打开页面管理接口（manager app和 host manager）</span></span><br><span class="line">  ~]<span class="comment"># vim /etc/tomcat/tomcat-users.xml </span></span><br><span class="line">  &lt;tomcat-users&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-gui"</span>/&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"admin-gui"</span>/&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-script"</span>/&gt; </span><br><span class="line">  &lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"centos"</span> roles=<span class="string">"manager-gui,manager-script,admin-gui,admin-script"</span>/&gt;</span><br><span class="line">  &lt;/tomcat-users&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># systemctl start tomcat</span></span><br><span class="line">  ~]<span class="comment"># ss -tnl</span></span><br><span class="line"></span><br><span class="line">tomcatB</span><br><span class="line">  ~]<span class="comment"># tree /data</span></span><br><span class="line">  /data</span><br><span class="line">  └── webapps</span><br><span class="line">      └── myapp-v0.1</span><br><span class="line">          ├── classes</span><br><span class="line">          ├── index.jsp</span><br><span class="line">          ├── lib</span><br><span class="line">          ├── WEB-INF</span><br><span class="line">          └── WETA-INF</span><br><span class="line">  ~]<span class="comment"># vim /data/webapps/myapp-v0.1/index.jsp </span></span><br><span class="line">  &lt;%@ page language=<span class="string">"java"</span> %&gt;</span><br><span class="line">   &lt;html&gt;</span><br><span class="line">      &lt;head&gt;&lt;title&gt;TomcatA&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">       &lt;body&gt;</span><br><span class="line">         &lt;h1&gt;&lt;font color=<span class="string">"red"</span>&gt;TomcatB.daizhe.com&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">            &lt;table align=<span class="string">"centre"</span> border=<span class="string">"1"</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">            &lt;% session.setAttribute(<span class="string">"a.com"</span>,<span class="string">"a.com"</span>); %&gt;</span><br><span class="line">              &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">             &lt;/tr&gt;</span><br><span class="line">             &lt;tr&gt;</span><br><span class="line">         &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">   &lt;/html&gt;</span><br><span class="line"></span><br><span class="line">  webapps]<span class="comment"># ln -sv myapp-v0.1 myapp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义虚拟主机使用别名访问</span></span><br><span class="line">   ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">   <span class="comment">#140行</span></span><br><span class="line">  &lt;Context path=<span class="string">"/myapp"</span> docBase=<span class="string">"/data/webapps/myapp"</span> reloadable=<span class="string">""</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#打开页面管理接口（manager app和 host manager）</span></span><br><span class="line">  ~]<span class="comment"># vim /etc/tomcat/tomcat-users.xml </span></span><br><span class="line">  &lt;tomcat-users&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-gui"</span>/&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"admin-gui"</span>/&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-script"</span>/&gt; </span><br><span class="line">  &lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"centos"</span> roles=<span class="string">"manager-gui,manager-script,admin-gui,admin-script"</span>/&gt;</span><br><span class="line">  &lt;/tomcat-users&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># systemctl start tomcat</span></span><br><span class="line">  ~]<span class="comment"># ss -tnl</span></span><br></pre></td></tr></table></figure><ul><li>访问测试是否配置成功</li></ul><p><img src="/2019/01/20/tomcat会话服务/tomcat负载均衡/1.png" alt=""><br><img src="/2019/01/20/tomcat会话服务/tomcat负载均衡/5.png" alt=""></p><ul><li><p>tomcat默认不支持将session会话信息放进memcached中，需要借助第三方MSM（memcached session manager）,意思是将memcached当作session会话的后端的session管理器</p><ul><li><p>支持的存储程序</p><ul><li>memcached</li><li>redis</li><li>couchbase</li></ul></li><li><p>托管在github上地址：<a href="https://github.com/magro/memcached-session-manager" target="_blank" rel="noopener">https://github.com/magro/memcached-session-manager</a></p></li><li>配置参考手册：<a href="https://github.com/magro/memcached-session-manager/wiki/SetupAndConfiguration" target="_blank" rel="noopener">https://github.com/magro/memcached-session-manager/wiki/SetupAndConfiguration</a></li></ul></li></ul><p>配置tomcatA和tomcatB 可以实现两个tomcat可以使用两个memcached 实现两台memcached各存储部分session 会话信息，实现双活机制</p><p><img src="/2019/01/20/tomcat会话服务/1.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">tomcatA 安装memcached (base仓库)    监听的端口 tcp 11211 / udp 11211</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># yum install memcached -y</span></span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># rpm -ql memcached</span></span><br><span class="line">  /etc/sysconfig/memcached  <span class="comment">#配置文件</span></span><br><span class="line">  /usr/bin/memcached        <span class="comment">#命令执行文件</span></span><br><span class="line">  usr/lib/systemd/system/memcached.service  <span class="comment">#启动程序文件</span></span><br><span class="line"></span><br><span class="line">  查看memcached命令帮助</span><br><span class="line">  ~]<span class="comment"># memcached -h</span></span><br><span class="line">  -p &lt;num&gt;     <span class="comment"># 监听tcp 11211端口</span></span><br><span class="line">  -U &lt;num&gt;     <span class="comment"># 监听UDP 11211端口 ， 设置upd协议为0 表示关闭udp协议的端口</span></span><br><span class="line">  -l &lt;addr&gt;    <span class="comment"># 指定监听的地址</span></span><br><span class="line">  -d           <span class="comment"># 运行为守护进程  </span></span><br><span class="line">  -u &lt;username&gt; <span class="comment"># 指定运行的身份</span></span><br><span class="line">  -m &lt;num&gt;      <span class="comment"># 使用多大的内存空间当作缓存 ，默认为64M ，必须调大</span></span><br><span class="line">  -M            <span class="comment"># 内存耗尽禁用LRU 表示内存耗尽禁止新存储的数据存储</span></span><br><span class="line">  -c &lt;num&gt;      <span class="comment"># 最大并发连接数，默认为1024          </span></span><br><span class="line">  -v            <span class="comment"># 输出信息到前台</span></span><br><span class="line">  -vv           <span class="comment"># 详细</span></span><br><span class="line">  -vvv          <span class="comment"># 详详细   </span></span><br><span class="line">  -f &lt;factor&gt;   <span class="comment"># 增长因子 默认为1.25</span></span><br><span class="line">      </span><br><span class="line">  <span class="comment">#查看增长因子</span></span><br><span class="line">  <span class="comment">#~]# su - daizhe</span></span><br><span class="line">  <span class="comment">#~]$ memcached -vvv -m 256m -f 1.25</span></span><br><span class="line">  <span class="comment">#slab class   1: chunk size        96 perslab   10922</span></span><br><span class="line">  <span class="comment">#slab class   2: chunk size       120 perslab    8738</span></span><br><span class="line">  <span class="comment">#slab class   3: chunk size       152 perslab    6898</span></span><br><span class="line">  <span class="comment">#slab class   4: chunk size       192 perslab    5461</span></span><br><span class="line">  <span class="comment">#slab class   5: chunk size       240 perslab    4369</span></span><br><span class="line"></span><br><span class="line">编辑memcache的配置文件启动</span><br><span class="line"> ~]<span class="comment"># vim /etc/sysconfig/memcached </span></span><br><span class="line">  PORT=<span class="string">"11211"</span>      <span class="comment">#端口</span></span><br><span class="line">  USER=<span class="string">"memcached"</span>  <span class="comment">#运行身份</span></span><br><span class="line">  MAXCONN=<span class="string">"1024"</span>  </span><br><span class="line">  CACHESIZE=<span class="string">"256"</span>   <span class="comment">#内存空间</span></span><br><span class="line">  OPTIONS=<span class="string">"-f 1.1 -M"</span>  <span class="comment">#指定增长因子</span></span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># systemctl start memcached</span></span><br><span class="line">  ~]<span class="comment"># ss -tnl</span></span><br><span class="line">  11211</span><br><span class="line"></span><br><span class="line">安装c程序调用memcache依赖的库</span><br><span class="line"><span class="comment"># php程序员： php-pecl-memcache</span></span><br><span class="line"><span class="comment"># python程序员： python-memcached.noarch</span></span><br><span class="line"><span class="comment"># c程序员: libmemcached</span></span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># yum install libmemcached -y </span></span><br><span class="line"></span><br><span class="line">  使用telnet连接（memcached支持文本协议即纯文本的字符串）</span><br><span class="line">  ~]<span class="comment"># yum install telnet -y</span></span><br><span class="line">  ~]<span class="comment"># telnet 127.0.0.1 11211  </span></span><br><span class="line">  <span class="comment">#stats查看状态使用信息</span></span><br><span class="line"></span><br><span class="line">  设置一个键</span><br><span class="line">  <span class="built_in">set</span> mykey 123 60 6</span><br><span class="line">  daizhe</span><br><span class="line">  STORED</span><br><span class="line">  <span class="comment"># 键名：mykey</span></span><br><span class="line">  <span class="comment"># 值：123</span></span><br><span class="line">  <span class="comment"># 超时时长：60内有效</span></span><br><span class="line">  <span class="comment"># 指定字节数</span></span><br><span class="line"></span><br><span class="line">  查看已经存储的键值</span><br><span class="line">  get mykey</span><br><span class="line"></span><br><span class="line">获取memcached的信息</span><br><span class="line">  ~]<span class="comment"># memstat -h</span></span><br><span class="line">  --servers= <span class="comment">#指定服务器地址</span></span><br><span class="line">  ~]<span class="comment"># memstat --servers=127.0.0.1:11211</span></span><br><span class="line"></span><br><span class="line">dump出所有存储的键</span><br><span class="line">  ~]<span class="comment"># memdump --servers=127.0.0.1:11211</span></span><br><span class="line"></span><br><span class="line">清空所有的键</span><br><span class="line">  ~]<span class="comment"># memflush</span></span><br><span class="line"></span><br><span class="line">删除所有的键</span><br><span class="line">  ~]<span class="comment"># memrm</span></span><br><span class="line"></span><br><span class="line">更新键的时间戳</span><br><span class="line">  ~]<span class="comment"># memtouch</span></span><br><span class="line"></span><br><span class="line">判断存在性</span><br><span class="line">  ~]<span class="comment"># memexist</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tomcatA 安装memcached</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># yum install memcached -y</span></span><br><span class="line"></span><br><span class="line">编辑memcache的配置文件启动</span><br><span class="line"> ~]<span class="comment"># vim /etc/sysconfig/memcached </span></span><br><span class="line">  PORT=<span class="string">"11211"</span>      <span class="comment">#端口</span></span><br><span class="line">  USER=<span class="string">"memcached"</span>  <span class="comment">#运行身份</span></span><br><span class="line">  MAXCONN=<span class="string">"1024"</span>  </span><br><span class="line">  CACHESIZE=<span class="string">"256"</span>   <span class="comment">#内存空间</span></span><br><span class="line">  OPTIONS=<span class="string">"-f 1.1 -M"</span>  <span class="comment">#指定增长因子</span></span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># systemctl start memcached</span></span><br><span class="line">  ~]<span class="comment"># ss -tnl</span></span><br><span class="line">  11211</span><br></pre></td></tr></table></figure><hr><p>jar文件下载路径：<a href="http://repo1.maven.org/maven2/de/javakaffee/msm/memcached-session-manager/" target="_blank" rel="noopener">http://repo1.maven.org/maven2/de/javakaffee/msm/memcached-session-manager/</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">为tomcatA 节点和 tomcatB 节点的tomcat准备 jar文件</span><br><span class="line">  查看默认的tomcat的jar文件的存放路径</span><br><span class="line">  ~]<span class="comment"># rpm -ql tomcat-lib</span></span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># cd /usr/share/java/tomcat/    #所有的tomcat节点上都要放置jar文件</span></span><br><span class="line">  将所有的jar文件防止在此路径下</span><br></pre></td></tr></table></figure></p><p><img src="/2019/01/20/tomcat会话服务/2.png" alt=""><br><img src="/2019/01/20/tomcat会话服务/3.png" alt=""><br><img src="/2019/01/20/tomcat会话服务/4.png" alt=""></p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">配置tomcatA和tomcatB 节点的tomcat的配置文件（不要和tomcat_session 会话集群同时使用）</span><br><span class="line"></span><br><span class="line">tomcatA和tomcatB</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line"><span class="comment">#105</span></span><br><span class="line">      &lt;Engine name=<span class="string">"Catalina"</span> defaultHost=<span class="string">"localhost"</span> jvmRoute=<span class="string">"tcA"</span>&gt; <span class="comment">#两个节点做区分 tcA / tcB</span></span><br><span class="line"><span class="comment">#140行</span></span><br><span class="line">  &lt;Context path=<span class="string">"/myapp"</span> docBase=<span class="string">"/data/webapps/myapp"</span> reloadable=<span class="string">""</span>&gt;</span><br><span class="line">  &lt;Manager className=<span class="string">"de.javakaffee.web.msm.MemcachedBackupSessionManager"</span>    memcachedNodes=<span class="string">"172.18.135.1:11211,172.18.135.5:11211"</span></span><br><span class="line">    failoverNodes=<span class="string">"n1"</span></span><br><span class="line">    requestUriIgnorePattern=<span class="string">".*\.(ico|png|gif|jpg|css|js)$"</span>    transcoderFactoryClass=<span class="string">"de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory"</span></span><br><span class="line">    /&gt;</span><br><span class="line">&lt;/Context&gt;</span><br></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">启动节点中所有tamcat服务器并监控日志信息</span><br><span class="line">  ~]<span class="comment"># systemctl restart tomcat</span></span><br><span class="line"></span><br><span class="line">  ~]<span class="comment">#tail -f /var/log/tomcat/catalina.2019-01-20.log</span></span><br></pre></td></tr></table></figure><p>使用nginx调度测试</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Tomcat-Session-Server&quot;&gt;&lt;a href=&quot;#Tomcat-Session-Server&quot; class=&quot;headerlink&quot; title=&quot;Tomcat Session Server&quot;&gt;&lt;/a&gt;Tomcat Session Server&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/20/tomcat会话服务/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://daizhe.net.cn/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="https://daizhe.net.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>tomcat会话集群</title>
    <link href="https://daizhe.net.cn/2019/01/19/tomcat%E4%BC%9A%E8%AF%9D%E9%9B%86%E7%BE%A4/"/>
    <id>https://daizhe.net.cn/2019/01/19/tomcat会话集群/</id>
    <published>2019-01-19T09:56:29.471Z</published>
    <updated>2019-01-20T06:33:51.384Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tomcat-Session-Cluster"><a href="#Tomcat-Session-Cluster" class="headerlink" title="Tomcat Session Cluster"></a>Tomcat Session Cluster</h1><p><img src="/2019/01/19/tomcat会话集群/标题.png" alt=""><br><a id="more"></a></p><h2 id="session会话"><a href="#session会话" class="headerlink" title="session会话"></a>session会话</h2><ul><li>session(会话保持)<ul><li>session stick:调度器<ul><li>使用调度器的调度算法来解决问题，损害调度器的负载均衡效果，引入session单点即有一台服务器宕机都会造成数据的丢失。</li></ul></li><li>session replication cluster (sesssion复制集群)：后端服务器组织成集群<ul><li>将后端的服务器组织起来（单播，多播，广播等方式）将单个服务器的会话同步给集群中的其他服务器，从而使得用户的请求被调度到任何一个服务器上得到的session都是相同的（实现调度的服务器到后端被调度的服务器之间的解耦，实现将有状态变成了无状态实现按需进行调度）</li><li>劣势：每个节点都会持有集群中的所有的session信息，对内存资源的消耗非常大，同时对网络资源的占用也非常严重</li></ul></li><li>session server:后端服务器之后即存储服务器</li></ul></li></ul><h3 id="session-replication-cluster-sesssion复制集群-：后端服务器组织成集群"><a href="#session-replication-cluster-sesssion复制集群-：后端服务器组织成集群" class="headerlink" title="session replication cluster (sesssion复制集群)：后端服务器组织成集群"></a>session replication cluster (sesssion复制集群)：后端服务器组织成集群</h3><ul><li><p>tomcat中自身就带有了一种cluster机制（集群仅是针对于保持用户session会话问题上实现集群）</p><ul><li>将后端多个正常工作的主机在session管理问题上将其基于专有的网络接口或者面向客户端的通用网络接口构建出一个会话集群，此集群可以实现让每一个节点获得会话信息后通过所谓通讯当中的多播机制或者称之为组播机制（Multicast），将自己所获得的会话信息多播到事先约定的多播信道上，实现在同一多播网络中的其他主机获取到相关的会话信息，并将其合并到本地已有的会话信息中。<ul><li>构建通讯集群的方式<ul><li>单播：效率最低</li><li>多播：多播方式最优，可以配置同一集群中的主机，大家共同使用同一个多播地址（多播域），而后在规定的多播第之内发送多播信息，只有同一多播地址上的主机才可以收到此会话信息。</li><li>广播：后端主机获得会话信息后直接以广播的方式发送到其他后端主机上（但是播及面太大，造成影响范围太大）。</li></ul></li></ul></li></ul></li><li><p>tomcat本身就是java语言编写，所以具有完全面向对象的特性，必须使用类来完成任何功能，包括会话管理，在tomcat上会话管理组件称为session manager (会话管理器)，在tomcat上有好几种会话管理机制，统称为会话管理器</p><ul><li><p>默认使用的是持久会话管理</p><ul><li>tomcat接收到客户的session会话信息，是先保存在内存中，会周期性的同步在磁盘上进行数据的保存（所以将tomcat重启后，被正常存储好的会话信息会被将回复回来，但是在未到周期同步在磁盘上的session会话信息，也就是存在内存中的会话尚未同步在磁盘上的会话信息在tomcat宕机时会丢失session会话信息）</li><li>持久会话管理，一定会影响磁盘的IO性能（受本地的磁盘IO限制）</li></ul></li><li><p><code>Delta Session Manager 会话管理器</code></p><ul><li>增量变动之意</li><li>每一个节点自己后来生成的session会话增量变量的信息，将增量的会话变动通过多播方式，多播到多播域内，同一多播域中的其他主机也存在相同的Delta Session Manager 接收其他主机在多播域内变动的session会话信息，并且合并在本地的session存储中</li><li>劣势：session manager 中的每个节点都要保存所有的会话信息并且通常是保存在内存中，一旦客户端访问的数量增多时会使得后端session manager存储会话的节点中都存在大量的会话信息，会使得会话无法被扩展。</li></ul></li><li><p>Backup Session Manager 备份会话管理器</p><ul><li>每一个会话节点（session manager）在保存会话和生成会话时，会将会话同传给集群中的其他一个节点或者说是有限节点，而不是所有会话集群中的所有节点，因为每个节点禁止有所有会话节点中一定比例的会话信息。</li><li>此类会话管理须实现前端调度的会话绑定，且保持会话管理的节点一但宕机后可以将此会话信息保持 发送到另一台备份会话信息的会话管理器上（而不是任何一个会话管理节点）。此类会话管理，需要管理员精心介入到调度拓扑结构中。</li><li>也就是此类会话管理无会话动态性需要管理员明确管理指定，如有宕机需精确的重定向，那台会话管理节点备份了哪台会话节点的会话信息。</li><li>打破了不会让每一个节点持有整个集群的session会话的信息</li></ul></li><li><p><code>自定义会话管理器</code></p><ul><li>将tomcat生成的会话信息不记录在服务器的内存中，而是将会话信息存储到外部适配的缓存的服务器上比如mamcached、redis</li><li>一旦有session会话保持时通过是配置直接保存在外部存储上，这样则使得tomcat可以是同Session_server保存用户的会话信息</li></ul></li></ul></li></ul><p>范例：Delta Session Manager 会话管理器<br>参考文档：<a href="http://tomcat.apache.org/tomcat-7.0-doc/cluster-howto.html" target="_blank" rel="noopener">http://tomcat.apache.org/tomcat-7.0-doc/cluster-howto.html</a><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">配置启用集群，将下列配置放置于&lt;engine&gt;或&lt;host&gt;中；</span><br><span class="line"></span><br><span class="line">&lt;Cluster className=<span class="string">"org.apache.catalina.ha.tcp.SimpleTcpCluster"</span>  <span class="comment">#属性指明使用的类</span></span><br><span class="line">channelSendOptions=<span class="string">"8"</span>&gt;   </span><br><span class="line"></span><br><span class="line">&lt;Manager className=<span class="string">"org.apache.catalina.ha.session.DeltaManager"</span>   <span class="comment">#指定使用的会话管理器</span></span><br><span class="line">expireSessionsOnShutdown=<span class="string">"false"</span>          <span class="comment">#DeltaManager 用到的属性</span></span><br><span class="line">notifyListenersOnReplication=<span class="string">"true"</span>/&gt;     <span class="comment">#DeltaManager 用到的属性</span></span><br><span class="line"></span><br><span class="line">&lt;Channel className=<span class="string">"org.apache.catalina.tribes.group.GroupChannel"</span>&gt;     <span class="comment">#定义多播信息及集群通讯信道</span></span><br><span class="line"> &lt;Membership className=<span class="string">"org.apache.catalina.tribes.membership.McastService"</span> <span class="comment">#定义集群成员的关系</span></span><br><span class="line">address=<span class="string">"228.0.0.4"</span>   <span class="comment">#多播地址，D类地址用来组播（224~239），多播即大家使用同一个D类中相同的一个地址</span></span><br><span class="line">port=<span class="string">"45564"</span>          <span class="comment">#多播端口</span></span><br><span class="line">frequency=<span class="string">"500"</span>       <span class="comment">#每个多长时间发一次心跳 默认500毫秒</span></span><br><span class="line">dropTime=<span class="string">"3000"</span>/&gt;     <span class="comment">#多长时间内收不到节点的心跳 判断为超时，从而从集群成员中剔除</span></span><br><span class="line"> &lt;Receiver className=<span class="string">"org.apache.catalina.tribes.transport.nio.NioReceiver"</span> <span class="comment">#定义如何接收传递的session会话信息</span></span><br><span class="line">  address=<span class="string">"auto"</span></span><br><span class="line">  port=<span class="string">"4000"</span>         <span class="comment">#监听的端口，如果有冲突，自动切换（4000~4100）</span></span><br><span class="line">  autoBind=<span class="string">"100"</span>      <span class="comment">#自动绑定，如有错误自动重新绑定</span></span><br><span class="line">  selectorTimeout=<span class="string">"5000"</span><span class="comment">#选择器的超时时长默认5秒</span></span><br><span class="line">  maxThreads=<span class="string">"6"</span>/&gt;      <span class="comment">#最大线程数，默认值为6，已经足够使用</span></span><br><span class="line">     &lt;Sender className=<span class="string">"org.apache.catalina.tribes.transport.ReplicationTransmitter"</span>&gt;   <span class="comment">#向外发送心跳以及session会话信息</span></span><br><span class="line"> &lt;Transport className=<span class="string">"org.apache.catalina.tribes.transport.nio.PooledParallelSender"</span>/&gt; <span class="comment">#心跳大佛那个的方式轮询</span></span><br><span class="line"> &lt;/Sender&gt;</span><br><span class="line"> &lt;Interceptor className=<span class="string">"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"</span>/&gt;  <span class="comment">#探测器校验信息是否出错</span></span><br><span class="line"> &lt;Interceptor className=<span class="string">"org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor"</span>/&gt;</span><br><span class="line">&lt;/Channel&gt;</span><br><span class="line"></span><br><span class="line">    &lt;Valve className=<span class="string">"org.apache.catalina.ha.tcp.ReplicationValve"</span>    <span class="comment">#定义过滤器，过滤复制集群相关的信息</span></span><br><span class="line">filter=<span class="string">""</span>/&gt;</span><br><span class="line">&lt;Valve className=<span class="string">"org.apache.catalina.ha.session.JvmRouteBinderValve"</span>/&gt;   <span class="comment">#绑定JVM的路由信息</span></span><br><span class="line"></span><br><span class="line">   &lt;Deployer className=<span class="string">"org.apache.catalina.ha.deploy.FarmWarDeployer"</span></span><br><span class="line">tempDir=<span class="string">"/tmp/war-temp/"</span></span><br><span class="line">  deployDir=<span class="string">"/tmp/war-deploy/"</span></span><br><span class="line">watchDir=<span class="string">"/tmp/war-listen/"</span></span><br><span class="line">watchEnabled=<span class="string">"false"</span>/&gt;</span><br><span class="line"></span><br><span class="line">&lt;ClusterListener className=<span class="string">"org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener"</span>/&gt;   <span class="comment">#集群侦听器，确保集群相关的资源仅被集群中的成员所使用</span></span><br><span class="line">&lt;ClusterListener className=<span class="string">"org.apache.catalina.ha.session.ClusterSessionListener"</span>/&gt;</span><br><span class="line">&lt;/Cluster&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">会话集群配置</span><br><span class="line"></span><br><span class="line">第一步：</span><br><span class="line">配置session集群(修改所有的tomcat服务器会话集群的配置文件)</span><br><span class="line"> ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">105行 添加标注信息</span><br><span class="line">    &lt;Engine name=<span class="string">"Catalina"</span> defaultHost=<span class="string">"localhost"</span> jvmRoute=<span class="string">"tcA"</span>&gt;<span class="comment">#每个节点上的标识不要相同</span></span><br><span class="line">128行</span><br><span class="line"> &lt;Host name=<span class="string">"localhost"</span>  appBase=<span class="string">"webapps"</span></span><br><span class="line">            unpackWARs=<span class="string">"true"</span> autoDeploy=<span class="string">"true"</span>&gt;</span><br><span class="line">        &lt;Cluster className=<span class="string">"org.apache.catalina.ha.tcp.SimpleTcpCluster"</span></span><br><span class="line">                channelSendOptions=<span class="string">"8"</span>&gt;</span><br><span class="line">        &lt;Manager className=<span class="string">"org.apache.catalina.ha.session.DeltaManager"</span></span><br><span class="line">                expireSessionsOnShutdown=<span class="string">"false"</span></span><br><span class="line">                notifyListenersOnReplication=<span class="string">"true"</span>/&gt;</span><br><span class="line">        &lt;Channel className=<span class="string">"org.apache.catalina.tribes.group.GroupChannel"</span>&gt;</span><br><span class="line">        &lt;Membership className=<span class="string">"org.apache.catalina.tribes.membership.McastService"</span></span><br><span class="line">                address=<span class="string">"228.0.100.10"</span></span><br><span class="line">                port=<span class="string">"45564"</span></span><br><span class="line">                frequency=<span class="string">"500"</span></span><br><span class="line">                dropTime=<span class="string">"3000"</span>/&gt;</span><br><span class="line">        &lt;Receiver className=<span class="string">"org.apache.catalina.tribes.transport.nio.NioReceiver"</span></span><br><span class="line">                address=<span class="string">"auto"</span></span><br><span class="line">                port=<span class="string">"4000"</span></span><br><span class="line">                autoBind=<span class="string">"100"</span></span><br><span class="line">                selectorTimeout=<span class="string">"5000"</span>  </span><br><span class="line">                maxThreads=<span class="string">"6"</span>/&gt;</span><br><span class="line">        &lt;Sender className=<span class="string">"org.apache.catalina.tribes.transport.ReplicationTransmitter"</span>&gt;</span><br><span class="line">        &lt;Transport className=<span class="string">"org.apache.catalina.tribes.transport.nio.PooledParallelSender"</span>/&gt;</span><br><span class="line">        &lt;/Sender&gt;</span><br><span class="line">        &lt;Interceptor className=<span class="string">"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector"</span>/&gt;</span><br><span class="line">        &lt;Interceptor className=<span class="string">"org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor"</span>/&gt;</span><br><span class="line">   &lt;/Channel&gt;</span><br><span class="line">        &lt;Valve className=<span class="string">"org.apache.catalina.ha.tcp.ReplicationValve"</span></span><br><span class="line">                filter=<span class="string">""</span>/&gt;</span><br><span class="line">        &lt;Valve className=<span class="string">"org.apache.catalina.ha.session.JvmRouteBinderValve"</span>/&gt;</span><br><span class="line">        &lt;Deployer className=<span class="string">"org.apache.catalina.ha.deploy.FarmWarDeployer"</span></span><br><span class="line">                tempDir=<span class="string">"/tmp/war-temp/"</span></span><br><span class="line">                deployDir=<span class="string">"/tmp/war-deploy/"</span></span><br><span class="line">                watchDir=<span class="string">"/tmp/war-listen/"</span></span><br><span class="line">                watchEnabled=<span class="string">"false"</span>/&gt;</span><br><span class="line">        &lt;ClusterListener className=<span class="string">"org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener"</span>/&gt;</span><br><span class="line">        &lt;ClusterListener className=<span class="string">"org.apache.catalina.ha.session.ClusterSessionListener"</span>/&gt;</span><br><span class="line">        &lt;/Cluster&gt;</span><br><span class="line"></span><br><span class="line">第二步：</span><br><span class="line">拷贝 web.xml文件到自己定义的路径别名的虚拟主机中</span><br><span class="line">(修改所有的tomcat服务器会话集群虚拟主机的web.xml)</span><br><span class="line">~]<span class="comment"># cp /etc/tomcat/web.xml /data/webapps/myapp/WEB-INF/</span></span><br><span class="line">WEB-INF]<span class="comment"># pwd</span></span><br><span class="line">/data/webapps/myapp/WEB-INF</span><br><span class="line">23行</span><br><span class="line">&lt;distributable/&gt;<span class="comment">#必须虚拟主机路经下存在web.xml 并且改文件中存在&lt;distributable/&gt; 才可使用会话集群</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第三步：</span><br><span class="line">集群成员间的时间必须同步</span><br><span class="line">~] <span class="comment"># ntpdate</span></span><br><span class="line"></span><br><span class="line">注意：此时调度器应该继续使用会话粘性，保证客户端请求都调度到一台服务器，因为后端的会话集群服务器同步会话信息并非实时同步。这样可以确保当给客户端提供会话的主机宕机后也可以让令外会话集权中的服务器继续保持会话</span><br><span class="line"></span><br><span class="line">第四步：</span><br><span class="line">重新启动会话集群中的tomcat服务器</span><br><span class="line">~]<span class="comment"># systemctl start tomcat</span></span><br><span class="line"></span><br><span class="line">~]<span class="comment"># tail -f /var/log/tomcat/catalina.2019-01-20.log </span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">调度器</span><br><span class="line">使用nginx调度测试</span><br><span class="line">~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line"> upstream tcserver &#123;</span><br><span class="line">        server 172.18.135.1:8080;</span><br><span class="line">        server 172.18.135.5:8080;</span><br><span class="line">        &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://tcserver;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">~]<span class="comment"># nginx -t</span></span><br><span class="line">~]<span class="comment"># nginx -s reload</span></span><br></pre></td></tr></table></figure><p>测试(已经实现会话保持和nginx默认的轮询调度)<br><img src="/2019/01/19/tomcat会话集群/1.png" alt=""><br><img src="/2019/01/19/tomcat会话集群/2.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Tomcat-Session-Cluster&quot;&gt;&lt;a href=&quot;#Tomcat-Session-Cluster&quot; class=&quot;headerlink&quot; title=&quot;Tomcat Session Cluster&quot;&gt;&lt;/a&gt;Tomcat Session Cluster&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/19/tomcat会话集群/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://daizhe.net.cn/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="https://daizhe.net.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>tomcat负载均衡--nginx | httpd</title>
    <link href="https://daizhe.net.cn/2019/01/19/tomcat%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
    <id>https://daizhe.net.cn/2019/01/19/tomcat负载均衡/</id>
    <published>2019-01-19T04:03:46.328Z</published>
    <updated>2019-01-19T11:47:39.682Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tomcat负载均衡及会话保持–nginx-httpd"><a href="#tomcat负载均衡及会话保持–nginx-httpd" class="headerlink" title="tomcat负载均衡及会话保持–nginx | httpd"></a>tomcat负载均衡及会话保持–nginx | httpd</h1><p><img src="/2019/01/19/tomcat负载均衡/标题.png" alt=""><br><a id="more"></a></p><h2 id="session会话"><a href="#session会话" class="headerlink" title="session会话"></a>session会话</h2><ul><li>session(会话保持)<ul><li>session stick:调度器<ul><li>使用调度器的调度算法来解决问题，损害调度器的负载均衡效果，引入session单点即有一台服务器宕机都会造成数据的丢失。</li></ul></li><li>session replication cluster (sesssion复制集群)：后端服务器组织成集群<ul><li>将后端的服务器组织起来（单播，多播，广播等方式）将单个服务器的会话同步给集群中的其他服务器，从而使得用户的请求被调度到任何一个服务器上得到的session都是相同的（实现调度的服务器到后端被调度的服务器之间的解耦，实现将有状态变成了无状态实现按需进行调度）</li><li>劣势：每个节点都会持有集群中的所有的session信息，对内存资源的消耗非常大，同时对网络资源的占用也非常严重</li></ul></li><li>session server:后端服务器之后即存储服务器</li></ul></li></ul><p>如果对tomcat实现负载均衡调度，一定要考虑到会话保持</p><h2 id="如何对tomcat实现负载均衡（-session-stick-调度器）"><a href="#如何对tomcat实现负载均衡（-session-stick-调度器）" class="headerlink" title="如何对tomcat实现负载均衡（ session stick:调度器）"></a>如何对tomcat实现负载均衡（ session stick:调度器）</h2><p><img src="/2019/01/19/tomcat负载均衡/负载.png" alt=""></p><h3 id="范例：使用nginx实现负载均衡"><a href="#范例：使用nginx实现负载均衡" class="headerlink" title="范例：使用nginx实现负载均衡"></a><code>范例：使用nginx实现负载均衡</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line">实验准备</span><br><span class="line">  三台主机</span><br><span class="line">    nginx_server      yum install nginx -y</span><br><span class="line">    tomcat_serverA    yum install java-11-openjdk-devel -y  &amp;&amp; yum install tomcat-admin-webapps tomcat-webapps tomcat-docs-webapp -y </span><br><span class="line">    tomcat_serverB    yum install java-11-openjdk-devel -y  &amp;&amp; yum install tomcat-admin-webapps tomcat-webapps tomcat-docs-webapp -y </span><br><span class="line">  </span><br><span class="line"></span><br><span class="line">在两台tomcat上分别创建测试页面并定制虚拟主机</span><br><span class="line"></span><br><span class="line">tomcatA</span><br><span class="line">  ~]<span class="comment"># mkdir /data/webapps/myapp-v0.1</span></span><br><span class="line">  ~]<span class="comment"># cd /data/webapps/myapp-v0.1</span></span><br><span class="line">  myapp-v0.1]<span class="comment"># mkdir classes lib WEB-INF WETA-INF</span></span><br><span class="line">  myapp-v0.1]<span class="comment">#  vi index.jsp</span></span><br><span class="line">  &lt;%@ page language=<span class="string">"java"</span> %&gt;</span><br><span class="line">   &lt;html&gt;</span><br><span class="line">      &lt;head&gt;&lt;title&gt;TomcatA&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">       &lt;body&gt;</span><br><span class="line">         &lt;h1&gt;&lt;font color=<span class="string">"purple"</span>&gt;TomcatA.daizhe.com&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">            &lt;table align=<span class="string">"centre"</span> border=<span class="string">"1"</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">            &lt;% session.setAttribute(<span class="string">"a.com"</span>,<span class="string">"a.com"</span>); %&gt;</span><br><span class="line">              &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">             &lt;/tr&gt;</span><br><span class="line">             &lt;tr&gt;</span><br><span class="line">         &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">   &lt;/html&gt;</span><br><span class="line"></span><br><span class="line">  webapps]<span class="comment"># ln -sv myapp-v0.1 myapp</span></span><br><span class="line">   ~]<span class="comment"># tree /data</span></span><br><span class="line">  /data</span><br><span class="line">  └── webapps</span><br><span class="line">     ├── myapp -&gt; myapp-v0.1</span><br><span class="line">     └── myapp-v0.1</span><br><span class="line">          ├── classes</span><br><span class="line">          ├── index.jsp</span><br><span class="line">          ├── lib</span><br><span class="line">          ├── WEB-INF</span><br><span class="line">          └── WETA-INF</span><br><span class="line"><span class="comment">#定义虚拟主机使用别名访问</span></span><br><span class="line">   ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">   <span class="comment">#140行</span></span><br><span class="line">  &lt;Context path=<span class="string">"/myapp"</span> docBase=<span class="string">"/data/webapps/myapp"</span> reloadable=<span class="string">""</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#打开页面管理接口（manager app和 host manager）</span></span><br><span class="line">  ~]<span class="comment"># vim /etc/tomcat/tomcat-users.xml </span></span><br><span class="line">  &lt;tomcat-users&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-gui"</span>/&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"admin-gui"</span>/&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-script"</span>/&gt; </span><br><span class="line">  &lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"centos"</span> roles=<span class="string">"manager-gui,manager-script,admin-gui,admin-script"</span>/&gt;</span><br><span class="line">  &lt;/tomcat-users&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># systemctl start tomcat</span></span><br><span class="line">  ~]<span class="comment"># ss -tnl</span></span><br><span class="line"></span><br><span class="line">tomcatB</span><br><span class="line">  ~]<span class="comment"># tree /data</span></span><br><span class="line">  /data</span><br><span class="line">  └── webapps</span><br><span class="line">      └── myapp-v0.1</span><br><span class="line">          ├── classes</span><br><span class="line">          ├── index.jsp</span><br><span class="line">          ├── lib</span><br><span class="line">          ├── WEB-INF</span><br><span class="line">          └── WETA-INF</span><br><span class="line">  ~]<span class="comment"># vim /data/webapps/myapp-v0.1/index.jsp </span></span><br><span class="line">  &lt;%@ page language=<span class="string">"java"</span> %&gt;</span><br><span class="line">   &lt;html&gt;</span><br><span class="line">      &lt;head&gt;&lt;title&gt;TomcatA&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">       &lt;body&gt;</span><br><span class="line">         &lt;h1&gt;&lt;font color=<span class="string">"red"</span>&gt;TomcatB.daizhe.com&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">            &lt;table align=<span class="string">"centre"</span> border=<span class="string">"1"</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">            &lt;% session.setAttribute(<span class="string">"a.com"</span>,<span class="string">"a.com"</span>); %&gt;</span><br><span class="line">              &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">             &lt;/tr&gt;</span><br><span class="line">             &lt;tr&gt;</span><br><span class="line">         &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">   &lt;/html&gt;</span><br><span class="line"></span><br><span class="line">  webapps]<span class="comment"># ln -sv myapp-v0.1 myapp</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#定义虚拟主机使用别名访问</span></span><br><span class="line">   ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">   <span class="comment">#140行</span></span><br><span class="line">  &lt;Context path=<span class="string">"/myapp"</span> docBase=<span class="string">"/data/webapps/myapp"</span> reloadable=<span class="string">""</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#打开页面管理接口（manager app和 host manager）</span></span><br><span class="line">  ~]<span class="comment"># vim /etc/tomcat/tomcat-users.xml </span></span><br><span class="line">  &lt;tomcat-users&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-gui"</span>/&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"admin-gui"</span>/&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-script"</span>/&gt; </span><br><span class="line">  &lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"centos"</span> roles=<span class="string">"manager-gui,manager-script,admin-gui,admin-script"</span>/&gt;</span><br><span class="line">  &lt;/tomcat-users&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># systemctl start tomcat</span></span><br><span class="line">  ~]<span class="comment"># ss -tnl</span></span><br></pre></td></tr></table></figure><ul><li>访问测试是否配置成功</li></ul><p><img src="/2019/01/19/tomcat负载均衡/1.png" alt=""><br><img src="/2019/01/19/tomcat负载均衡/5.png" alt=""></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">使用nginx实现客户端的请求完全向后端代理</span><br><span class="line">nginx_server</span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">  upstream tcserver &#123;</span><br><span class="line">        server 172.18.135.1:8080; <span class="comment">#tomcat A 地址</span></span><br><span class="line">        server 172.18.135.5:8080; <span class="comment">#tomcat B 地址</span></span><br><span class="line">        &#125;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://tcserver/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br><span class="line">  ~]<span class="comment"># ss -tnl</span></span><br></pre></td></tr></table></figure><ul><li>客户端测试查看（此时是不能保持session会话,服务器认为是不同的session）</li></ul><p><img src="/2019/01/19/tomcat负载均衡/3.png" alt=""><br><img src="/2019/01/19/tomcat负载均衡/4.png" alt=""><br><img src="/2019/01/19/tomcat负载均衡/6.png" alt=""><br><img src="/2019/01/19/tomcat负载均衡/7.png" alt=""></p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">利用nginx的<span class="built_in">hash</span>算法实现会话绑定</span><br><span class="line"><span class="comment">#基于一致性BASH算法实现会话绑定</span></span><br><span class="line">nginx_server</span><br><span class="line">   upstream tcserver &#123;</span><br><span class="line">        <span class="built_in">hash</span> <span class="variable">$remote_addr</span> consistent;</span><br><span class="line">        server 172.18.135.1:8080;</span><br><span class="line">        server 172.18.135.5:8080;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br></pre></td></tr></table></figure><ul><li>客户端测试（怎么刷新都会是一个tomcat服务器响应，认为是一个客户端）<ul><li>但是这用基于bash的机制是存在劣势的，万一响应的服务器宕机则客户端则无法接收到响应</li></ul></li></ul><p><img src="/2019/01/19/tomcat负载均衡/8.png" alt=""><br><img src="/2019/01/19/tomcat负载均衡/8.png" alt=""></p><hr><h3 id="范例：使用http实现负载均衡"><a href="#范例：使用http实现负载均衡" class="headerlink" title="范例：使用http实现负载均衡"></a><code>范例：使用http实现负载均衡</code></h3><ul><li>httpd也可以实现负载均衡以及会话保持，甚至支持coocki级别的会话保持<ul><li>持续支持的调度算法（lbmethod）<ul><li>bytraffic:后端服务器流量大小承载调度（流量小被调度）</li><li>byrequests:根据请求调度，不考虑后端服务器的繁忙程度（轮询）</li><li>by business ：商业版本支持</li></ul></li></ul></li></ul><p>参考手册：<a href="http://httpd.apache.org/docs/2.4/howto/reverse_proxy.html" target="_blank" rel="noopener">http://httpd.apache.org/docs/2.4/howto/reverse_proxy.html</a></p><h4 id="方式1-http协议"><a href="#方式1-http协议" class="headerlink" title="方式1:http协议"></a>方式1:http协议</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#httpd做tomcat前端调度支持的协议（http\ajp 8009）</span></span><br><span class="line"><span class="comment">#nginx做tomcat前端调度支持的协议（http）</span></span><br><span class="line">httpd_server httpd协议</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># vim /etc/httpd/conf.d/tomcat-cluster.conf</span></span><br><span class="line"></span><br><span class="line">  &lt;proxy balancer://tcsrvs&gt;</span><br><span class="line">  BalancerMember http://172.18.135.1:8080 loadfactor=2  <span class="comment">#定义负载因子如果不定义默认都为1</span></span><br><span class="line">  BalancerMember http://172.18.135.5:8080</span><br><span class="line">  ProxySet lbmethod=byrequests</span><br><span class="line">  &lt;/Proxy&gt;</span><br><span class="line"></span><br><span class="line">  &lt;VirtualHost *:80&gt;</span><br><span class="line">        ServerName www.centos.com    <span class="comment">#nginx主机名   </span></span><br><span class="line">        ProxyVia On</span><br><span class="line">        ProxyRequests Off</span><br><span class="line">        ProxyPreserveHost On</span><br><span class="line">  &lt;Proxy *&gt;</span><br><span class="line">        Require all granted</span><br><span class="line">  &lt;/Proxy&gt;</span><br><span class="line">        ProxyPass / balancer://tcsrvs/</span><br><span class="line">        ProxyPassReverse / balancer://tcsrvs/</span><br><span class="line">  &lt;Location /&gt;</span><br><span class="line">        Require all granted</span><br><span class="line">  &lt;/Location&gt;</span><br><span class="line">  &lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># httpd -t</span></span><br><span class="line">  ~]<span class="comment"># systemctl start httpd</span></span><br></pre></td></tr></table></figure><ul><li>访问测试（此时保证不了会话绑定）</li></ul><p><img src="/2019/01/19/tomcat负载均衡/9.png" alt=""><br><img src="/2019/01/19/tomcat负载均衡/10.png" alt=""><br><img src="/2019/01/19/tomcat负载均衡/11.png" alt=""><br><img src="/2019/01/19/tomcat负载均衡/12.png" alt=""></p><h4 id="方式2：ajp协议"><a href="#方式2：ajp协议" class="headerlink" title="方式2：ajp协议"></a>方式2：ajp协议</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">httpd_server ajp协议</span><br><span class="line">&lt;proxy balancer://tcsrvs&gt;</span><br><span class="line">BalancerMember ajp://172.18.100.67:8009</span><br><span class="line">BalancerMember ajp://172.18.100.68:8009</span><br><span class="line">ProxySet lbmethod=byrequests</span><br><span class="line">&lt;/Proxy&gt;</span><br><span class="line"></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">ServerName lb.magedu.com</span><br><span class="line">ProxyVia On</span><br><span class="line">ProxyRequests Off</span><br><span class="line">ProxyPreserveHost On</span><br><span class="line">&lt;Proxy *&gt;</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Proxy&gt;</span><br><span class="line">ProxyPass / balancer://tcsrvs/</span><br><span class="line">ProxyPassReverse / balancer://tcsrvs/</span><br><span class="line">&lt;Location /&gt;</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Location&gt;</span><br><span class="line">&lt;Location /balancer-manager&gt;</span><br><span class="line">SetHandler balancer-manager</span><br><span class="line">ProxyPass !</span><br><span class="line">Require all granted</span><br><span class="line">&lt;/Location&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure><h3 id="会话粘性（httpd基于cookie的会话粘性）"><a href="#会话粘性（httpd基于cookie的会话粘性）" class="headerlink" title="会话粘性（httpd基于cookie的会话粘性）"></a>会话粘性（httpd基于cookie的会话粘性）</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#httpd不支持客户端地址的粘性</span></span><br><span class="line"><span class="comment">#httpd是根据客户端的cookie做会话粘性</span></span><br><span class="line">httpd服务保持会话粘性：</span><br><span class="line">  <span class="comment">#当服务器第一次收到客户端的请求给他设定cookie时候，在这个cookie中把原有值之外额外设置添加一个对应的键（键名可以自己定义），值则是调度器第一次挑选要负载用户请求的后端服务器的名称，随后用户每后来的访问一定默认会带着cookie,而人为定义之后cookie之中是带有人为设置的键和值的对应信息的（不是基于原ip绑定，而是实现人为的会话中的cookie中插入的键值一致性实现的）</span></span><br><span class="line"></span><br><span class="line">Header add Set-Cookie <span class="string">"ROUTEID=.%&#123;BALANCER_WORKER_ROUTE&#125;e; path=/"</span> env=BALANCER_ROUTE_CHANGED</span><br><span class="line"></span><br><span class="line">Header add Set-Cookie <span class="comment">#给客户端设置的cookie</span></span><br><span class="line">  ROUTEID= <span class="comment">#键名</span></span><br><span class="line">  .%&#123;BALANCER_WORKER_ROUTE&#125;e  <span class="comment">#调度服务器挑选出后端服务器</span></span><br><span class="line">  path= <span class="comment">#指定会话cookie的适用范围</span></span><br></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">编辑调度器httpd_server设置会话粘性</span><br><span class="line">  ~]<span class="comment"># vim /etc/httpd/conf.d/tomcat-cluster.conf </span></span><br><span class="line">  Header add Set-Cookie <span class="string">"ROUTEID=.%&#123;BALANCER_WORKER_ROUTE&#125;e; path=/"</span> env=BALANCER_ROUTE_CHANGED</span><br><span class="line">  &lt;proxy balancer://tcsrvs&gt;BalancerMember http://172.18.135.1:8080 loadfactor=2 route=TomcatA </span><br><span class="line">  BalancerMember http://172.18.135.5:8080 route=TomcatA loadfactor=1</span><br><span class="line">  ProxySet lbmethod=byrequests</span><br><span class="line">  ProxySet stickysession=ROUTEID</span><br><span class="line">  &lt;/Proxy&gt;</span><br><span class="line"></span><br><span class="line">  &lt;VirtualHost *:80&gt;</span><br><span class="line">        ServerName www.centos.com</span><br><span class="line">        ProxyVia On</span><br><span class="line">        ProxyRequests Off</span><br><span class="line">        ProxyPreserveHost On</span><br><span class="line">  &lt;Proxy *&gt;</span><br><span class="line">        Require all granted</span><br><span class="line">  &lt;/Proxy&gt;</span><br><span class="line">        ProxyPass / balancer://tcsrvs/</span><br><span class="line">        ProxyPassReverse / balancer://tcsrvs/</span><br><span class="line">  &lt;Location /&gt;</span><br><span class="line">        Require all granted</span><br><span class="line">  &lt;/Location&gt;</span><br><span class="line">  &lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># httpd -t</span></span><br><span class="line">  ~]<span class="comment"># systemctl restart httpd</span></span><br></pre></td></tr></table></figure><p>客户端测试（已经实现基于cookie的会话粘性。可以使用Chrome开发者模式F12查看）<br><img src="/2019/01/19/tomcat负载均衡/13.png" alt=""><br><img src="/2019/01/19/tomcat负载均衡/13.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;tomcat负载均衡及会话保持–nginx-httpd&quot;&gt;&lt;a href=&quot;#tomcat负载均衡及会话保持–nginx-httpd&quot; class=&quot;headerlink&quot; title=&quot;tomcat负载均衡及会话保持–nginx | httpd&quot;&gt;&lt;/a&gt;tomcat负载均衡及会话保持–nginx | httpd&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/19/tomcat负载均衡/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://daizhe.net.cn/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="https://daizhe.net.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>tomcat配置进阶--反代</title>
    <link href="https://daizhe.net.cn/2019/01/18/tomcat%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B62/"/>
    <id>https://daizhe.net.cn/2019/01/18/tomcat配置进阶2/</id>
    <published>2019-01-18T13:07:51.842Z</published>
    <updated>2019-01-19T04:04:11.884Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tomcat配置进阶–反代"><a href="#tomcat配置进阶–反代" class="headerlink" title="tomcat配置进阶–反代"></a>tomcat配置进阶–反代</h1><p><img src="/2019/01/18/tomcat配置进阶2/标题.png" alt=""><br><a id="more"></a></p><h2 id="tomcat配置进阶–反代-1"><a href="#tomcat配置进阶–反代-1" class="headerlink" title="tomcat配置进阶–反代"></a>tomcat配置进阶–反代</h2><h3 id="nginx反代配置方式"><a href="#nginx反代配置方式" class="headerlink" title="nginx反代配置方式"></a>nginx反代配置方式</h3><h4 id="完全代理"><a href="#完全代理" class="headerlink" title="完全代理"></a><code>完全代理</code></h4><ul><li>客户端请求的所有资源都经由nginx反代给后端tomcat</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#完全向后反代</span></span><br><span class="line">nginx配置文件</span><br><span class="line"></span><br><span class="line">location  / &#123;</span><br><span class="line">  proxy_pass http://127.0.0.1:8080/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="动静分离（动静分离的前提是应用程序支持动态页面和静态页面分开也可以达到客户端请求资源的一致性）"><a href="#动静分离（动静分离的前提是应用程序支持动态页面和静态页面分开也可以达到客户端请求资源的一致性）" class="headerlink" title="动静分离（动静分离的前提是应用程序支持动态页面和静态页面分开也可以达到客户端请求资源的一致性）"></a><code>动静分离（动静分离的前提是应用程序支持动态页面和静态页面分开也可以达到客户端请求资源的一致性）</code></h4><p><img src="/2019/01/18/tomcat配置进阶2/分离.png" alt=""></p><ul><li><p>nginx配置中指明客户端请求的闻不见类型为jsp或do结尾才代理给后端的tomcat服务器，除了此类型的文件外都经由nginx处理响应客户端的请求</p></li><li><p>为什么要实现动静分离</p><ul><li>nginx的处理静态资源能力超强<ul><li>主要是nginx处理静态页面的效率远高于tomcat的处理能力，如果tomcat的请求量为1000次，则nginx的请求量为6000次，tomcat每秒的吞吐量为0.6M，nginx的每秒吞吐量为3.6M，可以说，nginx处理静态资源的能力是tomcat处理能力的6倍，优势可见一斑。</li></ul></li><li><p>动态资源和静态资源分开，使服务器结构更清晰。</p></li><li><p>动静分离原理：</p><ul><li>服务端接收来自客户端的请求中，有一部分是静态资源的请求，例如html,css,js和图片资源等等，有一部分是动态数据的请求。因为tomcat处理静态资源的速度比较慢，所以我们可以考虑把所有静态资源独立开来，交给处理静态资源更快的服务器例如nginx处理，而把动态请求交给tomcat处理。<br>如下图所示，我们在机器上同时安装了nginx和tomcat,把所有的静态资源都放置在nginx的webroot目录下面，把动态请求的程序都放在tomcat的webroot目录下面，当客户端访问服务端的时候，如果是静态资源的请求，就直接到nginx的webroot目录下面获取资源，如果是动态资源的请求，nginx利用反向代理的原理，把请求转发给tomcat进行处理，这样就实现了动静分离，提高了服务器处理请求的性能。</li></ul></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#有选择的进行反代以便实现动静分离</span></span><br><span class="line">nginx 配置文件</span><br><span class="line"></span><br><span class="line">location ~* \.(jsp|<span class="keyword">do</span>)$ &#123;</span><br><span class="line">  proxy_pass www.tomcat.com:8080; <span class="comment">#此处最好使用后端tomcat主机名，如果tomcat在本地，则使用localhost</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">  root /data/myapp/ROOT</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实现nginx反向代理"><a href="#实现nginx反向代理" class="headerlink" title="实现nginx反向代理"></a>实现nginx反向代理</h2><p><img src="/2019/01/18/tomcat配置进阶2/nginx代理.png" alt=""><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里使用了docker容器化技术，将tomcat运行在docker容器中运行，运行的容器默认使用docker0桥与宿主机建立关联关系,并在宿主机上安装nginx接受客户端的请求代理给运行在docker容器中的tomcat</span></span><br><span class="line"></span><br><span class="line">安装docker</span><br><span class="line">  ~]<span class="comment"># cd /etc/yum.repos.d/</span></span><br><span class="line">  yum.repos.d]<span class="comment"># wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span><br><span class="line">  ~]<span class="comment"># yum install docker-ce -y</span></span><br><span class="line">  ~]<span class="comment"># systemctl start docker</span></span><br><span class="line"></span><br><span class="line">获取tomcat镜像</span><br><span class="line">  https://hub.docker.com/_/tomcat?tab=tags</span><br><span class="line"></span><br><span class="line">下载tomcat镜像</span><br><span class="line">  ~]<span class="comment"># docker pull tomcat:8.5-alpine</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">后启动容器（指定容器中tomcat的工作目录与宿主机的目录生成docker管理的卷的存储卷关系）</span><br><span class="line">  ~]<span class="comment"># docker run --name tc1 -d -v /usr/local/tomcat/webapps tomcat:8.5-alpine </span></span><br><span class="line">  ~]<span class="comment"># docker container inspect tc1</span></span><br><span class="line">  ~]<span class="comment"># cd /var/lib/docker/volumes/12d5e74a0cc8e916b7545898b41d802f85fed1cd0a5996fe7f74582245a8b2a3/_data</span></span><br><span class="line">  _data]<span class="comment"># ls</span></span><br><span class="line">  docs  examples  host-manager  manager  ROOT</span><br><span class="line"></span><br><span class="line">宿主机上测试访问</span><br><span class="line">  ~]<span class="comment"># curl 172.17.0.2:8080</span></span><br><span class="line"></span><br><span class="line">宿主机上安装nginx并配置实现代理</span><br><span class="line">  ~]<span class="comment"># yum install nginx -y</span></span><br><span class="line">  ~]<span class="comment"># systemctl start nginx</span></span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">  server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://172.17.0.1:8080/;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">客户端访问宿主机地址(此时nginx已经实现反向代理到tomcat)</span><br><span class="line">   ~]<span class="comment"># curl 172.18.135.1  #访问宿主机地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">实现nginx反代tomcat动静分离（仅查看一下动静分离查看效果）</span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">      server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line">        index index.jsp index.html;</span><br><span class="line">        <span class="comment"># Load configuration files for the default server block.</span></span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://172.17.0.2:8080;</span><br><span class="line">        &#125;</span><br><span class="line">        location ~* \.(jsp|<span class="keyword">do</span>)$ &#123;</span><br><span class="line">        root <span class="string">"映射在宿主机上的存储的卷"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">            location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        error_page 500 502 503 504 /50x.html;</span><br><span class="line">            location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><hr><h2 id="实现httpd反向代理"><a href="#实现httpd反向代理" class="headerlink" title="实现httpd反向代理"></a>实现httpd反向代理</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里使用了docker容器化技术，将tomcat运行在docker容器中运行，运行的容器默认使用docker0桥与宿主机建立关联关系,并在宿主机上安装httpd接受客户端的请求代理给运行在docker容器中的tomcat</span></span><br><span class="line"></span><br><span class="line">proxy_ajp_module代理配置示例：</span><br><span class="line"><span class="comment">#&lt;VirtualHost *:80&gt;</span></span><br><span class="line"><span class="comment">#ServerName      tc1.centos.com</span></span><br><span class="line"><span class="comment">#ProxyRequests Off   #关闭正向代理</span></span><br><span class="line"><span class="comment">#ProxyVia        On  # 对每一个响应报文都添加一个via首部（可以查看代理的主机地址）</span></span><br><span class="line"><span class="comment">#ProxyPreserveHost On #用户请求的主机向后端代理时要不要保留代理服务器使用的主机名</span></span><br><span class="line"><span class="comment">#&lt;Proxy *&gt;           #定义代理服务</span></span><br><span class="line"><span class="comment">#Require all granted #允许任何请求使用代理服务</span></span><br><span class="line"><span class="comment">#&lt;/Proxy&gt;</span></span><br><span class="line"><span class="comment">#ProxyPass / ajp://tc1.centos.com:8009/  #将用户请求的根代理到服务器端真正的根</span></span><br><span class="line"><span class="comment">#ProxyPassReverse / ajp://tc1.centos.com:8009/   #如果tomcat服务器返回一个重写的法则，也将此法则返回给客户端</span></span><br><span class="line"><span class="comment">#&lt;Location /&gt;    #客户端请求rul根，设置权限</span></span><br><span class="line"><span class="comment">#Require all granted #接受所有请求</span></span><br><span class="line"><span class="comment">#&lt;/Location&gt;</span></span><br><span class="line"><span class="comment">#&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line">proxy_http_module代理配置示例：</span><br><span class="line"><span class="comment">#&lt;VirtualHost *:80&gt;</span></span><br><span class="line"><span class="comment">#ServerName      tc1.centos.com</span></span><br><span class="line"><span class="comment">#ProxyRequests Off</span></span><br><span class="line"><span class="comment">#ProxyVia        On</span></span><br><span class="line"><span class="comment">#ProxyPreserveHost On</span></span><br><span class="line"><span class="comment">#&lt;Proxy *&gt;</span></span><br><span class="line"><span class="comment">#Require all granted</span></span><br><span class="line"><span class="comment">#&lt;/Proxy&gt;</span></span><br><span class="line"><span class="comment">#ProxyPass / http://tc1.centos.com:8080/</span></span><br><span class="line"><span class="comment">#ProxyPassReverse / http://tc1.centos.com:8080/ </span></span><br><span class="line"><span class="comment">#&lt;Location /&gt;</span></span><br><span class="line"><span class="comment">#Require all granted</span></span><br><span class="line"><span class="comment">#&lt;/Location&gt;</span></span><br><span class="line"><span class="comment">#&lt;/VirtualHost&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#      &lt;LocationMatch "\.(jsp|do)$&gt;   #基于正则表达式匹配检查</span></span><br><span class="line"><span class="comment">#       ProxyPass / http://tc1.centos.com:8080/    #定义反代的url，客户请求的其他的url则不进行反代</span></span><br><span class="line"><span class="comment">#    &lt;/LocationMatch&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">宿主上安装httpd（完全代理）</span><br><span class="line">  ~]<span class="comment"># yum install httpd -y </span></span><br><span class="line">  ~]<span class="comment"># httpd -M    #确认proxy_module反代模块存在，否则不支持httpd反向代理</span></span><br><span class="line">  proxy_module (shared)</span><br><span class="line">  proxy_ajp_module (shared) <span class="comment">#反代支持ajp协议</span></span><br><span class="line">  proxy_http_module (shared)  <span class="comment">#httpd协议反代</span></span><br><span class="line">  proxy_fcgi_module (shared)  </span><br><span class="line"></span><br><span class="line">配置httpd</span><br><span class="line">  ~]<span class="comment"># vim /etc/httpd/conf.d/tomcat-http.conf</span></span><br><span class="line">  ~]<span class="comment"># vim /etc/httpd/conf.d/tomcat-http.conf</span></span><br><span class="line">    &lt;VirtualHost *:80&gt;</span><br><span class="line">     ServerName   www.centos.com</span><br><span class="line">     ProxyRequests Off</span><br><span class="line">     ProxyVia        On   <span class="comment">#对每一个响应报文都添加一个via首部</span></span><br><span class="line">     ProxyPreserveHost On</span><br><span class="line">     &lt;Proxy *&gt;</span><br><span class="line">     Require all granted</span><br><span class="line">     &lt;/Proxy&gt;</span><br><span class="line">     ProxyPass / http://172.17.0.2:8080/    <span class="comment">#后端tomcat地址</span></span><br><span class="line">     ProxyPassReverse / http://172.17.0.2:8080/   </span><br><span class="line">     &lt;Location /&gt;</span><br><span class="line">      Require all granted</span><br><span class="line">      &lt;/Location&gt;</span><br><span class="line">      &lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># httpd -t</span></span><br><span class="line">  Syntax OK</span><br><span class="line"></span><br><span class="line">~]<span class="comment"># systemctl start httpd</span></span><br><span class="line"></span><br><span class="line">测试</span><br><span class="line">  ~]<span class="comment"># curl 172.18.135.1</span></span><br></pre></td></tr></table></figure><p>配置文件中添加  ProxyVia  On  可以使用浏览器开发者接口查看到<br><img src="/2019/01/18/tomcat配置进阶2/接口.png" alt=""></p><hr><p>http基于ajp协议实现反代<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> &lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerName   www.centos.com</span><br><span class="line">  ProxyRequests Off</span><br><span class="line">  ProxyVia        On</span><br><span class="line">  ProxyPreserveHost On</span><br><span class="line"> &lt;Proxy *&gt;</span><br><span class="line">  Require all granted</span><br><span class="line"> &lt;/Proxy&gt;</span><br><span class="line">  ProxyPass / ajp://172.17.0.2:8009/</span><br><span class="line">  ProxyPassReverse / ajp://172.17.0.2:8009/</span><br><span class="line">&lt;Location /&gt;</span><br><span class="line">  Require all granted</span><br><span class="line">&lt;/Location&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;tomcat配置进阶–反代&quot;&gt;&lt;a href=&quot;#tomcat配置进阶–反代&quot; class=&quot;headerlink&quot; title=&quot;tomcat配置进阶–反代&quot;&gt;&lt;/a&gt;tomcat配置进阶–反代&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/18/tomcat配置进阶2/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://daizhe.net.cn/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="https://daizhe.net.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>tomcat配置进阶--热部署</title>
    <link href="https://daizhe.net.cn/2019/01/16/tomcat%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6/"/>
    <id>https://daizhe.net.cn/2019/01/16/tomcat配置进阶/</id>
    <published>2019-01-16T12:49:16.599Z</published>
    <updated>2019-01-19T07:30:57.135Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tomcat配置进阶–热部署"><a href="#tomcat配置进阶–热部署" class="headerlink" title="tomcat配置进阶–热部署"></a>tomcat配置进阶–热部署</h1><p><img src="/2019/01/16/tomcat配置进阶/标题.png" alt=""><br><a id="more"></a></p><h2 id="tomcat配置进阶–热部署-1"><a href="#tomcat配置进阶–热部署-1" class="headerlink" title="tomcat配置进阶–热部署"></a>tomcat配置进阶–热部署</h2><p><code>范例：Valve组件（过滤器）</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">一、</span><br><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">  &lt;Valve className=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> directory=<span class="string">"logs"</span></span><br><span class="line">      prefix=<span class="string">"localhost_access_log."</span> suffix=<span class="string">".txt"</span></span><br><span class="line">      pattern=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#AccessLogValve 定义记录访问日志</span></span><br><span class="line"><span class="comment">#directory  日志记录的路径，默认使用的是相对路径</span></span><br><span class="line"><span class="comment">#prefix 日志文件的前缀，默认情况下，一天滚动一次（日志的前后缀可以按需求定义）</span></span><br><span class="line"><span class="comment">#suffix 日志文件的后缀    （yum安装的生成的日志存放路径： /var/log/tomcat/）</span></span><br><span class="line"><span class="comment">#pattern  日志文件所记录的日志格式</span></span><br><span class="line">  <span class="comment">#%h远程客户端地址</span></span><br><span class="line">  <span class="comment">#%l登陆的用户名</span></span><br><span class="line">  <span class="comment">#%t访问时间</span></span><br><span class="line">  <span class="comment">#%r请求报文的起始行（请求方法，请求的url,协议报文）</span></span><br><span class="line">  <span class="comment">#%s响应码</span></span><br><span class="line">  <span class="comment">#%b响应的版本</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#一般而言Valve日志是host级别的，每一个虚拟主机有一个单独专用的日志</span></span><br><span class="line"></span><br><span class="line">将自己定义的主机也有自己单独的日志</span><br><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">  &lt;/Host&gt;</span><br><span class="line">  &lt;Host name=<span class="string">"www.centos.com"</span> appBase=<span class="string">"/data/webapps/"</span> unpackWARs=<span class="string">"true"</span> autoDeploy=<span class="string">"true"</span>&gt;</span><br><span class="line">  &lt;Valve className=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> directory=<span class="string">"logs"</span></span><br><span class="line">               prefix=<span class="string">"centos.com_log."</span> suffix=<span class="string">".log"</span></span><br><span class="line">               pattern=<span class="string">"%h %l %u %t &amp;quot;%r&amp;quot; %s %b"</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/Host&gt;</span><br><span class="line"></span><br><span class="line">查看是否生成单独的虚拟主机的日志文件</span><br><span class="line">  ~]<span class="comment"># systemctl restart tomcat</span></span><br><span class="line">  ~]<span class="comment"># ls /var/log/tomcat/</span></span><br><span class="line">  a_log.2019-01-16.txt   </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">二、</span><br><span class="line">将tomcat的访问日志转化为json格式 </span><br><span class="line">  修改tomcat的server.xml文件</span><br><span class="line">    &lt;Valve className=<span class="string">"org.apache.catalina.valves.AccessLogValve"</span> directory=<span class="string">"logs"</span></span><br><span class="line">      prefix=<span class="string">"localhost_access_log"</span> suffix=<span class="string">".log"</span></span><br><span class="line">      pattern=<span class="string">"&#123;&amp;quot;client&amp;quot;:&amp;quot;%h&amp;quot;,  &amp;quot;client user&amp;quot;:&amp;quot;%l&amp;quot;,   &amp;quot;authenticated&amp;quot;:&amp;quot;%u&amp;quot;,   &amp;quot;access time&amp;quot;:&amp;quot;%t&amp;quot;,     &amp;quot;method&amp;quot;:&amp;quot;%r&amp;quot;,   &amp;quot;status&amp;quot;:&amp;quot;%s&amp;quot;,  &amp;quot;send bytes&amp;quot;:&amp;quot;%b&amp;quot;,  &amp;quot;Query?string&amp;quot;:&amp;quot;%q&amp;quot;,  &amp;quot;partner&amp;quot;:&amp;quot;%&#123;Referer&#125;i&amp;quot;,  &amp;quot;Agent version&amp;quot;:&amp;quot;%&#123;User-Agent&#125;i&amp;quot;&#125;"</span>/&gt;</span><br><span class="line"></span><br><span class="line">三、</span><br><span class="line">Valve存在多种类型：（根据客户端原地址做访问控制）</span><br><span class="line">定义访问日志：org.apache.catalina.valves.AccessLogValve</span><br><span class="line">定义访问控制：org.apache.catalina.valves.RemoteAddrValve </span><br><span class="line"></span><br><span class="line">&lt;Valve className=<span class="string">"org.apache.catalina.valves.RemoteAddrValve"</span> deny=<span class="string">"172\.16\.100\.67"</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#禁止172.16.100.67此台主机对tomcat的访问（黑名单）</span></span><br><span class="line"><span class="comment">#可以使用deny与allow做访问控制，可以只用同配符</span></span><br></pre></td></tr></table></figure></p><hr><h2 id="默认界面分析"><a href="#默认界面分析" class="headerlink" title="默认界面分析"></a>默认界面分析</h2><p><img src="/2019/01/16/tomcat配置进阶/界面.png" alt=""></p><p>点击接口进入：但是需要认证进入，点击取消可以查看如何授权用户访问此管理接口<br><img src="/2019/01/16/tomcat配置进阶/认证.png" alt=""></p><p><img src="/2019/01/16/tomcat配置进阶/访问.png" alt=""></p><p>授权用户一下几种权限：</p><ul><li>manager-gui - allows access to the HTML GUI and the status pages（授权的用户可以通过web界面访问）</li><li>manager-script - allows access to the text interface and the status pages（授权的用户可以通过命令行的界面访问）</li><li>manager-jmx - allows access to the JMX proxy and the status pages（可以只用java管理扩展来进行操作，多用于监控）</li><li>manager-status - allows access to the status pages only（仅可以用于状态查看的用户即只读用户）</li></ul><h2 id="一、部署-manager"><a href="#一、部署-manager" class="headerlink" title="一、部署(manager)"></a>一、部署(manager)</h2><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><h4 id="方式1："><a href="#方式1：" class="headerlink" title="方式1："></a>方式1：</h4><p><code>范例：授权账号可以访问web界面的manager的控制接口</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">~]<span class="comment"># vim /etc/tomcat/tomcat-users.xml </span></span><br><span class="line">  &lt;tomcat-users&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-gui"</span>/&gt; --&gt;</span><br><span class="line">  &lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"centos"</span> roles=<span class="string">"manager-gui,manager-script"</span>/&gt;</span><br><span class="line">  &lt;/tomcat-users&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#此文件是tomcat启动时加载到内存中的所以要重新启动tomcat</span></span><br><span class="line">~]<span class="comment"># systemctl restart tomcat</span></span><br></pre></td></tr></table></figure></p><p>已经授权账号，登陆查看</p><p><img src="/2019/01/16/tomcat配置进阶/manager.png" alt=""></p><ul><li>在图形化管理界面stop一个应用程序并非清除内存，代表着类实例化出的对象还都在JVM的内存区段当中相当于暂停状态。</li><li>Undeplay意思为写在完全清除，达到真正的释放资源。</li></ul><p><img src="/2019/01/16/tomcat配置进阶/热部署.png" alt=""></p><hr><p>Deploy:部署方式</p><ul><li>热部署：（manager部署工具）在tomcat不停机的状态下部署，可以实现客户端访问。</li><li>冷部署：先停掉tomcat进程，放上应用程序，启动tomcat加载应用程序。</li><li>自动部署：直接将应用程序放进tomcat,自动实现部署。</li><li>手动部署：将依赖的类库一个个的装载上。</li></ul><p><code>范例:实现Deploy热部署</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">创建目录结构及jsp文件</span><br><span class="line">  ~]<span class="comment"># mkdir /data/mywebs</span></span><br><span class="line">  ~]<span class="comment"># mkdir /data/mywebs</span></span><br><span class="line">  ~]<span class="comment"># cd /data/mywebs/</span></span><br><span class="line">  mywebs]<span class="comment"># mkdir classes lib WEB-INF WETA-INF</span></span><br><span class="line"></span><br><span class="line">mywebs]<span class="comment"># vi index.jsp</span></span><br><span class="line">   &lt;%@ page language=<span class="string">"java"</span> %&gt;</span><br><span class="line">   &lt;html&gt;</span><br><span class="line">      &lt;head&gt;&lt;title&gt;TomcatA&lt;/title&gt;&lt;/head&gt;</span><br><span class="line">       &lt;body&gt;</span><br><span class="line">         &lt;h1&gt;&lt;font color=<span class="string">"red"</span>&gt;TomcatA.daizhe.com&lt;/font&gt;&lt;/h1&gt;</span><br><span class="line">            &lt;table align=<span class="string">"centre"</span> border=<span class="string">"1"</span>&gt;</span><br><span class="line">            &lt;tr&gt;</span><br><span class="line">              &lt;td&gt;Session ID&lt;/td&gt;</span><br><span class="line">            &lt;% session.setAttribute(<span class="string">"a.com"</span>,<span class="string">"a.com"</span>); %&gt;</span><br><span class="line">              &lt;td&gt;&lt;%= session.getId() %&gt;&lt;/td&gt;</span><br><span class="line">             &lt;/tr&gt;</span><br><span class="line">             &lt;tr&gt;</span><br><span class="line">         &lt;td&gt;Created on&lt;/td&gt;</span><br><span class="line">      &lt;td&gt;&lt;%= session.getCreationTime() %&gt;&lt;/td&gt;</span><br><span class="line">      &lt;/tr&gt;</span><br><span class="line">    &lt;/table&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">   &lt;/html&gt;</span><br></pre></td></tr></table></figure></p><p><code>热部署(重启tomcat也不会配置有影响，虽然不会出现在配置文件中，但是也是持久有效的)</code></p><p><img src="/2019/01/16/tomcat配置进阶/部署1.png" alt=""><br><img src="/2019/01/16/tomcat配置进阶/部署2.png" alt=""><br><img src="/2019/01/16/tomcat配置进阶/部署3.png" alt=""></p><hr><h4 id="方式2："><a href="#方式2：" class="headerlink" title="方式2："></a>方式2：</h4><p><img src="/2019/01/16/tomcat配置进阶/自动部署.png" alt=""></p><h3 id="诊断（极少用到）"><a href="#诊断（极少用到）" class="headerlink" title="诊断（极少用到）"></a>诊断（极少用到）</h3><p><img src="/2019/01/16/tomcat配置进阶/诊断.png" alt=""></p><h3 id="版本信息"><a href="#版本信息" class="headerlink" title="版本信息"></a>版本信息</h3><p><img src="/2019/01/16/tomcat配置进阶/诊断.png" alt=""></p><h3 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h3><p><img src="/2019/01/16/tomcat配置进阶/帮助.png" alt=""></p><h2 id="二、运行状态-（server-status"><a href="#二、运行状态-（server-status" class="headerlink" title="二、运行状态 （server status)"></a>二、运行状态 （server status)</h2><p><img src="/2019/01/16/tomcat配置进阶/status.png" alt=""></p><h2 id="三、管理虚拟主机（Host-manager）"><a href="#三、管理虚拟主机（Host-manager）" class="headerlink" title="三、管理虚拟主机（Host manager）"></a>三、管理虚拟主机（Host manager）</h2><h3 id="授权用户访问此虚拟主机类管理界面"><a href="#授权用户访问此虚拟主机类管理界面" class="headerlink" title="授权用户访问此虚拟主机类管理界面"></a>授权用户访问此虚拟主机类管理界面</h3><p>启用方式和manager相同<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">~]<span class="comment"># vim /etc/tomcat/tomcat-users.xml </span></span><br><span class="line">  &lt;tomcat-users&gt;</span><br><span class="line">  &lt;role rolename=<span class="string">"manager-gui"</span>/&gt; </span><br><span class="line">  &lt;role rolename=<span class="string">"admin-gui"</span>/&gt;&lt;user username=<span class="string">"tomcat"</span> password=<span class="string">"centos"</span> roles=<span class="string">"manager-gui,manager-script,admin-gui,admin-script"</span>/&gt;</span><br><span class="line">  &lt;/tomcat-users&gt;</span><br><span class="line"></span><br><span class="line">~]<span class="comment"># systemctl restart tomcat</span></span><br></pre></td></tr></table></figure></p><p><img src="/2019/01/16/tomcat配置进阶/虚拟主机.png" alt=""></p><h3 id="创建新的虚拟主机"><a href="#创建新的虚拟主机" class="headerlink" title="创建新的虚拟主机"></a>创建新的虚拟主机</h3><p><img src="/2019/01/16/tomcat配置进阶/虚拟主机1.png" alt=""><br><img src="/2019/01/16/tomcat配置进阶/虚拟主机2.png" alt=""></p><p>注意：因为以上如部署权限过大，所以谨慎做好安全控制<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 可以对用户访问的http://172.18.135.1:8080/host-manager/或者http://172.18.135.1:8080/manager/html 做安装访问控制</span></span><br><span class="line"></span><br><span class="line">~]<span class="comment"># vim /etc/tomcat/tomcat-users.xml </span></span><br><span class="line"></span><br><span class="line">&lt;Valve className=<span class="string">"org.apache.catalina.valves.RemoteAddrValve"</span> allow=<span class="string">"172\.16\.100\.67"</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#/host-manager/和/manager/html两个目录仅允许本机客户端地址进行访问连接</span></span><br><span class="line"><span class="comment">#或者用不到的话安装tomcat就不要安装这两个组件</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;tomcat配置进阶–热部署&quot;&gt;&lt;a href=&quot;#tomcat配置进阶–热部署&quot; class=&quot;headerlink&quot; title=&quot;tomcat配置进阶–热部署&quot;&gt;&lt;/a&gt;tomcat配置进阶–热部署&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/16/tomcat配置进阶/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://daizhe.net.cn/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="https://daizhe.net.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>配置tomcat</title>
    <link href="https://daizhe.net.cn/2019/01/16/%E9%85%8D%E7%BD%AEtomcat/"/>
    <id>https://daizhe.net.cn/2019/01/16/配置tomcat/</id>
    <published>2019-01-16T08:01:08.881Z</published>
    <updated>2019-01-19T09:43:16.372Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tomcat配置"><a href="#tomcat配置" class="headerlink" title="tomcat配置"></a>tomcat配置</h1><p><img src="/2019/01/16/配置tomcat/标题.png" alt=""><br><a id="more"></a></p><h2 id="部署Tomcat-JDK-Tomcat"><a href="#部署Tomcat-JDK-Tomcat" class="headerlink" title="部署Tomcat(JDK+Tomcat)"></a>部署Tomcat(JDK+Tomcat)</h2><ul><li>运行者身份不能为root(user:tomcat)端口默认为8080/tcp</li></ul><p><code>部署方式1：OpenJDK(openjdk 11 + tomcat 7.0)</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#rel兼容多个版本JDK并存，可以设置默认的JDK版本</span></span><br><span class="line"><span class="comment">#    ~]# alternatives --install JDK</span></span><br><span class="line"><span class="comment">#    ~]# alternatives --config java</span></span><br><span class="line"></span><br><span class="line">yum安装OpenJDK</span><br><span class="line">    ~]<span class="comment"># yum install java-11-openjdk-devel -y</span></span><br><span class="line">    ~]<span class="comment"># java -version </span></span><br><span class="line">    openjdk version <span class="string">"11.0.1"</span> 2018-10-16 LTS(长期支持版)</span><br><span class="line">    OpenJDK Runtime Environment 18.9 (build 11.0.1+13-LTS)</span><br><span class="line">    OpenJDK 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode, sharing)</span><br><span class="line">    ~]<span class="comment"># which java</span></span><br><span class="line">    /usr/bin/java</span><br><span class="line">    ~]<span class="comment"># ll /usr/bin/java</span></span><br><span class="line">    /usr/bin/java -&gt; /etc/alternatives/java</span><br><span class="line">    ~]<span class="comment"># ll /etc/alternatives/java</span></span><br><span class="line">    /etc/alternatives/java -&gt; /usr/lib/jvm/java-11-openjdk-11.0.1.13-3.el7_6.x86_64/bin/java</span><br><span class="line"></span><br><span class="line">安装tomcat(7.0)</span><br><span class="line">    tomcat-admin-webapps.noarch <span class="comment">#tomcat的web界面的管理的接口</span></span><br><span class="line">    tomcat-docs-webapp.noarch   <span class="comment">#参考文档</span></span><br><span class="line">    ~]<span class="comment"># yum install tomcat-admin-webapps tomcat-webapps tomcat-docs-webapp -y </span></span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># systemctl restart tomcat</span></span><br><span class="line">    <span class="comment">#运行身份为Java虚拟机运行</span></span><br><span class="line">    ~]<span class="comment"># ss -tnl</span></span><br><span class="line">    LISTEN      0      100             :::8009  (ajp)                                 </span><br><span class="line">    LISTEN      0      100             127.0.0.1:8005  (管理接口)    </span><br><span class="line">    LISTEN      0      100             :::8080 （http）</span><br></pre></td></tr></table></figure></p><p><code>部署方式2：Oracle JDK(oracle jdk 8u191 + tomcat 8.5)</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">oracle jdk 下载地址：https://www.oracle.com/technetwork/java/javase/downloads/index.html</span><br><span class="line">    ~]<span class="comment"># ls</span></span><br><span class="line">    jdk-8u191-linux-x64.rpm </span><br><span class="line">    ~]<span class="comment"># rpm -ivh jdk-8u191-linux-x64.rpm </span></span><br><span class="line">    默认安装路径</span><br><span class="line">    ~]<span class="comment"># ls /usr/java/</span></span><br><span class="line">    default  jdk1.8.0_191-amd64  latest</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># ll /usr/java/</span></span><br><span class="line">    default -&gt; /usr/java/latest     <span class="comment">#支持设置默认的版本</span></span><br><span class="line">    jdk1.8.0_191-amd64  <span class="comment">#同样支持多版本共存</span></span><br><span class="line">    latest -&gt; /usr/java/jdk1.8.0_191-amd64  <span class="comment">#支持设置最新的版本</span></span><br><span class="line"></span><br><span class="line">    验证是否安装成功（直接运行java程序）</span><br><span class="line">    查看版本信息</span><br><span class="line">    amd64]<span class="comment"># pwd</span></span><br><span class="line">    /usr/java/jdk1.8.0_191-amd64</span><br><span class="line">    amd64]<span class="comment"># /bin/java -version</span></span><br><span class="line">        java version <span class="string">"1.8.0_191"</span></span><br><span class="line">        Java(TM) SE Runtime Environment (build 1.8.0_191-b12)</span><br><span class="line">        Java HotSpot(TM) 64-Bit Server VM (build 25.191-b12, mixed mode)</span><br><span class="line"></span><br><span class="line">    修改PATH变量</span><br><span class="line">    ~]<span class="comment"># vim /etc/profile.d/java.sh</span></span><br><span class="line">    JAVA_HOME=/usr/java/default</span><br><span class="line">    PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">    <span class="built_in">export</span> JAVA_HOME PATH</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># source /etc/profile.d/java.sh </span></span><br><span class="line">    ~]<span class="comment"># printenv </span></span><br><span class="line"></span><br><span class="line">tomcat 8.5安装</span><br><span class="line">下载路径：http://mirrors.hust.edu.cn/apache/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz</span></span><br><span class="line">    ~]<span class="comment"># tar xvf apache-tomcat-8.5.37.tar.gz -C /usr/local/</span></span><br><span class="line">    ~]<span class="comment"># ln -vs /usr/local/apache-tomcat-8.5.37 /usr/local/tomcat （链接形式方便升级）</span></span><br><span class="line"></span><br><span class="line">    tomcat不可使用root用户运行</span><br><span class="line">    ~]<span class="comment"># useradd tomcat</span></span><br><span class="line">    ~]<span class="comment"># chown -R tomcat.tomcat /usr/local/tomcat/</span></span><br><span class="line">    ~]<span class="comment"># chown -R tomcat.tomcat /usr/local/tomcat/*</span></span><br><span class="line">     ~]<span class="comment"># su - tomcat -c "/usr/local/tomcat/bin/catalina.sh start"</span></span><br><span class="line">    Using CATALINA_BASE:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">    Using CATALINA_HOME:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">    Using CATALINA_TMPDIR: /usr/<span class="built_in">local</span>/tomcat/temp</span><br><span class="line">    Using JRE_HOME:        /usr/bin/default</span><br><span class="line">    Using CLASSPATH:       /usr/<span class="built_in">local</span>/tomcat/bin/bootstrap.jar:/u</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># ss -tnl</span></span><br><span class="line">    LISTEN      0      100             :::8009  (ajp)                                 </span><br><span class="line">    LISTEN      0      100            127.0.0.1:8005  (管理接口)    </span><br><span class="line">    LISTEN      0      100             :::8080 （http）</span><br></pre></td></tr></table></figure></p><hr><h2 id="server-xml默认配置"><a href="#server-xml默认配置" class="headerlink" title="server.xml默认配置"></a>server.xml默认配置</h2><ul><li><p>Tomcat：</p><ul><li>使用java语言编写：</li></ul></li><li><p>java程序运行环境</p><ul><li>运行在JVM虚拟机上</li><li>jvm虚拟机组成部分<ul><li>类加载器</li><li>程序运行引擎</li></ul></li></ul></li></ul><ul><li><code>tomcat的配置文件构成：</code><ul><li><code>server.xml：</code>主配置文件；</li><li><code>web.xml：</code>每个webapp只有“部署”后才能被访问，它的部署方式通常由web.xml进行定义，其存放位置为WEB-INF/目录中；此文件为所有的webapps提供默认部署相关的配置；</li><li><code>context.xml：</code>每个webapp都可以专用的配置文件，它通常由专用的配置文件context.xml来定义，其存放位置为WEB-INF/目录中；此文件为所有的webapps提供默认配置；</li><li><code>tomcat-users.xml：</code>用户认证的账号和密码文件；</li><li><code>catalina.policy：</code>当使用-security选项启动tomcat时，用于为tomcat设置安全策略； </li><li><code>catalina.properties：</code>Java属性的定义文件，用于设定类加载器路径，以及一些与JVM调优相关参数；</li><li><code>logging.properties：</code>日志系统相关的配置；    log4j    （目前已经在第二版）    </li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Tomcat的核心组件：server.xml</span><br><span class="line">&lt;Server&gt;</span><br><span class="line">&lt;Service&gt;</span><br><span class="line">&lt;connector/&gt;</span><br><span class="line">&lt;connector/&gt;</span><br><span class="line">...</span><br><span class="line">&lt;Engine&gt;</span><br><span class="line">&lt;Host&gt;</span><br><span class="line">&lt;Context/&gt;</span><br><span class="line">&lt;Context/&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/Host&gt;</span><br><span class="line">&lt;Host&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/Host&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/Engine&gt;</span><br><span class="line">&lt;/Service&gt;</span><br><span class="line">&lt;/Server&gt;</span><br></pre></td></tr></table></figure><hr><ul><li>每一个组件都由一个Java“类”实现，这些组件大体可分为以下几个类型：<ul><li>顶级组件：Server</li><li>服务类组件：Service</li><li>连接器组件：http, https, ajp（apache jserv protocol）</li><li>容器类：Engine, Host, Context</li><li>被嵌套类：valve, logger, realm, loader, manager, …</li><li>集群类组件：listener, cluster, …</li></ul></li></ul><h2 id="基本web服务器的组成"><a href="#基本web服务器的组成" class="headerlink" title="基本web服务器的组成"></a>基本web服务器的组成</h2><ul><li><p><code>JSP WebAPP的组织结构：（WEB-INF/和WEB-INF/是当前程序专有的且不可被其他程序所使用，也不能让用户通过互联网路径来访问，因为此文件用于参考部署启动应用程序）</code></p><ul><li>/: webapps的根目录</li><li>index.jsp, index.html：主页；</li><li>WEB-INF/：当前webapp的私有资源路径；通常用于存储当前webapp的web.xml和context.xml配置文件；</li><li>WEB-INF/：类似于WEB-INF/；</li><li>classes/：类文件，当前webapp所提供的类 .java格式；</li><li>lib/：类文件，当前webapp所提供的类，被打包为jar格式；</li></ul></li><li><p>webapp归档格式：</p><ul><li>.war：webapp（web_server的应用程序归档文件）</li><li>.jar：EJB的类打包文件；</li><li>.rar：资源适配器类打包文件；</li><li>.ear：企业级webapp；</li></ul></li></ul><h2 id="部署-deploy-webapp的相关操作："><a href="#部署-deploy-webapp的相关操作：" class="headerlink" title="部署(deploy)webapp的相关操作："></a><code>部署(deploy)webapp的相关操作：</code></h2><ul><li>deploy：将webapp的源文件放置于目标目录(网页程序文件存放目录)，配置tomcat服务器能够基于web.xml和context.xml文件中定义的路径来访问此webapp；将其特有的类和依赖的类通过class loader装载至JVM；<ul><li>部署有两种方式：<ul><li>自动部署：auto deploy<ul><li>手动部署:</li><li>冷部署：把webapp复制到指定的位置，而后才启动tomcat；<pre><code>- 热部署：在不停止tomcat的前提下进行部署；    - 部署工具：manager、ant脚本、tcd(tomcat client deployer)等；                    </code></pre></li></ul></li></ul></li></ul></li><li>undeploy：反部署，停止webapp，并从tomcat实例上卸载webapp；</li><li>start：启动处于停止状态的webapp；</li><li>stop：停止webapp，不再向用户提供服务；其类依然在jvm上；</li><li>redeploy：重新部署；        </li></ul><p><code>范例：手动提供一测试类应用，并冷部署</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">~]<span class="comment"># mkdir testapp/</span></span><br><span class="line">~]<span class="comment"># cd testapp/</span></span><br><span class="line"></span><br><span class="line">创建程序运行的相关的文件格式</span><br><span class="line">  testapp]<span class="comment"># mkdir classes lib WEB-INF WETA-INF</span></span><br><span class="line">  testapp]<span class="comment"># ls</span></span><br><span class="line">  classes  lib  WEB-INF  WETA-INF</span><br><span class="line"></span><br><span class="line">创建网页文件</span><br><span class="line">  testapp]<span class="comment"># vi index.jsp</span></span><br><span class="line">  &lt;%@ page language=<span class="string">"java"</span> %&gt;</span><br><span class="line">   &lt;%@ page import=<span class="string">"java.util.*"</span> %&gt;</span><br><span class="line">     &lt;html&gt;</span><br><span class="line">        &lt;head&gt;</span><br><span class="line">          &lt;title&gt;Test Page&lt;/title&gt;</span><br><span class="line">        &lt;/head&gt;</span><br><span class="line">      &lt;body&gt;</span><br><span class="line">       &lt;% out.println(<span class="string">"hello world"</span>);</span><br><span class="line">         %&gt;</span><br><span class="line">         &lt;/body&gt;</span><br><span class="line">         &lt;/html&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># cp testapp testapp-v0.1</span></span><br><span class="line"></span><br><span class="line">将此文件复制到网页文件根目录（/usr/share/tomcat/webapps）</span><br><span class="line">  ~]<span class="comment"># cd /usr/share/tomcat/webapps</span></span><br><span class="line">  webapps]<span class="comment"># ls</span></span><br><span class="line">  docs  examples  host-manager  manager  ROOT  sample</span><br><span class="line">  <span class="comment">#ROOT 默认主站文件目录</span></span><br><span class="line"></span><br><span class="line">  webapps]<span class="comment"># cp -r /root/testapp /usr/share/tomcat/webapps/</span></span><br><span class="line">  webapps]<span class="comment"># ls</span></span><br><span class="line">  docs  examples  host-manager  manager  ROOT  sample  testapp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">访问测试</span><br><span class="line">   ~]<span class="comment"># curl 172.20.101.228:8080/testapp/</span></span><br></pre></td></tr></table></figure></p><p><img src="/2019/01/16/配置tomcat/测试1.png" alt=""></p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">查看tomcat的工作目录</span><br><span class="line">   ~]<span class="comment"># cd /usr/share/tomcat/work</span></span><br><span class="line">   work]<span class="comment"># tree</span></span><br><span class="line">   .</span><br><span class="line">   └── Catalina</span><br><span class="line">       └── localhost  <span class="comment">#当前虚拟主机的名称</span></span><br><span class="line">           ├── _</span><br><span class="line">           │   └── org</span><br><span class="line">           │       └── apache</span><br><span class="line">           │           └── jsp</span><br><span class="line">           │               ├── index_jsp.class</span><br><span class="line">           │               └── index_jsp.java</span><br><span class="line">           ├── docs</span><br><span class="line">           ├── examples</span><br><span class="line">           ├── host-manager</span><br><span class="line">           ├── manager</span><br><span class="line">           ├── sample</span><br><span class="line">           └── testapp</span><br><span class="line">              └── org</span><br><span class="line">                  └── apache</span><br><span class="line">                      └── jsp</span><br><span class="line">                           ├── index_jsp.class</span><br><span class="line">                           └── index_jsp.java</span><br><span class="line"></span><br><span class="line"><span class="comment">#将自己定义放置在/usr/share/tomcat/webapps目录下testapp/index.jsp文件转换为java代码，再次编译成.class类文件</span></span><br><span class="line"><span class="comment">#将来在生产中部署完应用程序，应该对每个url先自己访问一次，编译完成，然后再上线</span></span><br></pre></td></tr></table></figure><h2 id="tomcat的常用组件配置："><a href="#tomcat的常用组件配置：" class="headerlink" title="tomcat的常用组件配置："></a>tomcat的常用组件配置：</h2><ul><li><p>Server：代表tomcat instance，即表现出的一个java进程；监听在8005端口，只接收“SHUTDOWN”。各server监听的端口不能相同，因此，在同一物理主机启动多个实例时，需要修改其监听端口为不同的端口； </p></li><li><p>Service：用于实现将一个或多个connector组件关联至一个engine组件；</p></li><li><p>Connector组件：端点</p><ul><li>负责接收请求，常见的有三类http/https/ajp；</li><li>进入tomcat的请求可分为两类：<ul><li>(1) standalone : 请求来自于客户端浏览器；</li><li>(2) 由其它的web server反代：来自前端的反代服务器；<ul><li>nginx –&gt; http connector –&gt; tomcat </li><li>httpd(proxy_http_module) –&gt; http connector –&gt; tomcat</li><li>httpd(proxy_ajp_module) –&gt; ajp connector –&gt; tomcat </li><li>httpd(mod_jk) –&gt; ajp connector –&gt; tomcat </li></ul></li></ul></li><li><p>属性：</p><ul><li>port=”8080” </li><li>protocol=”HTTP/1.1”</li><li><p>connectionTimeout=”20000”</p></li><li><p>address：监听的IP地址；默认为本机所有可用地址；</p></li><li>maxThreads：最大并发连接数，默认为200；</li><li>enableLookups：是否启用DNS查询功能；</li><li>acceptCount：等待队列的最大长度；</li><li>secure：</li><li>sslProtocol：</li></ul></li></ul></li></ul><p><code>范例：Server组件（顶级组件）</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">  &lt;Server port=<span class="string">"8005"</span> shutdown=<span class="string">"SHUTDOWN"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Server中两个属性需要定义</span></span><br><span class="line"><span class="comment">#  - port="8080" #端口</span></span><br><span class="line"><span class="comment">#  - shutdown="SHUTDOWN"</span></span><br><span class="line"><span class="comment">#    - 内建的管理接口，只要给SHUTDOWN字串则相当与停止整个tomcat进程</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># yum install telnet -y</span></span><br><span class="line">  ~]<span class="comment"># telnet 127.0.0.1 8005</span></span><br><span class="line">  Trying 127.0.0.1...</span><br><span class="line">  Connected to 127.0.0.1.</span><br><span class="line">  Escape character is <span class="string">'^]'</span>.</span><br><span class="line">  SHUTDOWN</span><br><span class="line">  Connection closed by foreign host.</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># ss -tnl</span></span><br><span class="line"><span class="comment">#此时tomcat已经停止，所以tomcat的8005端口默认监听在本机的127.0.0.1</span></span><br><span class="line"></span><br><span class="line">所以为了安全起见，建议关闭</span><br><span class="line">方法1：修改密码</span><br><span class="line">&lt;Server port=<span class="string">"8005"</span> shutdown=<span class="string">"可以将命令修改的复杂"</span>&gt;</span><br><span class="line"></span><br><span class="line">方法2：关闭监听端口</span><br><span class="line">&lt;Server port=<span class="string">"-1"</span> shutdown=<span class="string">"SHUTDOWN"</span>&gt;</span><br></pre></td></tr></table></figure></p><p><code>范例：Service组件（类连接器）</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">  &lt;Service name=<span class="string">"Catalina"</span>&gt;</span><br><span class="line"></span><br><span class="line">........................http协议............................</span><br><span class="line"><span class="comment">#Service中一个组件</span></span><br><span class="line"><span class="comment">#将connector与Engine建立关联关系</span></span><br><span class="line"></span><br><span class="line">  &lt;Connector port=<span class="string">"8080"</span> protocol=<span class="string">"HTTP/1.1"</span>  <span class="comment">#端口、协议版本（1.1主流协议）</span></span><br><span class="line">    connectionTimeout=<span class="string">"20000"</span>                 <span class="comment">#超时时长20秒（单位毫秒）</span></span><br><span class="line">    redirectPort=<span class="string">"8443"</span> /&gt;          </span><br><span class="line"></span><br><span class="line"><span class="comment">#&lt;!--</span></span><br><span class="line"><span class="comment">#&lt;Connector port="8443" protocol="org.apache.coyote.http11.Http11Protocol"</span></span><br><span class="line"><span class="comment">#maxThreads="150" SSLEnabled="true" scheme="https" secure="true"</span></span><br><span class="line"><span class="comment">#clientAuth="false" sslProtocol="TLS" /&gt;</span></span><br><span class="line"><span class="comment">#--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#如果启用8443端口表示TLS加密传输，注释行表示如果用户访问的端口为http则重写到https（但是tomcat一般不直接作为web_server运行，tomcat运行jsp本身就很消耗cpu，一般也不使用ssl）</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">........................ajp协议............................</span><br><span class="line">  &lt;Connector port=<span class="string">"8009"</span> protocol=<span class="string">"AJP/1.3"</span> redirectPort=<span class="string">"8443"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p><code>范例：Engine组件（容器组件）</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">  &lt;Engine name=<span class="string">"Catalina"</span> defaultHost=<span class="string">"localhost"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#name="Catalina"   Engine名称，多个不可同名</span></span><br><span class="line"><span class="comment">#defaultHost       默认的虚拟主机</span></span><br><span class="line"><span class="comment">#jvmRoute          创建tomcat集群时用到</span></span><br></pre></td></tr></table></figure></p><p><code>范例：Host（Host虚拟主机组件）</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">    &lt;Host name=<span class="string">"localhost"</span>  appBase=<span class="string">"webapps"</span></span><br><span class="line">      unpackWARs=<span class="string">"true"</span> autoDeploy=<span class="string">"true"</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#appBase 定义网页文件根目录(可以使用相对路径即相对于tomcat的根，最好使用绝对路径)</span></span><br><span class="line"><span class="comment">#unpackWARs 如果用户提供的就是.war格式的文件要不要自动展开</span></span><br><span class="line"><span class="comment">#autoDeploy 是否支持自动部署(必要时可以关闭，自己手动部署)</span></span><br><span class="line"></span><br><span class="line">自己定义新的Host</span><br><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">  141行</span><br><span class="line">  &lt;/Host&gt;        </span><br><span class="line">  &lt;Host name=<span class="string">"www.centos.com"</span> appBase=<span class="string">"/data/webapps/"</span> unpackWARs=<span class="string">"true"</span> autoDeploy=<span class="string">"true"</span>&gt;</span><br><span class="line">  &lt;/Host&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># mkdir -pv /data/webapps</span></span><br><span class="line">  ~]<span class="comment"># cp -r /root/testapp /data/webspps/</span></span><br><span class="line">  webapps]<span class="comment"># mv testapp ROOT     </span></span><br><span class="line">  webapps]<span class="comment"># ls</span></span><br><span class="line">  ROOT        <span class="comment">#ROOT不可使用链接</span></span><br><span class="line"></span><br><span class="line">重启验证</span><br><span class="line">  ~]<span class="comment"># systemctl restart tomcat</span></span><br><span class="line">  ~]<span class="comment"># curl www.centos.com:8080</span></span><br></pre></td></tr></table></figure></p><p><code>范例：Context组件</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line">  &lt;Context path=<span class="string">"/PATH"</span> docBase=<span class="string">"/PATH/TO/SOMEDIR"</span> reloadable=<span class="string">""</span>/&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#Context       path 指明url</span></span><br><span class="line"><span class="comment">#docBase       本地文件系统路径</span></span><br><span class="line"><span class="comment">#reloadable    支不支持重新载入</span></span><br><span class="line"></span><br><span class="line">  webapps]<span class="comment"># pwd</span></span><br><span class="line">  /data/webapps</span><br><span class="line">  webapps]<span class="comment"># ls</span></span><br><span class="line">  ROOT</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># mkdir /myweb</span></span><br><span class="line">  ~]<span class="comment"># cd /myweb/</span></span><br><span class="line"></span><br><span class="line">  myweb]<span class="comment"># vim testapp-v0.1</span></span><br><span class="line">   &lt;%@ page language=<span class="string">"java"</span> %&gt;</span><br><span class="line">     &lt;%@ page import=<span class="string">"java.util.*"</span> %&gt;</span><br><span class="line">      &lt;html&gt;</span><br><span class="line">          &lt;head&gt;</span><br><span class="line">            &lt;title&gt;Test Page&lt;/title&gt;</span><br><span class="line">         &lt;/head&gt;</span><br><span class="line">       &lt;body&gt;</span><br><span class="line">        &lt;% out.println(<span class="string">"hello aaaaaaaaaa"</span>);</span><br><span class="line">          %&gt;</span><br><span class="line">           &lt;/body&gt;</span><br><span class="line">           &lt;/html&gt;</span><br><span class="line"></span><br><span class="line">  myweb]<span class="comment"># ls</span></span><br><span class="line">  testapp-v0.1</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># ln -sv /myweb/testapp-v0.1 /myweb/testapp</span></span><br><span class="line">  ~]<span class="comment"># vim /etc/tomcat/server.xml </span></span><br><span class="line"></span><br><span class="line">     &lt;/Host&gt;</span><br><span class="line">    &lt;Host name=<span class="string">"www.centos.com"</span> appBase=<span class="string">"/data/webapps/"</span> unpackWARs=<span class="string">"true"</span> autoDeploy=<span class="string">"true"</span>&gt;</span><br><span class="line">          &lt;Context path=<span class="string">"/mymyapp"</span> docBase=<span class="string">"/myweb/testapp"</span> reloadable=<span class="string">""</span>/&gt; </span><br><span class="line">    &lt;/Host&gt;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># systemctl restart tomcat</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">测试访问：</span><br><span class="line">  ~]<span class="comment"># curl www.centos.com:8080/mymyapp</span></span><br><span class="line">  hello aaaaaaaaaa</span><br><span class="line"></span><br><span class="line"><span class="comment">#Context 类似于http的路径别名 ：alias</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;tomcat配置&quot;&gt;&lt;a href=&quot;#tomcat配置&quot; class=&quot;headerlink&quot; title=&quot;tomcat配置&quot;&gt;&lt;/a&gt;tomcat配置&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/16/配置tomcat/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://daizhe.net.cn/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="https://daizhe.net.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>tomcat基础与组件</title>
    <link href="https://daizhe.net.cn/2019/01/14/tomcat%E5%9F%BA%E7%A1%80%E4%B8%8E%E9%83%A8%E7%BD%B2/"/>
    <id>https://daizhe.net.cn/2019/01/14/tomcat基础与部署/</id>
    <published>2019-01-14T12:47:14.983Z</published>
    <updated>2019-01-16T08:00:37.747Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tomcat基础与组件"><a href="#tomcat基础与组件" class="headerlink" title="tomcat基础与组件"></a>tomcat基础与组件</h1><p><img src="/2019/01/14/tomcat基础与部署/标题.png" alt=""><br><a id="more"></a></p><h2 id="关于Tomcat"><a href="#关于Tomcat" class="headerlink" title="关于Tomcat"></a>关于Tomcat</h2><ul><li><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p></li><li><p>Tomcat 服务器是一个免费的开放源代码的Web 应用服务器，属于轻量级应用服务器，在中小型系统和并发访问用户不是很多的场合下被普遍使用，是开发和调试JSP 程序的首选。对于一个初学者来说，可以这样认为，当在一台机器上配置好Apache 服务器，可利用它响应HTML（标准通用标记语言下的一个应用）页面的访问请求。实际上Tomcat 部分是Apache 服务器的扩展，但它是独立运行的，所以当你运行tomcat 时，它实际上作为一个与Apache 独立的进程单独运行的。</p></li></ul><ul><li>官网地址：<a href="http://tomcat.apache.org/" target="_blank" rel="noopener">http://tomcat.apache.org/</a></li></ul><h2 id="部署Tomcat-JDK-Tomcat"><a href="#部署Tomcat-JDK-Tomcat" class="headerlink" title="部署Tomcat(JDK+Tomcat)"></a>部署Tomcat(JDK+Tomcat)</h2><ul><li>Tomcat也是java编程语言编写的，是运行在JVM中的一个进程。它定义为【中间件】，顾名思义，是一个在Java项目与JVM之间的中间容器。</li><li><p>java程序写的网站用Tomcat+JDK来运行，Tomcat是一个中间件，真正起作用的，解析Java脚本的是JDK。JDK（Java development kit）是整个Java的核心，它包含了Java运行环境和一堆Java相关的工具以及Java基础库。<br>最主流的JDK是由sun公司发布的JDK，除此之外，IBM公司也有发布JDK，centos上也可以使用yum安装openjdk<br>Java写的网页后缀名是.jsp。</p></li><li><p>运行者身份不能为root(user:tomcat)端口默认为8080/tcp</p></li></ul><p><code>部署方式1：OpenJDK(openjdk 11 + tomcat 7.0)</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#rel兼容多个版本JDK并存，可以设置默认的JDK版本</span></span><br><span class="line"><span class="comment">#    ~]# alternatives --install JDK</span></span><br><span class="line">yum安装OpenJDK</span><br><span class="line">    ~]<span class="comment"># yum install java-11-openjdk-devel -y</span></span><br><span class="line">    ~]<span class="comment"># java -version </span></span><br><span class="line">    openjdk version <span class="string">"11.0.1"</span> 2018-10-16 LTS(长期支持版)</span><br><span class="line">    OpenJDK Runtime Environment 18.9 (build 11.0.1+13-LTS)</span><br><span class="line">    OpenJDK 64-Bit Server VM 18.9 (build 11.0.1+13-LTS, mixed mode, sharing)</span><br><span class="line">    ~]<span class="comment"># which java</span></span><br><span class="line">    /usr/bin/java</span><br><span class="line">    ~]<span class="comment"># ll /usr/bin/java</span></span><br><span class="line">    /usr/bin/java -&gt; /etc/alternatives/java</span><br><span class="line">    ~]<span class="comment"># ll /etc/alternatives/java</span></span><br><span class="line">    /etc/alternatives/java -&gt; /usr/lib/jvm/java-11-openjdk-11.0.1.13-3.el7_6.x86_64/bin/java</span><br><span class="line"></span><br><span class="line">安装tomcat(7.0)</span><br><span class="line">    tomcat-admin-webapps.noarch <span class="comment">#tomcat的web界面的管理的接口</span></span><br><span class="line">    tomcat-docs-webapp.noarch   <span class="comment">#参考文档</span></span><br><span class="line">    ~]<span class="comment"># yum install tomcat-admin-webapps tomcat-webapps tomcat-docs-webapp -y </span></span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># systemctl restart tomcat</span></span><br><span class="line">    <span class="comment">#运行身份为Java虚拟机运行</span></span><br><span class="line">    ~]<span class="comment"># ss -tnl</span></span><br><span class="line">    LISTEN      0      100             :::8009  (ajp)                                 </span><br><span class="line">    LISTEN      0      100             127.0.0.1:8005  (管理接口)    </span><br><span class="line">    LISTEN      0      100             :::8080 （http）</span><br></pre></td></tr></table></figure></p><p><code>部署方式2：Oracle JDK(oracle jdk 8u191 + tomcat 8.5)</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">oracle jdk 下载地址：https://www.oracle.com/technetwork/java/javase/downloads/index.html</span><br><span class="line">    ~]<span class="comment"># ls</span></span><br><span class="line">    jdk-8u191-linux-x64.rpm </span><br><span class="line">    ~]<span class="comment"># rpm -ivh jdk-8u191-linux-x64.rpm </span></span><br><span class="line">    默认安装路径</span><br><span class="line">    ~]<span class="comment"># ls /usr/java/</span></span><br><span class="line">    default  jdk1.8.0_191-amd64  latest</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># ll /usr/java/</span></span><br><span class="line">    default -&gt; /usr/java/latest     <span class="comment">#支持设置默认的版本</span></span><br><span class="line">    jdk1.8.0_191-amd64  <span class="comment">#同样支持多版本共存</span></span><br><span class="line">    latest -&gt; /usr/java/jdk1.8.0_191-amd64  <span class="comment">#支持设置最新的版本</span></span><br><span class="line"></span><br><span class="line">    验证是否安装成功（直接运行java程序）</span><br><span class="line">    查看版本信息</span><br><span class="line">    amd64]<span class="comment"># pwd</span></span><br><span class="line">    /usr/java/jdk1.8.0_191-amd64</span><br><span class="line">    amd64]<span class="comment"># /bin/java -version</span></span><br><span class="line">        java version <span class="string">"1.8.0_191"</span></span><br><span class="line">        Java(TM) SE Runtime Environment (build 1.8.0_191-b12)</span><br><span class="line">        Java HotSpot(TM) 64-Bit Server VM (build 25.191-b12, mixed mode)</span><br><span class="line"></span><br><span class="line">    修改PATH变量</span><br><span class="line">    ~]<span class="comment"># vim /etc/profile.d/java.sh</span></span><br><span class="line">    JAVA_HOME=/usr/java/default</span><br><span class="line">    PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></span><br><span class="line">    <span class="built_in">export</span> JAVA_HOME PATH</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># source /etc/profile.d/java.sh </span></span><br><span class="line">    ~]<span class="comment"># printenv </span></span><br><span class="line"></span><br><span class="line">tomcat 8.5安装</span><br><span class="line">下载路径：http://mirrors.hust.edu.cn/apache/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz</span></span><br><span class="line">    ~]<span class="comment"># tar xvf apache-tomcat-8.5.37.tar.gz -C /usr/local/</span></span><br><span class="line">    ~]<span class="comment"># ln -vs /usr/local/apache-tomcat-8.5.37 /usr/local/tomcat （链接形式方便升级）</span></span><br><span class="line"></span><br><span class="line">    tomcat不可使用root用户运行</span><br><span class="line">    ~]<span class="comment"># useradd tomcat</span></span><br><span class="line">    ~]<span class="comment"># chown -R tomcat.tomcat /usr/local/tomcat/</span></span><br><span class="line">    ~]<span class="comment"># chown -R tomcat.tomcat /usr/local/tomcat/*</span></span><br><span class="line">     ~]<span class="comment"># su - tomcat -c "/usr/local/tomcat/bin/catalina.sh start"</span></span><br><span class="line">    Using CATALINA_BASE:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">    Using CATALINA_HOME:   /usr/<span class="built_in">local</span>/tomcat</span><br><span class="line">    Using CATALINA_TMPDIR: /usr/<span class="built_in">local</span>/tomcat/temp</span><br><span class="line">    Using JRE_HOME:        /usr/bin/default</span><br><span class="line">    Using CLASSPATH:       /usr/<span class="built_in">local</span>/tomcat/bin/bootstrap.jar:/u</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># ss -tnl</span></span><br><span class="line">    LISTEN      0      100             :::8009  (ajp)                                 </span><br><span class="line">    LISTEN      0      100            127.0.0.1:8005  (管理接口)    </span><br><span class="line">    LISTEN      0      100             :::8080 （http）</span><br></pre></td></tr></table></figure></p><p>欢迎页：</p><ul><li>Manager App(应用程序管理器、web界面部署其他应用程序) 与 Host Manager 部署的管理程序</li></ul><p><img src="/2019/01/14/tomcat基础与部署/tomcat.png" alt=""></p><h2 id="Tomcat基本框架及相关配置"><a href="#Tomcat基本框架及相关配置" class="headerlink" title="Tomcat基本框架及相关配置"></a>Tomcat基本框架及相关配置</h2><p><img src="/2019/01/14/tomcat基础与部署/基础架构.png" alt=""></p><ul><li>如上图，Tomcat可以按功能划分许多不同的组件，这些组件都可以通过/conf/server.xml(部署描述符文件)文件中可定义和配置，包括Server, Service, Connector, Engine, Cluster, Host, Alias, Context, Realm, Valve, Manager, Listener, Resources, ResourceEnvRef, WatchedResource, Store, Transaction, Channel, Membership, Transport, Member, ClusterListener等，一般可分为以下四类：<ul><li>1、<code>Server顶级组件：</code>位于配置层次的顶级，并且彼此间有着严格的对应关系，有Server组件、Service组件；</li><li>2、<code>Connector连接器：</code>连接客户端（可以是浏览器或Web服务器）请求至Servlet容器，只有Connector组件（Connector才是一个具体特定、真正的程序，可以被单独部署和管理、启动停止暂停等。）</li><li>3、<code>Engine容器：</code>表示其功能是处理传入请求的组件，并创建相应的响应。如Engine处理对一个Service的所有请求，Host处理对特定虚拟主机的所有请求，并且Context处理对特定web应用的所有请求（容器类容器组件，可以容纳JSP应用程序的顶级组件）；</li><li>4、<code>Context被嵌套的组件：</code>位于一个容器当中，但不能包含其它组件；一些组件可以嵌套在任何Container中，而另一些只能嵌套在Context中。</li></ul></li></ul><hr><h2 id="server-xml默认配置"><a href="#server-xml默认配置" class="headerlink" title="server.xml默认配置"></a>server.xml默认配置</h2><ul><li><p>Tomcat：</p><ul><li>使用java语言编写：</li></ul></li><li><p><code>tomcat的配置文件构成：</code></p><ul><li><code>server.xml：</code>主配置文件；</li><li><code>web.xml：</code>每个webapp只有“部署”后才能被访问，它的部署方式通常由web.xml进行定义，其存放位置为WEB-INF/目录中；此文件为所有的webapps提供默认部署相关的配置；</li><li><code>context.xml：</code>每个webapp都可以专用的配置文件，它通常由专用的配置文件context.xml来定义，其存放位置为WEB-INF/目录中；此文件为所有的webapps提供默认配置；</li><li><code>tomcat-users.xml：</code>用户认证的账号和密码文件；</li><li><code>catalina.policy：</code>当使用-security选项启动tomcat时，用于为tomcat设置安全策略； </li><li><code>catalina.properties：</code>Java属性的定义文件，用于设定类加载器路径，以及一些与JVM调优相关参数；</li><li><code>logging.properties：</code>日志系统相关的配置；    log4j        </li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Tomcat的核心组件：server.xml</span><br><span class="line">&lt;Server&gt;</span><br><span class="line">&lt;Service&gt;</span><br><span class="line">&lt;connector/&gt;</span><br><span class="line">&lt;connector/&gt;</span><br><span class="line">...</span><br><span class="line">&lt;Engine&gt;</span><br><span class="line">&lt;Host&gt;</span><br><span class="line">&lt;Context/&gt;</span><br><span class="line">&lt;Context/&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/Host&gt;</span><br><span class="line">&lt;Host&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/Host&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/Engine&gt;</span><br><span class="line">&lt;/Service&gt;</span><br><span class="line">&lt;/Server&gt;</span><br></pre></td></tr></table></figure><hr><ul><li>更多Server配置信息请参考：《Apache Tomcat 8 Configuration Reference》 The Server Component<h2 id="基本组件"><a href="#基本组件" class="headerlink" title="基本组件"></a>基本组件</h2></li><li><code>1、Server组件</code><ul><li>erver（服务器）表示Tomcat的一个实例，因此，它必须是/conf / server.xml配置文件中的单个最外层元素，它的属性表示servlet容器的整体特性。通常一个JVM只能包含一个Tomcat实例。</li><li>默认配置表示监听在8005端口以接收shutdown命令，默认仅允许通过本机访问。</li></ul></li></ul><hr><ul><li><code>2、Service组件</code><ul><li>Service（服务）主要用于关联一个Engine和与此Engine相关的Connector，每个Connector通过一个特定的端口和协议接收请求，并将其转发至关联的Engine进行处理。</li><li>因此，Service可以包含一个Engine、以有一个或多个Connector；而一个Server可以包含多个Service组件，但通常情下只为一个Server指派一个Service。通常需要给Service命名，可以方便管理员在日志文件中识别不同Service产生的日志。</li><li>如默认配置中server只包含一个名为”Catalina”的service，而service里包含两个Connector，其中一个监听8080端口接收HTTP请求，另一个监听8009端口接收AJP协议的请求。</li></ul></li></ul><hr><ul><li><p><code>3、Connector组件</code></p><ul><li><p>如上面所述，Connector（连接器）通过一个特定的端口接收特定协议的客户端请求，并将其转发至关联的Engine进行处理。一个Engine可以配置多个连接器，但这些连接器必须使用不同的端口。</p></li><li><p>定义连接器可以使用多种属性，有些属性也只适用于某特定的连接器类型。一般说来，连接器类型可以分为两种：</p><ul><li><p>（1）、HTTP连接器</p><ul><li>HTTP连接器元素表示支持HTTP / 1.1协议的连接器组件，它能使Tomcat能够作为独立的Web服务器。此组件的特定实例侦听服务器上特定TCP端口号上的连接，每个转发到相关联的Engine以执行请求处理并创建响应。</li><li>默认配置文件，定义了一个连接器为protocol=”HTTP/1.1” 表示的是使用自动切换机制来选择基于Java NIOConnector或基于APR /Native Connector（需要设置），也可以手动指定</li></ul></li><li><p>2）、AJP 1.3连接器</p><ul><li>AJP连接器元素表示通过AJP(Apache JServ Protocol)协议与Web连接器通信的连接器组件。</li><li>AJP协议是基于二进制的格式在Web服务器和Tomcat之间传输数据，这比HTTPP获得更好的效率，但比较复杂不通用。</li><li>通常用于将Tomcat集成到现有Apache服务器中，并且希望Apache处理Web应用程序中包含的静态内容或SSL连接处理的情况，即Apache服务器作为代理服务器。Apache与Tomcat结合可以由mod_jk或mod_proxy模块来实现，但它们的使用范围不同：mod_jk支持apache/1.3,apache/2.0，mod_proxy支持apache/2.2+。</li><li>默认配置文件中定义了一个监听8009端口的AJP连接器，其实官方文档说明这种连接器不久后不再支持，一般用得不多，就不再多介绍了。</li><li>定义连接器时可以配置的属性非常多，但通常定义HTTP连接器时必须定义的属性只有”port”，定义AJP连接器时必须定义的属性只有”protocol”，因为默认的协议为HTTP。以下为常用属性的说明（更多请参考前面给出的文档）：   <ul><li>1、address：指定连接器监听的地址，默认为所有地址，即0.0.0.0；</li><li>2、maxThreads：支持的最大并发连接数，默认为200；</li><li>3、port：监听的端口，默认为0；</li><li>4、protocol：连接器使用的协议，默认为HTTP/1.1，定义AJP协议时通常为AJP/1.3；</li><li>5、redirectPort：如果某连接器支持的协议是HTTP，当接收客户端发来的HTTPS请求时，则转发至此属性定义的端口；</li><li>6、connectionTimeout：等待客户端发送请求的超时时间，单位为毫秒，默认为60000，即1分钟；</li><li>7、enableLookups：是否通过request.getRemoteHost()进行DNS查询以获取客户端的主机名；默认为true；</li><li>8、acceptCount：设置等待队列的最大长度；通常在tomcat所有处理线程均处于繁忙状态时，新发来的请求将被放置于等待队列中；</li></ul></li></ul></li></ul></li></ul></li></ul><hr><ul><li><code>4、Engine组件</code><ul><li>Engine（引擎）表示与特定Service相关联的整个请求处理机制，即Servlet容器引擎。它接收和处理来自一个或多个连接器的所有请求，并检查每一个请求的HTTP首部信息以辨别此请求应该发往哪个Host或Context，并将完成的响应返回到连接器，以便最终传输回客户端。</li><li>一个Engine元素必须嵌套在Service元素内，它可以包含多个host组件，还可以包含Realm、Listener和Valve等子容器。<ul><li>常用的属性定义：<ul><li>1、defaultHost：Tomcat支持基于FQDN的虚拟主机，这些虚拟主机可以通过在Engine容器中定义多个不同的Host组件来实现；但如果此引擎的连接器收到一个发往非非明确定义虚拟主机的请求时则需要将此请求发往一个默认的虚拟主机进行处理，因此，在Engine中定义的多个虚拟主机的主机名称中至少要有一个跟defaultHost定义的主机名称同名。</li><li>2、name：Engine组件的名称，用于日志和错误信息记录时区别不同的引擎。<ul><li>如默认配置中定义了一个名为”Catalina”的Engine，而Engine里包含一个Hots，并被配置为默认的虚拟主机。</li></ul></li></ul></li></ul></li></ul></li></ul><hr><ul><li><code>5、Host组件</code><ul><li>Host（虚拟主机）类似于Apache中的虚拟主机，但在Tomcat中只支持基于FQDN的”虚拟主机”。Host位于Engine容器中用于接收请求并进行相应处理，它是服务器（例如”<a href="http://www.mycompany.com&quot;）的网络名称与运行Tomcat的特定服务器的关联。" target="_blank" rel="noopener">www.mycompany.com&quot;）的网络名称与运行Tomcat的特定服务器的关联。</a></li><li>客户端通常使用主机名来标识他们希望连接的服务器，但要使客户端能够使用其网络名称连接到Tomcat服务器，此名称必须在管理所属的Internet域的域名服务（DNS）服务器中注册。此主机名也包含在HTTP请求标头中，Tomcat从HTTP头中提取主机名，并查找具有匹配名称的主机；如果未找到匹配项，请求将路由到默认主机。</li><li>一个Engine至少要包含一个Host组件，而在Host元素内可以嵌入与此虚拟主机关联的Web应用程序的Context等元素。<ul><li>常用属性说明：<ul><li>1、name：此Host的FQDN虚拟主机名称；</li><li>2、appBase：此Host的webapps目录，即存放非归档的web应用程序的目录或归档后的WAR文件的目录路径；可以使用基于$CATALINA_HOME的相对路径；</li><li>3、autoDeploy：在Tomcat处于运行状态时放置于appBase目录中的应用程序文件是否自动进行deploy；默认为true；</li><li>4、unpackWars：在启用此webapps时是否对WAR格式的归档文件先进行展开；默认为true。<ul><li>如默认配置中定义了一个主机名为”localhost”的Host，而webapps目录为$ CATALINA_BASE相对的”webapps”，即前面说到的默认目录，也可用绝对路径来配置其他目录。</li></ul></li></ul></li></ul></li></ul></li></ul><hr><ul><li><code>6、Context组件</code><ul><li>Context（上下文）表示在特定虚拟主机中运行的Web应用程序，一个Context对应一个Web应用程序，而里面的Wrapper可以理解为一个个Servlet程序。</li><li>Context需要根据其定义的上下文路径（path）匹配请求URI的最长前缀（除主机名外）来选择。一旦选择，可以由docBase来找到该上下文将对应的web应用程序部署目录，由目录中web.xml定义的servlet映射选择一个合适的servlet来处理传入的请求。</li><li>一个Host可以有多个Context，通常不建议定义在server.xml文件中，而是每一个context定义使用一个单独的XML文件进行，<code>其文件的目录为$CATALINA_HOME/conf/&lt;engine name&gt;/&lt;host name&gt;</code></li><li>可以看到server.xml中默认没有定义Context，但存在/conf/context.xml，在前面说Tomcat配置文件时曾介绍过，context.xml为部署与此Tomcat实例上所有的web应用程序提供的默认配置文件，</li><li>通过它可以找到默认的和各web应用程序提供部署描述符文件web.xml，/conf/web.xml定义了Tomcat提供的默认Servlet处理程序，主要用来处理静态资源请求；而各webapp的web.xml可以定义其他的动态请求url映射到不同Servlet程序处理。<ul><li>常用的属性定义有：<ul><li>1、docBase：相应的Web应用程序的存放位置；也可以使用相对路径，起始路径为此Context所属Host中appBase定义的路径；切记，docBase的路径名不能与相应的Host中appBase中定义的路径名有包含关系，比如，如果appBase为deploy，而docBase绝不能为deploy-bbs类的名字；</li><li>2、path：相对于Web服务器根路径而言的URI；如果为空””，则表示为此webapp的根路径；如果context定义在一个单独的xml文件中，此属性不需要定义；</li><li>3、reloadable：是否允许重新加载此context相关的Web应用程序的类；默认为false；</li></ul></li></ul></li></ul></li></ul><hr><ul><li><code>7、Realm组件</code><ul><li>Realm（领域）表示分配给这些用户的用户名，密码和角色（类似于Unix组）的”数据库”。一个Realm（领域）表示一个安全上下文，它是一个授权访问某个给定Context的用户列表和某用户所允许切换的角色相关定义的列表。</li><li>Catalina容器（Engine，Host或Context）可以包含不超过一个Realm元素（但自身可以嵌套）。此外，与引擎或主机关联的领域由低级容器自动继承，除非下级容器显式定义了自己的领域。如果没有为引擎配置领域，将自动为引擎配置空领域的实例。</li><li>定义Realm时惟一必须要提供的属性是classname，它是Realm的多个不同实现，用于表示此Realm认证的用户及角色等认证信息的存放位置，Tomcat中实现了多种不同的Realm，如下：<ul><li>UserDatabaseRealm：基于UserDatabase文件(通常是tomcat-user.xml)实现用户认证，它实现是一个完全可更新和持久有效的MemoryRealm，因此能够跟标准的MemoryRealm兼容；它通过JNDI实现；</li><li>LockOutRealm：提供锁定功能，以便在给定时间段内出现过多的失败认证尝试时提供用户锁定机制；</li><li>JAASRealm：基于Java Authintication and Authorization Service实现用户认证；</li><li>JDBCRealm：通过JDBC访问某关系型数据库表实现用户认证；</li><li>JNDIRealm：基于JNDI使用目录服务实现认证信息的获取；</li><li>MemoryRealm：查找tomcat-user.xml文件实现用户信息的获取。<ul><li>可以看到默认配置文件中定义了一个LockOutRealm并嵌套一个UserDatabaseRealm的Realm来通过tomcat-user.xml文件实现用户认证。</li></ul></li></ul></li></ul></li></ul><hr><ul><li><code>8、Valve组件</code><ul><li>Valve（阀门）类似于过滤器，用来拦截请求并在将其转至目标之前进行某种处理操作；它可以工作于Engine和Host/Context之间、Host和Context之间以及Context和Web应用程序的某资源之间。</li><li>Valve常被用来记录客户端请求、客户端IP地址和服务器等信息，这种处理技术通常被称作请求转储(request dumping)。请求转储valve记录请求客户端请求数据包中的HTTP首部信息和cookie信息文件中，响应转储valve则记录响应数据包首部信息和cookie信息至文件中。</li><li>一个容器内可以建立多个Valve，而且Valve定义的次序也决定了它们生效的次序。不同类型的Value具有不同的处理能力，Tomcat中实现了多种不同的Valve：<ul><li>AccessLogValve：访问日志Valve</li><li>ExtendedAccessValve：扩展功能的访问日志Valve</li><li>RequestDumperValve：请求转储Valve；</li><li>RemoteAddrValve：基于远程地址的访问控制；</li><li>RemoteHostValve：基于远程主机名称的访问控制；</li><li>SemaphoreValve：用于控制Tomcat主机上任何容器上的并发访问数量；</li><li>ReplicationValve：专用于Tomcat集群架构中，可以在某个请求的session信息发生更改时触发session数据在各节点间进行复制；</li><li>SingleSignOn：将两个或多个需要对用户进行认证webapp在认证用户时连接在一起，即一次认证即可访问所有连接在一起的webapp；</li><li>ClusterSingleSingOn：对SingleSignOn的扩展，专用于Tomcat集群当中，需要结合ClusterSingleSignOnListener进行工作。<ul><li>通过属性className定义相关的java实现的类名来选择Value。如默认配置文件中定义了一个AccessLogValve的Value来记录访问日志到文件中。</li></ul></li></ul></li></ul></li></ul><hr><h2 id="其他组件"><a href="#其他组件" class="headerlink" title="其他组件"></a>其他组件</h2><ul><li>1、Logger<ul><li>日志记录器(Logger)：用于记录组件内部的状态信息，可被用于除Context之外的任何容器中。日志记录的功能可被继承，因此，一个引擎级别的Logger将会记录引擎内部所有组件相关的信息，除非某内部组件定义了自己的Logger组件（前面介绍的AccessLogValve使用自包含的逻辑来写它的日志文件，以获得更好的效率）。</li></ul></li></ul><hr><ul><li>2、Listener<ul><li>Listener用于创建和配置LifecycleListener对象，而LifecycleListener通常被开发人员用来创建和删除容器。</li></ul></li></ul><hr><ul><li>3、Loader<ul><li>Java的动态装载功能是其语言功能强大表现之一，Servlet容器使用此功能在运行时动态装载servlet和它们所依赖的类。Loader可以用于Context中控制java类的加载，即WebApp类加载器。</li></ul></li></ul><hr><ul><li>4、Resources<ul><li>经常用于实现在Context中指定需要装载的但不在Tomcat本地磁盘上的应用资源，如Java类，HTML页面，JSP文件等。</li></ul></li></ul><hr><ul><li>5、GlobalNamingResources<ul><li>应用于整个服务器的JNDI映射，此可以避免每个Web应用程序都需要在各自的web.xml创建，这在web应用程序以WAR的形式存在时尤为有用。它通常可以包含三个子元素：Environment、Resource和ResourceEnvRef。</li></ul></li></ul><hr><ul><li>6、WatchedResource<ul><li>WatchedResource可以用于Context中监视指定的webapp程序文件的改变，并且能够在监视到文件内容发生改变时重新装载此文件。</li></ul></li></ul><hr><ul><li><p>7、Manager</p><ul><li><p>Manger对象用于实现HTTP会话管理的功能，Tomcat中有5种Manger的实现：</p><ul><li>1)StandardManager<ul><li>Tomcat6的默认会话管理器，用于非集群环境中对单个处于运行状态的Tomcat实例会话进行管理。当Tomcat关闭时，这些会话相关的数据会被写入磁盘上的一个名叫SESSION.ser的文件，并在Tomcat下次启动时读取此文件。</li></ul></li><li><p>2) PersistentManager</p><ul><li>当一个会话长时间处于空闲状态时会被写入到swap会话对象，这对于内存资源比较吃紧的应用环境来说比较有用。</li></ul></li><li><p>3)DeltaManager</p><ul><li>属于ClusterManager，用于Tomcat集群的会话管理器，它通过将改变了会话数据同步给集群中的其它节点实现会话复制。这种实现会将所有会话的改变同步给集群中的每一个节点，也是在集群环境中用得最多的一种实现方式。</li><li>但集群节点较多时，会消耗大量的网络资源，一般适用于3、4个节点的集群。</li></ul></li><li>4)BackupManager<ul><li>属于ClusterManager，用于Tomcat集群的会话管理器，与DeltaManager不同的是，某节点会话的改变只会同步给集群中的另一个而非所有节点。</li></ul></li><li>5)SimpleTcpReplicationManager<ul><li>Tomcat4时用到的版本，过于老旧了。</li></ul></li></ul></li></ul></li></ul><hr><ul><li>8、Stores<ul><li>PersistentManager必须包含一个Store元素以指定将会话数据存储至何处。这通常有两种实现方式：FileStore和JDBCStore。</li></ul></li></ul><hr><ul><li>9、Cluster<ul><li>专用于配置Tomcat集群的元素，可用于Engine和Host容器中。在用于Engine容器中时，Engine中的所有Host均支持集群功能。在Cluster元素中，需要直接定义一个Manager元素，这个Manager元素有一个其值为org.apache.catalina.ha.session.DeltaManager或org.apache.catalina.ha.session.BackupManager的className属性。同时，Cluster中还需要分别定义一个Channel和ClusterListener元素。</li></ul></li></ul><hr><ul><li>10、Channel<ul><li>用于Cluster中给集群中同一组中的节点定义通信”信道”。Channel中需要至少定义Membership、Receiver和Sender三个元素，此外还有一个可选元素Interceptor。</li></ul></li></ul><hr><ul><li>11、Membership<ul><li>用于Channel中配置同一通信信道上节点集群组中的成员情况，即监控加入当前集群组中的节点并在各节点间传递心跳信息，而且可以在接收不到某成员的心跳信息时将其从集群节点中移除。Tomcat6中Membership的实现是org.apache.catalina.tribes.membership.McastService。</li></ul></li></ul><hr><ul><li>12、Sender<ul><li>用于Channel中配置”复制信息”的发送器，实现发送需要同步给其它节点的数据至集群中的其它节点。发送器不需要属性的定义，但可以在其内部定义一个Transport元素。</li></ul></li></ul><hr><ul><li><p>13、Transport</p><ul><li><p>用于Sender内部，配置数据如何发送至集群中的其它节点。Tomcat有两种Transport的实现：</p></li><li><p>1) PooledMultiSender</p><ul><li>基于Java阻塞式IO，可以将一次将多个信息并发发送至其它节点，但一次只能传送给一个节点。</li></ul></li><li>2)PooledParallelSener<ul><li>基于Java非阻塞式IO，即NIO，可以一次发送多个信息至一个或多个节点。</li></ul></li></ul></li></ul><hr><ul><li>14、Receiver</li><li>用于Channel定义某节点如何从其它节点的Sender接收复制数据，Tomcat中实现的接收方式有两种BioReceiver和NioReceiver。</li></ul><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;tomcat基础与组件&quot;&gt;&lt;a href=&quot;#tomcat基础与组件&quot; class=&quot;headerlink&quot; title=&quot;tomcat基础与组件&quot;&gt;&lt;/a&gt;tomcat基础与组件&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/14/tomcat基础与部署/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://daizhe.net.cn/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="https://daizhe.net.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>tomcat之java基础</title>
    <link href="https://daizhe.net.cn/2019/01/14/tomcat%E4%B9%8Bjava%E5%9F%BA%E7%A1%80/"/>
    <id>https://daizhe.net.cn/2019/01/14/tomcat之java基础/</id>
    <published>2019-01-14T08:55:23.392Z</published>
    <updated>2019-01-14T12:46:12.378Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tomcat之java基础"><a href="#tomcat之java基础" class="headerlink" title="tomcat之java基础"></a>tomcat之java基础</h1><p><img src="/2019/01/14/tomcat之java基础/标题.png" alt=""><br><a id="more"></a></p><h2 id="java基础"><a href="#java基础" class="headerlink" title="java基础"></a>java基础</h2><h3 id="什么是java"><a href="#什么是java" class="headerlink" title="什么是java"></a>什么是java</h3><ul><li>java所涉及到的相关概念如下图。总体来说就是java语言、java API、jvm等构成。</li><li>jvm：java虚拟机，java的代码都是运行在jvm上，这是java语言跨平台的保证，针对不同的系统jvm也不同，这就实现了同一份代码，通过不同jvm的运行可以让对应的操作系统识别。</li><li>JRE（java running environment）：就是提供给java代码一个运行环境，java代码运行在jvm上，但是开发程序的时候往往除本身代码外会有引入的api，当程序运行时，jvm会加载相关的类，所以一个能保证代码能正常运行的环境是jvm+api（java se api）。</li><li>JDK（java development kit）：java开发环境，JDK=java语言+开发相关的API+JRE。开发环境除了要正常运行程序外（JRE环境），还需要进行开发相关的操作如打包、编译等这类工具。</li></ul><p><img src="/2019/01/14/tomcat之java基础/java.png" alt=""></p><h3 id="JAVA-API"><a href="#JAVA-API" class="headerlink" title="JAVA API"></a>JAVA API</h3><ul><li><p>平时API听多了，但是或许并不了解，这里做下简要解释。一个操作系统会提供很多API接口让程序员使用计算机的硬件资源，这是系统API，这里涉及到一个POSXI的概念，POSIX表示可移植操作系统接口（Portable Operating System Interface ，缩写为 POSIX ），POSIX标准定义了操作系统应该为应用程序提供的接口标准，为一个POSIX兼容的操作系统编写的程序，应该可以在任何其它的POSIX操作系统（即使是来自另一个厂商）上编译执行。因为遵循POSXI标准的操作系统，所定义的操作系统API都相同，所以开发程序的时候，使用的API在名称参数上都可以兼容，所以换一个系统，不需要重新编写代码。POSIX是针对API的标准，即针对API的函数名，返回值，参数类型等。POSIX兼容也就指定这些接口函数兼容，但是并不管API具体如何实现。</p></li><li><p>Java api：就是用java语言编写的功能代码，为访问主机上的本地资源，Java api调用了本地方法（操作系统API），直接通过内核请求调用相关内核函数。而后将功能相似的这些代码归类，组成java api类库。</p></li><li><p>以linux编程为例：我们编写linux用户程序的时候，是不能直接调用内核里面的函数的，内核里面的函数位于进程虚拟地址空间里面的内核空间，用户空间函数及函数库都处于进程虚拟地址空间里面的用户空间，用户空间调用内核空间的函数只有一个通道，这个通道就是系统调用指令，所以通常要调用glibc等库的接口函数（C语言的API），glibc也是用户空间的，但glibc自己实现了调用特殊的宏汇编系统调用指令进行cpu运行状态的切换，把进程从用户空间切换到内核空间。</p></li></ul><p><img src="/2019/01/14/tomcat之java基础/api.png" alt=""><br><img src="/2019/01/14/tomcat之java基础/a.png" alt=""></p><h3 id="JVM-内存结构"><a href="#JVM-内存结构" class="headerlink" title="JVM 内存结构"></a>JVM 内存结构</h3><p><img src="/2019/01/14/tomcat之java基础/jvm.png" alt=""></p><ul><li><p>java中通过多线程机制使得多个任务同时执行处理，所有的线程共享JVM内存区域main memory，而每个线程又单独的有自己的工作内存，当线程与内存区域进行交互时，数据从主存拷贝到工作内存，进而交由线程处理。</p></li><li><p>程序计数器（Program Counter Register）：由于Java 虚拟机的多线程是通过线程轮流切换并分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器（对于多核处理器来说是一个内核）只会执行一条线程中的指令。因此，为了线程切换后能恢复到正确的执行位置，每条线程都需要有一个独立的程序计数器</p></li><li><p>Java 虚拟机栈（Java Virtual Machine Stacks）：每个放在被执行的时候都会同时创建一个栈帧用于存当前线程中局部基本类型的变量（java中定义的八种基本类型：boolean、char、byte、short、int、long、float、double），操作数栈，动态链接，方法出口等信息。虚拟内存栈就是我们经常讲的“栈”。其中局部变量表所需内存是在编译期完成分配。</p></li><li><p>方法区（Method Area）：与Java 堆一样，是各个线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。它有一个别名叫做Non-Heap（非堆），目的应该是与Java 堆区分开来。也称为持久代（Permanet Generation）。</p></li><li><p>Java 堆（Java Heap）：是Java 虚拟机所管理的内存中最大的一块。它是JVM用来存储对象实例以及数组值的区域，可以认为Java中所有通过new创建的对象的内存都在此分配。Java 堆是垃圾收集器管理的主要区域，因此很多时候也被称做“GC 堆”（Garbage Collected Heap）。</p></li><li><p>本地方法栈：与虚拟机栈类似，区别在于虚拟机栈为虚拟机执行Java方法服务，而本地方法栈为虚拟机使用Native方法（系统接口）服务。</p></li></ul><h3 id="WEB-CGI"><a href="#WEB-CGI" class="headerlink" title="WEB CGI"></a>WEB CGI</h3><ul><li><p>早期的web只能实现静态的页面，如果我们需要一种效果，就是我们向服务器请求时想让web服务器现场处理并将处理过的数据结果返回给我们，该如何实现呢。</p><ul><li>第一种方式：开发一个程序，接收用户请求，解析请求内容，查找相关数据进行计算处理，将处理结果封装成响应报文返回给用户。</li><li>第二种方式：既然已经存在web服务器了，那没必要重新开发程序来处理HTTP协议的东西，只需要开发另一种方式，让计算机能够将处理后的数据，发送给web服务器，服务器再返回给用户</li><li>于是CGI协议就产生了，web服务器接收到请求，可是它自身无法解决请求之中需要经过计算处理的内容，那样服务器就去找帮手，找个能处理这个内容的其他程序，这个其他程序通过一种方式（CGI）和服务器进行交流，处理好之后将结果送给web服务器。</li></ul></li><li><p>早期使用的web服务器扩展机制CGI，它允许用户调用web服务器上的CGI程序。CGI即是公共网关接口，大多数的CGI程序使用Perl来编写，也使用C、Pyhton或者PHP来编写。用户通过单机某个链接或者直接在浏览器的地址栏中输入Url来访问CGI程序，web服务接收到请求后，发现这个请求是给CGI程序的，于是就启动并运行这个CGI程序，对用户请求进行处理，CGI程序解析请求中的CGI数据，处理数据，并产生了一个响应（通常是HTML页面）。这个响应被返回给Web服务器，Web服务器包装这个响应（例如添加消息报头），以HTTP响应的形式发送给web浏览器</p></li></ul><p><img src="/2019/01/14/tomcat之java基础/web.png" alt=""></p><h2 id="什么是CGI"><a href="#什么是CGI" class="headerlink" title="什么是CGI"></a>什么是CGI</h2><ul><li>如上文所述，HTTP服务器是一个很简单的东西，并不负责动态页面的构建，只能转发静态页面，事物总是不断发展，网站也越来越复杂，所以出现动态技术。同时Apache也说，能支持perl，生成动态页面，这个支持perl，其实是Apache越位了，做了一件额外的事情。</li><li>既然HTTP Server自己不能做，外包给别人但是要与第三者做个约定，我给你什么，然后你给我什么，就是我把请求参数发给你，然后我接收你的处理结果给客户端，那这个约定就是Common Gatway Interface(CGI)</li><li>CGI全称是“通用网关接口”，是HTTP服务器与你的或其他机器上的程序进行“交谈”的一种工具，其程序必须运行在网络服务器上，是一种根据请求信息动态产生的响应内容的接口协议，CGI可以用任何一种语言编写，只要这种语言具有标准输入，输出和环境变量。如php，perl,tcl等。</li><li>通过CGI,HTTP sERVER可以将根据请求不同启动不同的外部程序，并将请求内容转发给该程序，在程序执行结束后，将执行结果作为回应返回给客户端。也就是说，对于每个请求，都要产生一个新的进程进行处理，因为每个进程都会占有很多服务器的资源和时间，这就导致服务器无法同时处理很多的并发请求，另外CGI程序都是与操作系统平台相关的，虽然在互联网爆发的初期，CGI为开发互联网应用做出了很大的贡献，但是随着技术的发展，开始逐渐衰落。所以，CGI的定义是：外部应用程序与HTTP服务器之间的接口协议。</li></ul><h2 id="Serlvet与Servlet容器"><a href="#Serlvet与Servlet容器" class="headerlink" title="Serlvet与Servlet容器"></a>Serlvet与Servlet容器</h2><ul><li>当java想实现CGI这样的功能时，因为java代码运行在jvm中，而jvm是没有办法直接跟web服务器进行交流的，所以Servlet就出现了。</li><li><p>当初在Apache Server 开发时CGI这样的功能时还未出现Serlet的概念，所以Apache不能内置支持Servlet。实际上，除了Apache，其他许多HTTP Server软件都不能直接支持Servlet。为了支持Servlet，通常要单独开发程序，这种程序一般称为服务小程序的容器（servlet container） ，有时也叫做服务器小程序引擎（servlet engine）。它的web服务器或者应用程序服务器的一部分，用于在发送的请求和响应之上提供的网络服务，解码基于MMIE的请求，格式化基于MIME的响应，它在Servlet的生命周期内包括和管理Servlet，是一个实时运行的外壳程序，运行时由wab服务器软件处理一般的请求，并把Servlet调用传递给“容器”来处理。</p></li><li><p>既然java作为编程语言，那么我们可以开发自己想要的功能，我们开发一个程序，使之能够与web服务器进行交互。所以java写了一个servlet类，这个类可以实例化为servlet程序，这个程序可以接受来自web服务器的请求并处理。那问题又来了， 如果多个web请求过来，仅仅一个Servlet程序是不够的，而且请求来了如何对java代码编译呢，于是乎就在外层增加一个管理功能的容器（这里纯属个人臆想），所以如果把Servlet类库完整实现了，那就是Servlet容器。这个容器的作用是什么呢？</p><ul><li><p>1、利用容器提供的方法，你能轻松的让servlet与web服务器对话，而不用自己建立serversocket、监听某个端口、创建流等等。容器知道自己与web服务器之间的协议，所以你的servlet不用担心web服务器（如Apache）和你自己的web代码之间的API，只需要考虑如何在servlet中实现业务逻辑（比如从数据库或者磁盘中获取数据并处理）。</p></li><li><p>2、多线程支持：容器会自动为它所接收的每个servlet请求创建一个新的java线程。针对用户的请求，如果servlet已经运行完相应的http服务方法，这个线程就会结束。</p></li><li><p>3、生命周期管理：servlet容器控制着servlet的生与死，它负责加载类、实例化和初始化servlet，调用servlet方法，以及使servlet实例被垃圾回收。</p></li></ul></li></ul><p><img src="/2019/01/14/tomcat之java基础/容器.png" alt=""></p><ul><li><p>Java Servlet 是运行在 Web 服务器或应用服务器上的程序，它是作为来自 Web 浏览器或其他 HTTP 客户端的请求和 HTTP 服务器上的数据库或应用程序（服务器响应）之间的中间层，位于Web 服务器内部的服务器端的Java应用程序，与传统的从命令行启动的Java应用程序不同，Servlet由Web服务器进行加载，该Web服务器必须包含支持Servlet的Java虚拟机。客户端发送请求至服务器；服务器启动并调用Servlet，Servlet根据客户端请求生成响应内容并将其传给服务器；服务器将响应返回客户端。       </p></li><li><p>servlet就是一个组件，需要部署到servlet容器才能运行。servlet容器为servlet提供网络相关的服务：即servlet容器为将请求中的相关数据解析出来，并且封装到请求对象(request)里面，这样一来，servlet就不需要理解http协议(只需要调用request对象的相关方法即可获取数)，另外，当servlet处理请求完毕，只需要将结果写到响应对象(response)里面,servlet容器会自动将response对象中的数据打包，发送给浏览器。</p></li></ul><h2 id="java-servlet-简单代码实现"><a href="#java-servlet-简单代码实现" class="headerlink" title="java servlet 简单代码实现"></a>java servlet 简单代码实现</h2><ul><li><p>Java Servlet与CGI (Common Gateway Interface 公共网关接口)的比较:</p></li><li><p>与传统的CGI和许多其他类似CGI的技术相比，Java Servlet具有更高的效率，更容易使用，功能更强大，具有更好的可移植性，更节省投资。在未来的技术发展过程中，Servlet有可能彻底取代CGI。</p></li><li><p>在传统的CGI中，每个请求都要启动一个新的进程，如果CGI程序本身的执行时间较短，启动进程所需要的开销很可能反而超过实际执行时间。而在Servlet中，每个请求由一个轻量级的Java线程处理(而不是重量级的操作系统进程)。</p></li><li><p>在传统CGI中，如果有N个并发的对同一CGI程序的请求，则该CGI程序的代码在内存中重复装载了N次；而对于Servlet，处理请求的是N个线程，只需要一份Servlet类代码。在性能优化方面，Servlet也比CGI有着更多的选择。</p></li></ul><h2 id="JSP"><a href="#JSP" class="headerlink" title="JSP"></a>JSP</h2><ul><li>使用Servlet可以实现java程序和web服务器的交互，但是Servlet和CGI一样存在一个问题，Servlet程序在返回结果的时候必须连带HTML标签一起返回，所以负责格式显示的HTML代码和负责数据产生的Java代码混在一起了，程序员和页面编辑人员无法各自实现自己的工作，就要求java程序员必须要了解HTML显示效果。所以就有了JSP技术产生，有了JSP一个web请求的执行流程如下。</li></ul><p><img src="/2019/01/14/tomcat之java基础/jsp.png" alt=""></p><ul><li>其实JSP也是java的一个类库而已，要想写出的JSP代码能够被识别，这时候就需要一个JSP容器负责来解析。JSP代码最终会被编译成Servlet，然后再由Servlet处理请求。一个JSP页面包含了JSP规范的java代码（元素）和HTML标签（数据模板），元素则交给JSP容器处理，模板数据直接返回给客户端。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;tomcat之java基础&quot;&gt;&lt;a href=&quot;#tomcat之java基础&quot; class=&quot;headerlink&quot; title=&quot;tomcat之java基础&quot;&gt;&lt;/a&gt;tomcat之java基础&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/14/tomcat之java基础/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="tomcat" scheme="https://daizhe.net.cn/categories/tomcat/"/>
    
    
      <category term="tomcat" scheme="https://daizhe.net.cn/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>mariadb实现二进制安装</title>
    <link href="https://daizhe.net.cn/2019/01/13/mariadb%E5%AE%9E%E7%8E%B0%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%AE%89%E8%A3%85/"/>
    <id>https://daizhe.net.cn/2019/01/13/mariadb实现二进制安装/</id>
    <published>2019-01-13T12:22:48.489Z</published>
    <updated>2019-01-13T12:24:05.217Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mariadb实现二进制安装"><a href="#mariadb实现二进制安装" class="headerlink" title="mariadb实现二进制安装"></a>mariadb实现二进制安装</h1><p><img src="/2019/01/13/mariadb实现二进制安装/标题.png" alt=""><br><a id="more"></a></p><h2 id="通用二进制格式安装过程"><a href="#通用二进制格式安装过程" class="headerlink" title="通用二进制格式安装过程"></a>通用二进制格式安装过程</h2><p>范例：二进制格式安装的mysql版本为：mysql-10.2</p><pre><code class="bash">第一步：将二进制编译完的文件传进linux中，解压缩、创建软连接[root@centos7 ~]<span class="comment"># ls</span>mariadb-10.2.19-linux-x86_64.tar.gz [root@centos7 ~]<span class="comment"># tar xfv mariadb-10.2.19-linux-x86_64.tar.gz -C /usr/local</span>[root@centos7 ~]<span class="comment"># ls /usr/local</span>bin  games    lib    libexec                       sbin   srcetc  include  lib64  mariadb-10.2.19-linux-x86_64  share   创建软连接，方便下次升级（链接程序所在路径，因为源码编译时文档中指定程序路径放置在/usr/<span class="built_in">local</span>/mysql）[root@centos7 ~]<span class="comment"># ln -s /usr/local/mariadb-10.2.19-linux-x86_64/ /usr/local/mysql</span>[root@centos7 ~]<span class="comment"># ll /usr/local/mysql</span>lrwxrwxrwx. 1 root root 40 Nov 27 17:01 /usr/<span class="built_in">local</span>/mysql -&gt; /usr/<span class="built_in">local</span>/mariadb-10.2.19-linux-x86_64/第二步：修改程序目录的属性[root@centos7 ~]<span class="comment"># chown -R root:root /usr/local/mysql/</span>[root@centos7 ~]<span class="comment"># ll /usr/local/mysql/</span>total 180drwxrwxr-x.  2 root root  4096 Sep 23 10:13 bin  程序-rw-r--r--.  1 root root 17987 Nov 13 00:32 COPYING-rw-r--r--.  1 root root 86263 Nov 13 00:32 COPYING.thirdparty-rw-r--r--.  1 root root  2354 Nov 13 00:32 CREDITSdrwxrwxr-x.  3 root root    18 Nov 13 07:37 data-rw-r--r--.  1 root root  8245 Nov 13 00:32 EXCEPTIONS-CLIENTdrwxrwxr-x.  3 root root    19 Nov 13 07:37 include-rw-r--r--.  1 root root  8694 Nov 13 00:32 INSTALL-BINARYdrwxrwxr-x.  5 root root  4096 Sep 23 10:14 libdrwxrwxr-x.  4 root root    30 Nov 13 07:37 mandrwxrwxr-x. 11 root root  4096 Nov 13 07:37 mysql-test-rw-r--r--.  1 root root  2469 Nov 13 00:32 README.md-rw-r--r--.  1 root root 19510 Nov 13 00:32 README-wsrepdrwxrwxr-x.  2 root root    30 Nov 13 07:37 scriptsdrwxrwxr-x. 32 root root  4096 Nov 13 07:37 sharedrwxrwxr-x.  4 root root  4096 Nov 13 07:37 sql-benchdrwxrwxr-x.  3 root root   275 Nov 13 07:37 support-files第三步：创建程序用户[root@centos7 ~]<span class="comment"># useradd -r -s /sbin/nologin -d /data/mysql -c "mariadb user" mysql</span>[root@centos7 ~]<span class="comment"># getent passwd mysql</span>mysql:x:989:983:mariadb user:/data/mysql:/sbin/nologin第四步：创建数据库目录：存放数据库的数据[root@centos7 ~]<span class="comment"># ls -ld /data/mysql</span>ls: cannot access /data/mysql: No such file or directory[root@centos7 ~]<span class="comment"># mkdir /data/mysql</span>[root@centos7 ~]<span class="comment"># install -d /data/mysql -o root -g mysql</span>[root@centos7 ~]<span class="comment"># ls -ld /data/mysql</span>drwxr-xr-x. 2 root mysql 6 Nov 27 17:15 /data/mysql第四步：生成系统数据库[root@centos7 ~]<span class="comment"># ls /usr/local/mysql/</span>bin                 include         README-wsrepCOPYING             INSTALL-BINARY  scriptsCOPYING.thirdparty  lib             shareCREDITS             man             sql-benchdata                mysql-test      support-filesEXCEPTIONS-CLIENT   README.md  安装数据库的脚本：生成系统数据库  [root@centos7 ~]<span class="comment"># ls /usr/local/mysql/scripts/</span>   mysql_install_db[root@centos7 mysql]<span class="comment"># pwd</span>/usr/<span class="built_in">local</span>/mysql[root@centos7 mysql]<span class="comment"># scripts/mysql_install_db --user=mysql --datadir=/data/mysql</span>   确定是否生成了数据库   [root@centos7 mysql]<span class="comment"># ls /data/mysql/</span>    aria_log.00000001  ibdata1      mysql    aria_log_control   ib_logfile0  performance_schema    ib_buffer_pool     ib_logfile1  <span class="built_in">test</span>第五步：准备数据库的配置文件[root@centos7 ~]<span class="comment"># mkdir /etc/mysql</span>[root@centos7 ~]<span class="comment"># ls /usr/local/mysql/support-files/</span>binary-configure        my-medium.cnf        policymagic                   my-small.cnf         wsrep.cnfmy-huge.cnf             mysqld_multi.server  wsrep_notifymy-innodb-heavy-4G.cnf  mysql-log-rotatemy-large.cnf            mysql.server[root@centos7 ~]<span class="comment"># cd /usr/local/mysql/support-files/</span>[root@centos7 support-files]<span class="comment"># cp my-huge.cnf /etc/mysql/my.cnf</span>第六步：修改配置文件，根据自己定义的数据路径进行修改[root@centos7 ~]<span class="comment"># vim /etc/mysql/my.cnf </span>[mysqld]datadir=/data/mysqlport            = 3306socket          = /tmp/mysql.sock第七步：准备程序服务的启动脚本[root@centos7 ~]<span class="comment"># ls /usr/local/mysql/support-files/</span>mysql.server[root@centos7 ~]<span class="comment"># cp /usr/local/mysql/support-files/mysql.server  /etc/init.d/</span>  可以改名，方便启动[root@centos7 ~]<span class="comment"># cd /etc/init.d/</span>[root@centos7 init.d]<span class="comment"># ls</span><span class="built_in">functions</span>  mysql.server  netconsole  network  README[root@centos7 init.d]<span class="comment"># mv mysql.server mysqld</span>第八步：准备启动[root@centos7 ~]<span class="comment"># chkconfig --add mysqld</span>[root@centos7 ~]<span class="comment"># chkconfig --list</span>mysqld             0:off    1:off    2:on    3:on    4:on    5:on    6:offnetconsole         0:off    1:off    2:off    3:off    4:off    5:off    6:offnetwork            0:off    1:off    2:on    3:on    4:on    5:on    6:off启动[root@centos7 ~]<span class="comment"># service mysqld restart</span>Restarting mysqld (via systemctl):                         [  OK  ]准备PATH变量[root@centos7 ~]<span class="comment"># echo 'PATH=/usr/local/mysql/bin:$PATH' &gt; /etc/profile.d/mysql.sh</span>[root@centos7 ~]<span class="comment"># source /etc/profile.d/mysql.sh </span>连接测试[root@centos7 ~]<span class="comment"># mysql</span>Welcome to the MariaDB monitor.  Commands end with ; or \g.Your MariaDB connection id is 10Server version: 10.2.19-MariaDB-log MariaDB ServerCopyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.MariaDB [(none)]&gt; <span class="built_in">exit</span>查看数据库路径方法1MariaDB [(none)]&gt; show variables like <span class="string">'datadir'</span>    -&gt; ;+---------------+--------------+| Variable_name | Value        |+---------------+--------------+| datadir       | /data/mysql/ |+---------------+--------------+1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)方法2MariaDB [(none)]&gt; select @@datadir    -&gt; ;+--------------+| @@datadir    |+--------------+| /data/mysql/ |+--------------+1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)执行初始化安装脚本[root@centos7 ~]<span class="comment"># ls /usr/local/mysql/bin/</span> mysql_secure_installation[root@centos7 ~]<span class="comment"># mysql_secure_installation</span></code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;mariadb实现二进制安装&quot;&gt;&lt;a href=&quot;#mariadb实现二进制安装&quot; class=&quot;headerlink&quot; title=&quot;mariadb实现二进制安装&quot;&gt;&lt;/a&gt;mariadb实现二进制安装&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/13/mariadb实现二进制安装/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://daizhe.net.cn/categories/mysql/"/>
    
    
      <category term="msql" scheme="https://daizhe.net.cn/tags/msql/"/>
    
  </entry>
  
  <entry>
    <title>mairadb实现源码安装</title>
    <link href="https://daizhe.net.cn/2019/01/13/mairadb%E5%AE%9E%E7%8E%B0%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85/"/>
    <id>https://daizhe.net.cn/2019/01/13/mairadb实现源码安装/</id>
    <published>2019-01-13T12:19:59.545Z</published>
    <updated>2019-01-13T12:22:04.692Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mairadb实现源码安装"><a href="#mairadb实现源码安装" class="headerlink" title="mairadb实现源码安装"></a>mairadb实现源码安装</h1><p><img src="/2019/01/13/mairadb实现源码安装/标题.png" alt=""><br><a id="more"></a></p><h2 id="mairadb实现源码安装10-2-19"><a href="#mairadb实现源码安装10-2-19" class="headerlink" title="mairadb实现源码安装10.2.19"></a>mairadb实现源码安装10.2.19</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">第一步：安装相关的依赖包</span><br><span class="line">[root@centos7 yum.repos.d]<span class="comment"># yum install bison bison-devel  zlib-devel libcurl-devel libarchive-devel  boost-devel  gcc  gcc-c++  cmake ncurses-devel gnutls-devel libxml2-devel openssl-devel libevent-devel libaio-devel</span></span><br><span class="line"></span><br><span class="line">第二步：创建对应的账号              （数据库存放数据的路径）</span><br><span class="line">[root@centos7 yum.repos.d]<span class="comment"># useradd -r -s /sbin/nologin -d  /data/mysql/  mysql </span></span><br><span class="line"></span><br><span class="line">第三步：创建数据对应的数据库路径</span><br><span class="line">[root@centos7 ~]<span class="comment"># mkdir /data/mysql</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># chown mysql:mysql /data/mysql</span></span><br><span class="line"></span><br><span class="line">第四步：下载源码解压</span><br><span class="line">[root@centos7 ~]<span class="comment"># ls</span></span><br><span class="line">mariadb-10.2.19.tar.gz</span><br><span class="line">[root@centos7 ~]<span class="comment"># tar xvf mariadb-10.2.19.tar.gz </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># ls</span></span><br><span class="line">mariadb-10.2.19        </span><br><span class="line">mariadb-10.2.19.tar.gz</span><br><span class="line">[root@centos7 ~]<span class="comment"># du -sh mariadb-10.2.19</span></span><br><span class="line">506Mmariadb-10.2.19</span><br><span class="line"></span><br><span class="line">第五步：cmack编译</span><br><span class="line">[root@centos7 ~]<span class="comment"># cd mariadb-10.2.19/</span></span><br><span class="line">[root@centos7 mariadb-10.2.19]<span class="comment"># cmake . \</span></span><br><span class="line">-DCMAKE_INSTALL_PREFIX=/app/mysql \</span><br><span class="line">-DMYSQL_DATADIR=/data/mysql/ \</span><br><span class="line">-DSYSCONFDIR=/etc \</span><br><span class="line">-DMYSQL_USER=mysql \</span><br><span class="line">-DWITH_INNOBASE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_ARCHIVE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_PARTITION_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITHOUT_MROONGA_STORAGE_ENGINE=1 \</span><br><span class="line">-DWITH_DEBUG=0 \</span><br><span class="line">-DWITH_READLINE=1 \</span><br><span class="line">-DWITH_SSL=system \</span><br><span class="line">-DWITH_ZLIB=system \</span><br><span class="line">-DWITH_LIBWRAP=0 \</span><br><span class="line">-DENABLED_LOCAL_INFILE=1 \</span><br><span class="line">-DMYSQL_UNIX_ADDR=/data/mysql/mysql.sock \</span><br><span class="line">-DDEFAULT_CHARSET=utf8 \</span><br><span class="line">-DDEFAULT_COLLATION=utf8_general_ci</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> 多线程编译</span><br><span class="line">[root@centos7 ~]<span class="comment"># make -j 4 &amp;&amp; make install</span></span><br><span class="line"></span><br><span class="line">[root@centos7 mariadb-10.2.19]<span class="comment"># ls /app/mysql/</span></span><br><span class="line">bin                 EXCEPTIONS-CLIENT  README.md</span><br><span class="line">COPYING             include            README-wsrep</span><br><span class="line">COPYING.thirdparty  INSTALL-BINARY     scripts</span><br><span class="line">CREDITS             lib                share</span><br><span class="line">data                man                sql-bench</span><br><span class="line">docs                mysql-test         support-files</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">第五步：生成数据库文件</span><br><span class="line">[root@centos7 mysql]<span class="comment"># scripts/mysql_install_db --user=mysql --datadir=/data/mysql</span></span><br><span class="line"></span><br><span class="line">[root@centos7 mysql]<span class="comment"># ls -l  /data/mysql/</span></span><br><span class="line">total 110620</span><br><span class="line">-rw-rw----. 1 mysql mysql    16384 Nov 27 21:02 aria_log.00000001</span><br><span class="line">-rw-rw----. 1 mysql mysql       52 Nov 27 21:02 aria_log_control</span><br><span class="line">-rw-rw----. 1 mysql mysql      938 Nov 27 21:02 ib_buffer_pool</span><br><span class="line">-rw-rw----. 1 mysql mysql 12582912 Nov 27 21:02 ibdata1</span><br><span class="line">-rw-rw----. 1 mysql mysql 50331648 Nov 27 21:02 ib_logfile0</span><br><span class="line">-rw-rw----. 1 mysql mysql 50331648 Nov 27 21:02 ib_logfile1</span><br><span class="line">drwx------. 2 mysql root      4096 Nov 27 21:02 mysql</span><br><span class="line">drwx------. 2 mysql mysql       20 Nov 27 21:02 performance_schema</span><br><span class="line">drwx------. 2 mysql root         6 Nov 27 21:02 <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">第六步：设置PATH变量</span><br><span class="line">[root@centos7 mysql]<span class="comment"># echo 'PATH=/app/mysql/bin:$PATH' &gt; /etc/profile.d/mysql.sh</span></span><br><span class="line">[root@centos7 mysql]<span class="comment"># source /etc/profile.d/mysql.sh </span></span><br><span class="line"></span><br><span class="line">第七步：拷贝模板配置文件</span><br><span class="line">[root@centos7 mysql]<span class="comment"># pwd</span></span><br><span class="line">/app/mysql</span><br><span class="line">[root@centos7 mysql]<span class="comment"># cp support-files/my-huge.cnf /etc/my.cnf</span></span><br><span class="line">cp: overwrite ‘/etc/my.cnf’? y</span><br><span class="line"></span><br><span class="line">第八步：设置启动脚本</span><br><span class="line">[root@centos7 ~]<span class="comment"># cd /app/mysql/support-files/</span></span><br><span class="line">[root@centos7 support-files]<span class="comment"># ls</span></span><br><span class="line">binary-configure        my-medium.cnf        policy</span><br><span class="line">magic                   my-small.cnf         wsrep.cnf</span><br><span class="line">my-huge.cnf             mysqld_multi.server  wsrep_notify</span><br><span class="line">my-innodb-heavy-4G.cnf  mysql-log-rotate</span><br><span class="line">my-large.cnf            mysql.server</span><br><span class="line">[root@centos7 support-files]<span class="comment"># cp mysql.server /etc/init.d/mysqld</span></span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># chkconfig --add mysqld</span></span><br><span class="line">[root@centos7 ~]<span class="comment"># chkconfig --list</span></span><br><span class="line"></span><br><span class="line">Note: This output shows SysV services only and does not include native</span><br><span class="line">      systemd services. SysV configuration data might be overridden by native</span><br><span class="line">      systemd configuration.</span><br><span class="line"></span><br><span class="line">      If you want to list systemd services use <span class="string">'systemctl list-unit-files'</span>.</span><br><span class="line">      To see services enabled on particular target use</span><br><span class="line">      <span class="string">'systemctl list-dependencies [target]'</span>.</span><br><span class="line"></span><br><span class="line">mysqld         0:off1:off2:on3:on4:on5:on6:off</span><br><span class="line"></span><br><span class="line">启动</span><br><span class="line">[root@centos7 ~]<span class="comment"># service mysqld restart</span></span><br><span class="line">Restarting mysqld (via systemctl):                         [  OK  ]</span><br><span class="line"></span><br><span class="line">[root@centos7 ~]<span class="comment"># ss -ntl</span></span><br><span class="line">LISTEN      0      80     :::3306               :::*     </span><br><span class="line"></span><br><span class="line">安全脚本</span><br><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;mairadb实现源码安装&quot;&gt;&lt;a href=&quot;#mairadb实现源码安装&quot; class=&quot;headerlink&quot; title=&quot;mairadb实现源码安装&quot;&gt;&lt;/a&gt;mairadb实现源码安装&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/13/mairadb实现源码安装/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://daizhe.net.cn/categories/mysql/"/>
    
    
      <category term="msql" scheme="https://daizhe.net.cn/tags/msql/"/>
    
  </entry>
  
  <entry>
    <title>centos6安装mysql</title>
    <link href="https://daizhe.net.cn/2019/01/13/centos6%E5%AE%89%E8%A3%85mysql/"/>
    <id>https://daizhe.net.cn/2019/01/13/centos6安装mysql/</id>
    <published>2019-01-13T12:16:57.798Z</published>
    <updated>2019-01-13T12:18:30.080Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos6安装mysql"><a href="#centos6安装mysql" class="headerlink" title="centos6安装mysql"></a>centos6安装mysql</h1><p><img src="/2019/01/13/centos6安装mysql/标题.png" alt=""><br><a id="more"></a></p><h2 id="mysql安装-centos6"><a href="#mysql安装-centos6" class="headerlink" title="mysql安装 centos6"></a>mysql安装 centos6</h2><p><code>光盘自带的版本</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">[root@centos6 ~]<span class="comment"># yum info mysql</span></span><br><span class="line">Loaded plugins: fastestmirror, refresh-packagekit, security</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirror.bit.edu.cn</span><br><span class="line"> * extras: ftp.sjtu.edu.cn</span><br><span class="line"> * updates: mirrors.huaweicloud.com</span><br><span class="line">Available Packages</span><br><span class="line">Name        : mysql</span><br><span class="line">Arch        : x86_64</span><br><span class="line">Version     : 5.1.73</span><br><span class="line">Release     : 8.el6_8</span><br><span class="line">Size        : 895 k</span><br><span class="line">Repo        : base</span><br><span class="line">Summary     : MySQL client programs and shared libraries</span><br><span class="line">URL         : http://www.mysql.com</span><br><span class="line">License     : GPLv2 with exceptions</span><br><span class="line">Description : MySQL is a multi-user, multi-threaded SQL database</span><br><span class="line">            : server. MySQL is a client/server implementation</span><br><span class="line">            : consisting of a server daemon (mysqld) and many different</span><br><span class="line">            : client programs and libraries. The base package contains</span><br><span class="line">            : the standard MySQL client programs and generic MySQL</span><br><span class="line">            : files.</span><br></pre></td></tr></table></figure></p><p><code>rpm 方式安装Mariadb：</code><br>mysql端口默认为tcp 3306<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">安装：</span><br><span class="line">[root@centos6 ~]<span class="comment"># yum install mysql-server -y</span></span><br><span class="line"></span><br><span class="line">查看安装包主要的文件列表：</span><br><span class="line">[root@centos6 ~]<span class="comment"># rpm -ql mysql-server</span></span><br><span class="line">/etc/rc.d/init.d/mysqld  服务启动脚本</span><br><span class="line">/usr/libexec/mysqld      服务器主程序</span><br><span class="line">/var/lib/mysql           存放数据库的数据的路径</span><br><span class="line">/var/<span class="built_in">log</span>/mysqld.log      日志文件</span><br><span class="line">/etc/my.cnf              服务的配置文件</span><br><span class="line">[root@centos6 ~]<span class="comment"># rpm -qf /etc/my.cnf （可以作为mysql数据库的服务器的配置文件，也可以作为客户端的配置文件）</span></span><br><span class="line">mysql-libs-5.1.73-8.el6_8.x86_64</span><br><span class="line"></span><br><span class="line">启动服务：</span><br><span class="line">[root@centos6 ~]<span class="comment"># service mysqld star</span></span><br><span class="line">Installing MySQL system tables...</span><br><span class="line">OK</span><br><span class="line">Filling <span class="built_in">help</span> tables...</span><br><span class="line">OK</span><br><span class="line"></span><br><span class="line">To start mysqld at boot time you have to copy</span><br><span class="line">support-files/mysql.server to the right place <span class="keyword">for</span> your syste</span><br><span class="line"></span><br><span class="line">PLEASE REMEMBERTO  SET A PASSWORD FOR THE MySQL root USER !</span><br><span class="line">To <span class="keyword">do</span> so, start the server, <span class="keyword">then</span> issue the following <span class="built_in">command</span></span><br><span class="line"></span><br><span class="line">/usr/bin/mysqladmin -u root password <span class="string">'new-password'</span></span><br><span class="line">/usr/bin/mysqladmin -u root -h centos6.com password <span class="string">'new-pasd'</span></span><br><span class="line"></span><br><span class="line">Alternatively you can run:</span><br><span class="line">/usr/bin/mysql_secure_installation 初始化服务脚本，可以设置root口令，也可以更安全的数据库</span><br><span class="line"></span><br><span class="line"><span class="built_in">which</span> will also give you the option of removing the <span class="built_in">test</span></span><br><span class="line">databases and anonymous user created by default.  This is</span><br><span class="line">strongly recommended <span class="keyword">for</span> production servers.</span><br><span class="line"></span><br><span class="line">See the manual <span class="keyword">for</span> more instructions.</span><br><span class="line"></span><br><span class="line">You can start the MySQL daemon with:</span><br><span class="line"><span class="built_in">cd</span> /usr ; /usr/bin/mysqld_safe &amp;</span><br><span class="line"></span><br><span class="line">You can <span class="built_in">test</span> the MySQL daemon with mysql-test-run.pl</span><br><span class="line"><span class="built_in">cd</span> /usr/mysql-test ; perl mysql-test-run.pl</span><br><span class="line"></span><br><span class="line">Please report any problems with the /usr/bin/mysqlbug script</span><br><span class="line"></span><br><span class="line">                                                           [ ok ]</span><br><span class="line">Starting mysqld:                                           [ ok ]</span><br><span class="line"></span><br><span class="line">  启动程序后，生成数据库数据相关的文件，未启动之前时空的：</span><br><span class="line">  [root@centos6 ~]<span class="comment"># ls /var/lib/mysql/</span></span><br><span class="line">  ibdata1  ib_logfile0  ib_logfile1  mysql  mysql.sock（数据库的套接字）  <span class="built_in">test</span></span><br><span class="line">  自己连接本机的mysql服务端，可以走套接字（数据库服务的用户与linux用户无关）</span><br><span class="line"></span><br><span class="line">使用客户端工具连接数据库</span><br><span class="line">[root@centos6 ~]<span class="comment"># which mysql</span></span><br><span class="line">/usr/bin/mysql</span><br><span class="line">[root@centos6 ~]<span class="comment"># rpm -qf /usr/bin/mysql</span></span><br><span class="line">mysql-5.1.73-8.el6_8.x86_64</span><br><span class="line"></span><br><span class="line">查看进程：</span><br><span class="line">[root@centos6 ~]<span class="comment"># ps aux</span></span><br><span class="line">root       4616  0.0  0.0 108228  1468 pts/1    S    21:05   0:00 /bin/sh /usr/bin/mysqld_safe --datadir=/var/lib/mysql --socket=/var/lib/mysql/mysql.sock --</span><br><span class="line">（数据库的主程序）mysql      4718  0.0  1.6 367520 30848 pts/1    Sl   21:05   0:00 /usr/libexec/mysqld --basedir=/usr --datadir=/var/lib/mysql --user=mysql --<span class="built_in">log</span>-error=/var/l</span><br><span class="line"></span><br><span class="line">mysql数据库是单进程多线程的数据库程序：</span><br><span class="line">[root@centos6 ~]<span class="comment"># pstree -p</span></span><br><span class="line">├─mysqld_safe(4616)───mysqld(4718)─┬─&#123;mysqld&#125;(4720)</span><br><span class="line">        │                                  ├─&#123;mysqld&#125;(4721)线程</span><br><span class="line">        │                                  ├─&#123;mysqld&#125;(4722)</span><br><span class="line">        │                                  ├─&#123;mysqld&#125;(4723)</span><br><span class="line">        │                                  ├─&#123;mysqld&#125;(4724)</span><br><span class="line">        │                                  ├─&#123;mysqld&#125;(4725)</span><br><span class="line">        │                                  ├─&#123;mysqld&#125;(4726)</span><br><span class="line">        │                                  ├─&#123;mysqld&#125;(4727)</span><br><span class="line">        │                                  └─&#123;mysqld&#125;(4728)</span><br><span class="line"></span><br><span class="line">查看数据库安装脚本</span><br><span class="line">[root@centos6 ~]<span class="comment"># rpm -q --scripts mysql-server</span></span><br><span class="line">preinstall scriptlet (using /bin/sh):</span><br><span class="line">/usr/sbin/groupadd -g 27 -o -r mysql &gt;/dev/null 2&gt;&amp;1 || :</span><br><span class="line">/usr/sbin/useradd -M -N -g mysql -o -r -d /var/lib/mysql -s /bin/bash \</span><br><span class="line">-c <span class="string">"MySQL Server"</span> -u 27 mysql &gt;/dev/null 2&gt;&amp;1 || :</span><br><span class="line">postinstall scriptlet (using /bin/sh):</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> = 1 ]; <span class="keyword">then</span></span><br><span class="line">    /sbin/chkconfig --add mysqld</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">/bin/chmod 0755 /var/lib/mysql</span><br><span class="line">/bin/touch /var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line">preuninstall scriptlet (using /bin/sh):</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> = 0 ]; <span class="keyword">then</span></span><br><span class="line">    /sbin/service mysqld stop &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    /sbin/chkconfig --del mysqld</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">postuninstall scriptlet (using /bin/sh):</span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$1</span> -ge 1 ]; <span class="keyword">then</span></span><br><span class="line">    /sbin/service mysqld condrestart &gt;/dev/null 2&gt;&amp;1 || :</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">连接数据库：（本地连接数据库是由本机的sock套接字连接）</span><br><span class="line">  使用mysql客户端工具连接：</span><br><span class="line">  mysql -u 数据库用户 -p （提示输入口令）-s 指定套接字路径 （默认为/var/lib/mysql/mysql.sock）</span><br><span class="line"></span><br><span class="line">[root@centos6 ~]<span class="comment"># mysql</span></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.1.73 Source distribution</span><br><span class="line">Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> 帮助<span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span>清屏 to clear the current input statement.</span><br><span class="line">mysql&gt;</span><br></pre></td></tr></table></figure></p><p><code>范例：下面为mysql数据库的客户端命令</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">下面为mysql数据库的客户端命令</span><br><span class="line">mysql&gt; <span class="built_in">help</span>      </span><br><span class="line">List of all MySQL commands:</span><br><span class="line">Note that all text commands must be first on line and end with <span class="string">';'</span></span><br><span class="line">?         (\?) Synonym <span class="keyword">for</span> `<span class="built_in">help</span><span class="string">'. </span></span><br><span class="line"><span class="string">clear     (\c) --清除当前输入的语句</span></span><br><span class="line"><span class="string">connect   (\r) --重新连接，通常用于被剔除或异常断开后重新连接，SQL*plus下也有这样一个connect命令</span></span><br><span class="line"><span class="string">delimiter (\d) --设置命令终止符，缺省为；，比如我们可以设定为/来表示语句结束 </span></span><br><span class="line"><span class="string">edit      (\e) --编辑缓冲区的上一条SQL语句到文件，缺省调用vi，文件会放在/tmp路径下</span></span><br><span class="line"><span class="string">ego       (\G) --控制结果显示为垂直显示</span></span><br><span class="line"><span class="string">exit      (\q) --退出mysql</span></span><br><span class="line"><span class="string">go        (\g) --发送命令到mysql服务</span></span><br><span class="line"><span class="string">help      (\h) Display this help.</span></span><br><span class="line"><span class="string">nopager   (\n) --关闭页设置，打印到标准输出  </span></span><br><span class="line"><span class="string">notee     (\t) --关闭输出到文件</span></span><br><span class="line"><span class="string">pager     (\P) --设置pager方式，可以设置为调用more,less等等，主要是用于分页显示</span></span><br><span class="line"><span class="string">print     (\p) Print current command.           </span></span><br><span class="line"><span class="string">prompt    (\R) --改变mysql的提示符 </span></span><br><span class="line"><span class="string">quit      (\q) Quit mysql.                             </span></span><br><span class="line"><span class="string">rehash    (\#) --自动补齐相关对象名字  </span></span><br><span class="line"><span class="string">source    (\.) --执行脚本文件</span></span><br><span class="line"><span class="string">status    (\s) --获得状态信息</span></span><br><span class="line"><span class="string">system    (\!) --执行系统命令   </span></span><br><span class="line"><span class="string">tee       (\T) --操作结果输出到文件 </span></span><br><span class="line"><span class="string">use       (\u) --切换数据库</span></span><br><span class="line"><span class="string">charset   (\C) --设置字符集</span></span><br><span class="line"><span class="string">warnings  (\W) --打印警告信息</span></span><br><span class="line"><span class="string">nowarning (\w) Don'</span>t show warnings after every statement.</span><br><span class="line">--上面的所有命令，扩号内的为快捷操作，即只需要输入“\”+ 字母即可执行</span><br><span class="line"></span><br><span class="line">查看mysql数据库的存储引擎：（服务器端命令）</span><br><span class="line">mysql&gt; show engines;</span><br><span class="line">+------------+---------+------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">| Engine     | Support | Comment                                                    | Transactions | XA   | Savepoints |</span><br><span class="line">+------------+---------+------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">| MRG_MYISAM | YES     | Collection of identical MyISAM tables                      | NO           | NO   | NO         |</span><br><span class="line">| CSV        | YES     | CSV storage engine                                         | NO           | NO   | NO         |</span><br><span class="line">| MyISAM     | DEFAULT | Default engine as of MySQL 3.23 with great performance     | NO           | NO   | NO         |</span><br><span class="line">| InnoDB     | YES     | Supports transactions, row-level locking, and foreign keys | YES          | YES  | YES        |</span><br><span class="line">| MEMORY     | YES     | Hash based, stored <span class="keyword">in</span> memory, useful <span class="keyword">for</span> temporary tables  | NO           | NO   | NO         |</span><br><span class="line">+------------+---------+------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">从服务器中得到相关的状态信息</span><br><span class="line">mysql&gt; status</span><br><span class="line">--------------</span><br><span class="line">mysql  Ver 14.14 Distrib 5.1.73, <span class="keyword">for</span> redhat-linux-gnu (x86_64) using readline 5.1</span><br><span class="line">Connection id:2</span><br><span class="line">Current database:</span><br><span class="line">Current user:root@localhost（当前连接身份）</span><br><span class="line">SSL:Not <span class="keyword">in</span> use</span><br><span class="line">Current pager:stdout</span><br><span class="line">Using outfile:<span class="string">''</span></span><br><span class="line">Using delimiter:;</span><br><span class="line">Server version:5.1.73 Source distribution</span><br><span class="line">Protocol version:10</span><br><span class="line">Connection:Localhost via UNIX socket</span><br><span class="line">Server characterset:latin1 （字符集）</span><br><span class="line">Db     characterset:latin1</span><br><span class="line">Client characterset:latin1</span><br><span class="line">Conn.  characterset:latin1</span><br><span class="line">UNIX socket:/var/lib/mysql/mysql.sock（套接字文件路径）</span><br><span class="line">Uptime:1 hour 1 min 14 sec</span><br><span class="line">Threads: 1（当前线程）  Questions: 8  Slow queries: 0  Opens: 15  Flush tables: 1  Open tables: 8  Queries per second avg: 0.2</span><br><span class="line">--------------</span><br><span class="line"></span><br><span class="line">调用linux命令</span><br><span class="line">mysql&gt; system hostname</span><br><span class="line">centos6.com</span><br></pre></td></tr></table></figure></p><p><code>范例：mysql中的提示符</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">提示符：</span><br><span class="line">修改方式建议</span><br><span class="line">为了方便我们在平时的使用，有效的给我们提示信息。 </span><br><span class="line">建议参考Linux系统的提示符方式命名，即：用户名@主机名+当前所在位置。 </span><br><span class="line">在MySQL中可以通过参数来获取提示符信息，下面列表中列出了常用的四个信息，方便我们等下修改MySQL提示符。</span><br><span class="line"></span><br><span class="line">参数描述</span><br><span class="line">\D完整的日期</span><br><span class="line">\d当前数据库</span><br><span class="line">\h服务器名称</span><br><span class="line">\u当前用户</span><br><span class="line">mysql&gt; PROMPT \u@\h \d &gt;    </span><br><span class="line">root@localhost (none) &gt;CREATE DATABASE testdb;</span><br><span class="line">root@localhost (none) &gt;USE testdb;</span><br><span class="line">root@localhost testdb &gt;</span><br><span class="line"></span><br><span class="line">修改mysql数据库的提示符</span><br><span class="line">mysql&gt; prompt mysql--&gt;</span><br><span class="line">PROMPT <span class="built_in">set</span> to <span class="string">'mysql--&gt;'</span></span><br><span class="line">mysql--&gt;</span><br><span class="line"></span><br><span class="line">命令行进入mysql顺便修改提示符</span><br><span class="line">[root@centos6 ~]<span class="comment"># mysql --prompt="\u@\D"</span></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 3</span><br><span class="line">Server version: 5.1.73 Source distribution</span><br><span class="line">Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line">root@Tue Nov 27 22:53:50 2018</span><br><span class="line"></span><br><span class="line">修改mysql提示符，永久保存生效(centos6的服务端和客户端的配置文件在同一个文件中)</span><br><span class="line">  编辑数据库的配置文件，写入客户端配置</span><br><span class="line">[root@centos6 ~]<span class="comment"># vim /etc/my.cnf </span></span><br><span class="line">服务端配置</span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line">user=mysql</span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line">服务端配置</span><br><span class="line">[mysqld_safe]</span><br><span class="line"><span class="built_in">log</span>-error=/var/<span class="built_in">log</span>/mysqld.log</span><br><span class="line">pid-file=/var/run/mysqld/mysqld.pid</span><br><span class="line">客户端配置，写入提示符信息</span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">'\u@\D-&gt;'</span></span><br><span class="line"></span><br><span class="line">保存，进入数据库，查看提示符，是否发生变化</span><br><span class="line">[root@centos6 ~]<span class="comment"># mysql</span></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 4</span><br><span class="line">Server version: 5.1.73 Source distribution</span><br><span class="line">Copyright (c) 2000, 2013, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line">root@Tue Nov 27 22:58:29 2018-&gt;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;centos6安装mysql&quot;&gt;&lt;a href=&quot;#centos6安装mysql&quot; class=&quot;headerlink&quot; title=&quot;centos6安装mysql&quot;&gt;&lt;/a&gt;centos6安装mysql&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/13/centos6安装mysql/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://daizhe.net.cn/categories/mysql/"/>
    
    
      <category term="msql" scheme="https://daizhe.net.cn/tags/msql/"/>
    
  </entry>
  
  <entry>
    <title>centos7安装mysql</title>
    <link href="https://daizhe.net.cn/2019/01/13/centos7%E5%AE%89%E8%A3%85mysql/"/>
    <id>https://daizhe.net.cn/2019/01/13/centos7安装mysql/</id>
    <published>2019-01-13T12:09:15.993Z</published>
    <updated>2019-01-13T12:16:20.681Z</updated>
    
    <content type="html"><![CDATA[<h1 id="centos7安装mysql"><a href="#centos7安装mysql" class="headerlink" title="centos7安装mysql"></a>centos7安装mysql</h1><p><img src="/2019/01/13/centos7安装mysql/标题.png" alt=""><br><a id="more"></a></p><h2 id="mysql安装-centos7"><a href="#mysql安装-centos7" class="headerlink" title="mysql安装 centos7"></a>mysql安装 centos7</h2><p><code>光盘自带的版本</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># yum info mariadb</span></span><br><span class="line">Loaded plugins: fastestmirror, langpacks</span><br><span class="line">Loading mirror speeds from cached hostfile</span><br><span class="line"> * base: mirrors.tuna.tsinghua.edu.cn</span><br><span class="line"> * extras: mirror.bit.edu.cn</span><br><span class="line"> * updates: mirror.bit.edu.cn</span><br><span class="line">Available Packages</span><br><span class="line">Name        : mariadb</span><br><span class="line">Arch        : x86_64</span><br><span class="line">Epoch       : 1</span><br><span class="line">Version     : 5.5.60</span><br><span class="line">Release     : 1.el7_5</span><br><span class="line">Size        : 8.9 M</span><br><span class="line">Repo        : updates/7/x86_64</span><br><span class="line">Summary     : A community developed branch of MySQL</span><br><span class="line">URL         : http://mariadb.org</span><br><span class="line">License     : GPLv2 with exceptions and LGPLv2 and BSD</span><br><span class="line">Description : MariaDB is a community developed branch of MySQL.</span><br><span class="line">            : MariaDB is a multi-user, multi-threaded SQL database</span><br><span class="line">            : server. It is a client/server implementation consisting</span><br><span class="line">            : of a server daemon (mysqld) and many different client</span><br><span class="line">            : programs and libraries. The base package contains the</span><br><span class="line">            : standard MariaDB/MySQL client programs and generic MySQL</span><br><span class="line">            : files.</span><br></pre></td></tr></table></figure></p><p><code>rpm 方式安装Mariadb：</code><br>mysql端口默认为tcp 3306<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">安装：</span><br><span class="line">[root@centos7 ~]<span class="comment"># yum install mariadb-server -y</span></span><br><span class="line"></span><br><span class="line">查看安装包主要的文件列表：</span><br><span class="line">[root@centos7 ~]<span class="comment"># rpm -ql mariadb-server</span></span><br><span class="line">/etc/my.cnf.d/server.cnf   服务器端配置文件</span><br><span class="line">/usr/libexec/mysqld        服务器主程序</span><br><span class="line">/var/lib/mysql             存放数据库数据的路径</span><br><span class="line">/var/<span class="built_in">log</span>/mariadb/mariadb.log 日志</span><br><span class="line">/usr/lib/systemd/system/mariadb.service 服务启动脚本</span><br><span class="line"></span><br><span class="line">启动程序：</span><br><span class="line">    启动前查看数据库数据目录是为空</span><br><span class="line">    [root@centos7 ~]<span class="comment"># ls /var/lib/mysql/</span></span><br><span class="line">    [root@centos7 ~]<span class="comment"># </span></span><br><span class="line">[root@centos7 ~]<span class="comment"># systemctl restart mariadb</span></span><br><span class="line">root@centos7 ~]<span class="comment"># ls /var/lib/mysql/</span></span><br><span class="line">aria_log.00000001  ib_logfile0  mysql.sock</span><br><span class="line">aria_log_control   ib_logfile1  performance_schema</span><br><span class="line">ibdata1            mysql        <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">连接数据库：</span><br><span class="line">[root@centos7 ~]<span class="comment"># mysql</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 2</span><br><span class="line">Server version: 5.5.60-MariaDB MariaDB Server</span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line">MariaDB [(none)]&gt; </span><br><span class="line"></span><br><span class="line">查看搜索引擎：</span><br><span class="line">MariaDB [(none)]&gt; show engines;</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">| Engine             | Support | Comment                                                                    | Transactions | XA   | Savepoints |</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">| MEMORY             | YES     | Hash based, stored <span class="keyword">in</span> memory, useful <span class="keyword">for</span> temporary tables                  | NO           | NO   | NO         |</span><br><span class="line">| MRG_MYISAM         | YES     | Collection of identical MyISAM tables                                      | NO           | NO   | NO         |</span><br><span class="line">| CSV                | YES     | CSV storage engine                                                         | NO           | NO   | NO         |</span><br><span class="line">| BLACKHOLE          | YES     | /dev/null storage engine (anything you write to it disappears)             | NO           | NO   | NO         |</span><br><span class="line">| MyISAM             | YES     | MyISAM storage engine                                                      | NO           | NO   | NO         |</span><br><span class="line">| InnoDB             | DEFAULT | Percona-XtraDB, Supports transactions, row-level locking, and foreign keys | YES          | YES  | YES        |</span><br><span class="line">| ARCHIVE            | YES     | Archive storage engine                                                     | NO           | NO   | NO         |</span><br><span class="line">| FEDERATED          | YES     | FederatedX pluggable storage engine                                        | YES          | NO   | YES        |</span><br><span class="line">| PERFORMANCE_SCHEMA | YES     | Performance Schema                                                         | NO           | NO   | NO         |</span><br><span class="line">| Aria               | YES     | Crash-safe tables with MyISAM heritage                                     | NO           | NO   | NO         |</span><br><span class="line">+--------------------+---------+----------------------------------------------------------------------------+--------------+------+------------+</span><br><span class="line">10 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">从服务器中得到相关的状态信息</span><br><span class="line">MariaDB [(none)]&gt; \s</span><br><span class="line">--------------</span><br><span class="line">mysql  Ver 15.1 Distrib 5.5.60-MariaDB, <span class="keyword">for</span> Linux (x86_64) using readline 5.1</span><br><span class="line"></span><br><span class="line">Connection id:2</span><br><span class="line">Current database:</span><br><span class="line">Current user:root@localhost</span><br><span class="line">SSL:Not <span class="keyword">in</span> use</span><br><span class="line">Current pager:stdout</span><br><span class="line">Using outfile:<span class="string">''</span></span><br><span class="line">Using delimiter:;</span><br><span class="line">Server:MariaDB</span><br><span class="line">Server version:5.5.60-MariaDB MariaDB Server</span><br><span class="line">Protocol version:10</span><br><span class="line">Connection:Localhost via UNIX socket</span><br><span class="line">Server characterset:latin1</span><br><span class="line">Db     characterset:latin1</span><br><span class="line">Client characterset:utf8</span><br><span class="line">Conn.  characterset:utf8</span><br><span class="line">UNIX socket:/var/lib/mysql/mysql.sock</span><br><span class="line">Uptime:9 min 44 sec</span><br><span class="line">Threads: 1  Questions: 6  Slow queries: 0  Opens: 0  Flush tables: 2  Open tables: 26  Queries per second avg: 0.010</span><br><span class="line">--------------</span><br></pre></td></tr></table></figure></p><p><code>范例：centos7修改提示符：</code><br>（centos7mysql的配置文件和客户端是分开的）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># cd /etc/my.cnf.d/</span></span><br><span class="line">[root@centos7 my.cnf.d]<span class="comment"># ls</span></span><br><span class="line">client.cnf  mysql-clients.cnf  server.cnf</span><br><span class="line"></span><br><span class="line">编辑客户端配置文件修改提示符</span><br><span class="line">[root@centos7 my.cnf.d]<span class="comment"># vim mysql-clients.cnf </span></span><br><span class="line">[mysql]</span><br><span class="line">prompt=<span class="string">'\u@\D-&gt;'</span></span><br><span class="line"></span><br><span class="line">查看是否修改成功</span><br><span class="line">[root@centos7 my.cnf.d]<span class="comment"># mysql</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 3</span><br><span class="line">Server version: 5.5.60-MariaDB MariaDB Server</span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and other</span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current inputatement.</span><br><span class="line">root@Tue Nov 27 15:04:34 2018-&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [(none)]&gt;    none:表示当前正在处于哪个数据库里面</span><br><span class="line"></span><br><span class="line">查看数据库的数据路径目录形式的代表数据库，也是系统自带的数据库，所以可以理解为数据库存放数据 分为系统自身用的数据、用户创建生产的数据库</span><br><span class="line">[root@centos7 ~]<span class="comment"># ls /var/lib/mysql/</span></span><br><span class="line">aria_log.00000001  ib_logfile0  mysql.sock</span><br><span class="line">aria_log_control   ib_logfile1  performance_schema</span><br><span class="line">ibdata1            mysql        <span class="built_in">test</span></span><br><span class="line"></span><br><span class="line">查看当前有多少数据库即表</span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| <span class="built_in">test</span>               |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">查看当前数据库的版本信息（数据库中带有括号的命令，表现为系统自带的函数）</span><br><span class="line">MariaDB [(none)]&gt; select version();</span><br><span class="line">+----------------+</span><br><span class="line">| version()      |</span><br><span class="line">+----------------+</span><br><span class="line">| 5.5.60-MariaDB |</span><br><span class="line">+----------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">查看当前的用户信息</span><br><span class="line">MariaDB [(none)]&gt; select user();</span><br><span class="line">+----------------+</span><br><span class="line">| user()         |</span><br><span class="line">+----------------+</span><br><span class="line">| root@localhost |</span><br><span class="line">+----------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">查看用户当前所在哪个数据库中</span><br><span class="line">MariaDB [(none)]&gt; select database();</span><br><span class="line">+------------+</span><br><span class="line">| database() |</span><br><span class="line">+------------+</span><br><span class="line">| NULL       |</span><br><span class="line">+------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line">使用use 客户端工具切换到指定的数据库，作为当前使用的数据库</span><br><span class="line">MariaDB [(none)]&gt; use mysql</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line">Database changed</span><br><span class="line">MariaDB [mysql]&gt; </span><br><span class="line"></span><br><span class="line">查看当前使用的数据库中的所有表列表</span><br><span class="line">MariaDB [mysql]&gt; show tables;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+---------------------------+</span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| ndb_binlog_index          |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| user                      |</span><br><span class="line">+---------------------------+</span><br><span class="line">24 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">命令行指定显示指定数据库中的表列表(意义同上命令)</span><br><span class="line">MariaDB [mysql]&gt; show tables from mysql;</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line">上面的数据库中的表实际表现为</span><br><span class="line">[root@centos7 ~]<span class="comment"># ls /var/lib/mysql/mysql</span></span><br><span class="line"></span><br><span class="line">查看服务端命令的帮助</span><br><span class="line"><span class="built_in">help</span> + 服务端命令</span><br><span class="line"></span><br><span class="line">``` </span><br><span class="line">`范例：安装完数据库，linux上的任何用户都可以使用mysql的root用户登陆，也可以使用任何一个用户连接登陆`</span><br><span class="line">```bash</span><br><span class="line">查看mysql存放的用户信息</span><br><span class="line">[root@centos7 ~]<span class="comment"># mysql</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 7</span><br><span class="line">Server version: 5.5.60-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use mysql</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [mysql]&gt; show tables;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+---------------------------+</span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| ndb_binlog_index          |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| user                      |</span><br><span class="line">+---------------------------+</span><br><span class="line">24 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; select user,host,password from user;</span><br><span class="line">+------+-------------+----------+</span><br><span class="line">| user | host        | password |</span><br><span class="line">+------+-------------+----------+</span><br><span class="line">| root | localhost   |          |</span><br><span class="line">| root | centos7.com |          |</span><br><span class="line">| root | 127.0.0.1   |          |</span><br><span class="line">| root | ::1         |          |</span><br><span class="line">|      | localhost   |          |</span><br><span class="line">|      | centos7.com |          |</span><br><span class="line">+------+-------------+----------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">安全加固，执行初始化命令</span><br><span class="line">[root@centos7 ~]<span class="comment"># mysql_secure_installation </span></span><br><span class="line">Enter current password <span class="keyword">for</span> root (enter <span class="keyword">for</span> none): （输入当前数据库中root用户的口令，若无口令，直接回车）</span><br><span class="line">Set root password? [Y/n] （是否设置root的口令）y</span><br><span class="line">New password:              口令</span><br><span class="line">Re-enter new password:     确定口令</span><br><span class="line">Password updated successfully!</span><br><span class="line">Reloading privilege tables..</span><br><span class="line"> ... Success!</span><br><span class="line">Remove anonymous users? [Y/n]  （是否删除匿名用户）y</span><br><span class="line">Disallow root login remotely? [Y/n] (是否禁用远程登陆)y</span><br><span class="line">Remove <span class="built_in">test</span> database and access to it? [Y/n] (是否删除测试数据库)y</span><br><span class="line">Reload privilege tables now? [Y/n]  (是否重新加载特权表)y</span><br><span class="line">Thanks <span class="keyword">for</span> using MariaDB!</span><br><span class="line"></span><br><span class="line">再次连接mysql数据库</span><br><span class="line">[root@centos7 ~]<span class="comment"># mysql -u root -p</span></span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use mysql</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [mysql]&gt; show tables;</span><br><span class="line">+---------------------------+</span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+---------------------------+</span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| ndb_binlog_index          |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| user                      |</span><br><span class="line">+---------------------------+</span><br><span class="line">24 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [mysql]&gt; select user,host,password from user;</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| user | host      | password                                  |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">| root | localhost | *0E04F27C8B21547FD069D6E8519AE49B7ECE8E94 |</span><br><span class="line">| root | 127.0.0.1 | *0E04F27C8B21547FD069D6E8519AE49B7ECE8E94 |</span><br><span class="line">| root | ::1       | *0E04F27C8B21547FD069D6E8519AE49B7ECE8E94 |</span><br><span class="line">+------+-----------+-------------------------------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">目前仅可以本机连接，使用centos6连接测试</span><br><span class="line">[root@centos6 ~]<span class="comment"># mysql -u root -p centos -h 172.18.135.88</span></span><br><span class="line">Enter password: </span><br><span class="line">连接不上</span><br></pre></td></tr></table></figure><p><code>范例：查看mysql账号数据库是否活跃</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># mysqladmin -u root -p ping</span></span><br><span class="line">Enter password: </span><br><span class="line">mysqld is alive</span><br></pre></td></tr></table></figure></p><p><code>范例：停止此用户的数据库</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@centos7 ~]<span class="comment"># mysqladmin -u root -p shutdown</span></span><br><span class="line">Enter password: </span><br><span class="line"></span><br><span class="line">测试：连接不上去了</span><br><span class="line">[root@centos7 ~]<span class="comment"># mysql -u root -p</span></span><br><span class="line">Enter password: </span><br><span class="line">ERROR 2002 (HY000): Can<span class="string">'t connect to local MySQL server through socket '</span>/var/lib/mysql/mysql.sock<span class="string">' (2)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">启动服务</span></span><br><span class="line"><span class="string">[root@centos7 ~]# systemctl restart mariadb</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">查看连接信息</span></span><br><span class="line"><span class="string">[root@centos7 ~]# mysqladmin status</span></span><br><span class="line"><span class="string">Uptime: 23  Threads: 1  Questions: 3  Slow queries: 0  Opens: 0  Flush tables: 2  Open tables: 18  Queries per second avg: 0.130</span></span><br><span class="line"><span class="string">`</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;centos7安装mysql&quot;&gt;&lt;a href=&quot;#centos7安装mysql&quot; class=&quot;headerlink&quot; title=&quot;centos7安装mysql&quot;&gt;&lt;/a&gt;centos7安装mysql&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/13/centos7安装mysql/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://daizhe.net.cn/categories/mysql/"/>
    
    
      <category term="msql" scheme="https://daizhe.net.cn/tags/msql/"/>
    
  </entry>
  
  <entry>
    <title>mysql安装和基本操作</title>
    <link href="https://daizhe.net.cn/2019/01/13/mysql%E5%AE%89%E8%A3%85%E5%92%8C%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    <id>https://daizhe.net.cn/2019/01/13/mysql安装和基本操作/</id>
    <published>2019-01-13T12:03:01.939Z</published>
    <updated>2019-01-13T12:07:09.688Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql安装和基本操作"><a href="#mysql安装和基本操作" class="headerlink" title="mysql安装和基本操作"></a>mysql安装和基本操作</h1><p><img src="/2019/01/13/mysql安装和基本操作/标题.png" alt=""><br><a id="more"></a></p><h2 id="MYSQL的特性"><a href="#MYSQL的特性" class="headerlink" title="MYSQL的特性"></a>MYSQL的特性</h2><p><code>插件式存储引擎：也称为“表类型”，存储管理器有多种实现版本，功能和特 性可能均略有差别；用户可根据需要灵活选择,Mysql5.5.5开始&amp;innoDB引擎是 MYSQL默认引擎</code><br>&ensp;&ensp;MyISAM ==&gt; Aria<br>&ensp;&ensp;InnoDB ==&gt; XtraDB<br>单进程，多线程<br>诸多扩展和新特性<br>提供了较多测试组件<br>开源 </p><h2 id="安装MYSQL"><a href="#安装MYSQL" class="headerlink" title="安装MYSQL"></a>安装MYSQL</h2><p><code>Mariadb安装方式：</code><br>1、源代码：编译安装<br>2、二进制格式的程序包：展开至特定路径，并经过简单配置后即可使用<br>3、程序包管理器管理的程序包<br>CentOS 安装光盘<br>项目官方：  <a href="https://downloads.mariadb.org/mariadb/repositories/" target="_blank" rel="noopener">https://downloads.mariadb.org/mariadb/repositories/</a><br>国内镜像：  <a href="https://mirrors.tuna.tsinghua.edu.cn/mariadb/mariadbx.y.z/yum/centos/7/x86_64/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/mariadb/mariadbx.y.z/yum/centos/7/x86_64/</a>     </p><h2 id="RPM包安装MySQL"><a href="#RPM包安装MySQL" class="headerlink" title="RPM包安装MySQL"></a>RPM包安装MySQL</h2><p>RPM包安装<br>&ensp;&ensp;CentOS 7：安装光盘直接提供<br>&ensp;&ensp;&ensp;&ensp;mariadb-server   服务器包<br>&ensp;&ensp;&ensp;&ensp;mariadb       客户端工具包<br>&ensp;&ensp;CentOS 6<br>提高安全性<br>&ensp;&ensp;<code>mysql_secure_installation</code><br>&ensp;&ensp;&ensp;&ensp;<code>设置数据库管理员root口令</code><br>&ensp;&ensp;&ensp;&ensp;<code>禁止root远程登录</code><br>&ensp;&ensp;&ensp;&ensp;<code>删除anonymous用户帐号</code><br>&ensp;&ensp;&ensp;&ensp;<code>删除test数据库</code>  </p><h2 id="MariaDB程序"><a href="#MariaDB程序" class="headerlink" title="MariaDB程序"></a>MariaDB程序</h2><p>客户端程序：<br>&ensp;&ensp;mysql: 交互式的CLI工具<br>&ensp;&ensp;mysqldump：备份工具，基于mysql协议向mysqld发起查询请求，并将查得的所<br>有数据转换成insert等写操作语句保存文本文件中<br>&ensp;&ensp;mysqladmin：基于mysql协议管理mysqld<br>&ensp;&ensp;mysqlimport：数据导入工具<br>MyISAM存储引擎的管理工具：<br>&ensp;&ensp;myisamchk：检查MyISAM库<br>&ensp;&ensp;myisampack：打包MyISAM表，只读<br>服务器端程序<br>&ensp;&ensp;mysqld_safe<br>&ensp;&ensp;mysqld<br>&ensp;&ensp;mysqld_multi    多实例（一个程序在系统上运行多次，多个进程，缺点仅能实现单一版本的多实例） ，示例：mysqld_multi  –example   </p><h2 id="用户账号"><a href="#用户账号" class="headerlink" title="用户账号"></a>用户账号</h2><p><code>mysql用户账号由两部分组成：</code><br>&ensp;&ensp;‘USERNAME‘@’HOST‘<br>说明：<br>&ensp;&ensp;HOST限制此用户可通过哪些远程主机连接mysql服务器<br>&ensp;&ensp;支持使用通配符：<br>&ensp;&ensp;&ensp;&ensp;% 匹配任意长度的任意字符<br>&ensp;&ensp;&ensp;&ensp;172.16.0.0/255.255.0.0 或 172.16.%.%<br>&ensp;&ensp;&ensp;&ensp;_  匹配任意单个字符  </p><h2 id="Mysql-客户端"><a href="#Mysql-客户端" class="headerlink" title="Mysql 客户端"></a>Mysql 客户端</h2><p>mysql使用模式：<br>交互式模式：<br>&ensp;&ensp;可运行命令有两类：<br>&ensp;&ensp;客户端命令：<br>&ensp;&ensp;&ensp;&ensp;\h, help<br>&ensp;&ensp;&ensp;&ensp;\u，use<br>&ensp;&ensp;&ensp;&ensp;\s，status<br>&ensp;&ensp;&ensp;&ensp;!，system<br>&ensp;&ensp;服务器端命令：<br>&ensp;&ensp;&ensp;&ensp;SQL语句， 需要语句结束符；<br>脚本模式：<br>&ensp;&ensp;mysql –uUSERNAME -pPASSWORD &lt; /path/somefile.sql<br>&ensp;&ensp;mysql&gt; source /path/from/somefile.sql   </p><h2 id="Mysql客户端"><a href="#Mysql客户端" class="headerlink" title="Mysql客户端"></a>Mysql客户端</h2><p>mysql客户端可用选项：<br>-A, –no-auto-rehash 禁止补全<br>-u, –user=  用户名,默认为root<br>-h, –host=  服务器主机,默认为localhost<br>-p, –passowrd= 用户密码,建议使用-p,默认为空密码<br>-P, –port=  服务器端口<br>-S, –socket= 指定连接socket文件路径<br>-D, –database=  指定默认数据库<br>-C, –compress 启用压缩<br>-e   “SQL“ 执行SQL命令<br>-V, –version 显示版本<br>-v  –verbose 显示详细信息<br>–print-defaults   获取程序默认使用的配置    </p><h2 id="socket地址"><a href="#socket地址" class="headerlink" title="socket地址"></a>socket地址</h2><p>服务器监听的两种socket地址：<br>&ensp;&ensp;ip socket: 监听在tcp的3306端口，支持远程通信<br>&ensp;&ensp;unix sock: 监听在sock文件上，仅支持本机通信<br>&ensp;&ensp;&ensp;&ensp;如：/var/lib/mysql/mysql.sock)<br>说明：host为localhost,127.0.0.1时自动使用unix sock   </p><h2 id="执行命令"><a href="#执行命令" class="headerlink" title="执行命令"></a>执行命令</h2><p>运行mysql命令：默认空密码登录<br>&ensp;&ensp;mysql&gt;use mysql<br>&ensp;&ensp;mysql&gt;select user();查看当前用户<br>&ensp;&ensp;mysql&gt;SELECT User,Host,Password FROM user;<br>登录系统：mysql  –uroot  –p<br>客户端命令：本地执行<br>&ensp;&ensp;mysql&gt; help<br>&ensp;&ensp;每个命令都完整形式和简写格式<br>&ensp;&ensp;mysql&gt; status 或 \s<br>服务端命令：通过mysql协议发往服务器执行并取回结果  每个命令末尾都必须使用命令结束符号，默认为分号<br>&ensp;&ensp;示例：SELECT VERSION();    </p><h2 id="服务器端配置"><a href="#服务器端配置" class="headerlink" title="服务器端配置"></a>服务器端配置</h2><p>服务器端(mysqld)：工作特性有多种配置方式<br>1、命令行选项：<br>2、配置文件：类ini格式<br>集中式的配置，能够为mysql的各应用程序提供配置信息<br>&ensp;&ensp;[mysqld]<br>&ensp;&ensp;[mysqld_safe]<br>&ensp;&ensp;[mysqld_multi]<br>&ensp;&ensp;[mysql]<br>&ensp;&ensp;[mysqldump]<br>&ensp;&ensp;[server]<br>&ensp;&ensp;[client]<br>格式：parameter = value<br>说明：_和- 相同<br>&ensp;&ensp;1，ON，TRUE意义相同， 0，OFF，FALSE意义相同   </p><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p><code>配置文件：</code><br><code>后面覆盖前面的配置文件，顺序如下：下面的优先级高</code><br>/etc/my.cnf        &ensp;&ensp;      Global选项<br>/etc/mysql/my.cnf   &ensp;&ensp;     Global选项<br>SYSCONFDIR/my.cnf   &ensp;&ensp;     Global选项<br>$MYSQL_HOME/my.cnf   &ensp;&ensp;    Server-specific 选项<br>–defaults-extra-file= path<br>~/.my.cnf           &ensp;&ensp;     User-specific 选项   </p><h2 id="MairaDB配置"><a href="#MairaDB配置" class="headerlink" title="MairaDB配置"></a>MairaDB配置</h2><p>侦听3306/tcp端口可以在绑定有一个或全部接口IP上<br>vim /etc/my.cnf<br>[mysqld]<br>skip-networking=1<br>关闭网络连接，只侦听本地客户端， 所有和服务器的交互都通过一个socket实 现，socket的配置存放在/var/lib/mysql/mysql.sock） 可在/etc/my.cnf修改   </p><h2 id="通用二进制格式安装过程"><a href="#通用二进制格式安装过程" class="headerlink" title="通用二进制格式安装过程"></a>通用二进制格式安装过程</h2><p>二进制格式安装过程<br>(1) 准备用户<br>&ensp;&ensp;groupadd -r -g 306 mysql<br>&ensp;&ensp;useradd -r -g 306 -u 306 –d /data/mysql  mysql<br>(2) 准备数据目录，建议使用逻辑卷<br>&ensp;&ensp;mkdir /data/mysql<br>&ensp;&ensp;chown mysql:mysql  /data/mysql<br>(3) 准备二进制程序<br>&ensp;&ensp;tar xf mariadb-VERSION-linux-x86_64.tar.gz -C   /usr/local<br>&ensp;&ensp;cd /usr/local<br>&ensp;&ensp;ln -sv mariadb-VERSION mysql<br>&ensp;&ensp;chown -R root:mysql /usr/local/mysql/<br>(4) 准备配置文件<br>&ensp;&ensp;mkdir /etc/mysql/<br>&ensp;&ensp;cp support-files/my-large.cnf /etc/mysql/my.cnf<br>&ensp;&ensp;[mysqld]中添加三个选项：<br>&ensp;&ensp;datadir = /data/mysql<br>&ensp;&ensp;innodb_file_per_table = on<br>&ensp;&ensp;skip_name_resolve = on    禁止主机名解析，建议使用<br>(5)创建数据库文件<br>&ensp;&ensp;cd /usr/local/mysql/<br>&ensp;&ensp;./scripts/mysql_install_db –datadir=/data/mysql –user=mysql<br>(6)准备服务脚本，并启动服务<br>&ensp;&ensp;cp ./support-files/mysql.server /etc/rc.d/init.d/mysqld<br>&ensp;&ensp;chkconfig –add mysqld<br>service mysqld start<br>(7)PATH路径<br>&ensp;&ensp;echo ‘PATH=/user/local/mysql/bin:$PATH’ &gt;   /etc/profile.d/mysql<br>(8)安全初始化<br> &ensp;&ensp;/user/local/mysql/bin/mysql_secure_installation  </p><h2 id="源码编译安装mariadb"><a href="#源码编译安装mariadb" class="headerlink" title="源码编译安装mariadb"></a>源码编译安装mariadb</h2><p>安装包<br>&ensp;&ensp;yum install bison bison-devel  zlib-devel libcurl-devel libarchive-devel  boost-devel  gcc  gcc-c++  cmake ncurses-devel gnutls-devel libxml2-devel openssl-devel libevent-devel libaio-devel<br>做准备用户和数据目录<br>&ensp;&ensp;useradd –r –s /sbin/nologin –d  /data/mysql/  mysql<br>&ensp;&ensp;mkdir   /data/mysql<br>&ensp;&ensp;chown  mysql.mysql  /data/mysql<br>&ensp;&ensp;tar xvf   mariadb-10.2.18.tar.gz<br>cmake 编译安装<br>&ensp;&ensp;cmake的重要特性之一是其独立于源码(out-of-source)的编译功能，即编译工作可以在 另一个指定的目录中而非源码目录中进行，这可以保证源码目录不受任何一次编译的影 响，因此在同一个源码树上可以进行多次不同的编译，如针对于不同平台编译  编译选项:<a href="https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.7/en/source-configuration-options.html</a>  </p><p>cd mariadb-10.2.18/<br>cmake . \<br>-DCMAKE_INSTALL_PREFIX=/app/mysql \<br>-DMYSQL_DATADIR=/data/mysql/ \<br>-DSYSCONFDIR=/etc \<br>-DMYSQL_USER=mysql \<br>-DWITH_INNOBASE_STORAGE_ENGINE=1 \<br>-DWITH_ARCHIVE_STORAGE_ENGINE=1 \<br>-DWITH_BLACKHOLE_STORAGE_ENGINE=1 \<br>-DWITH_PARTITION_STORAGE_ENGINE=1  \<br>-DWITHOUT_MROONGA_STORAGE_ENGINE=1 \<br>-DWITH_DEBUG=0 \<br>-DWITH_READLINE=1 \<br>-DWITH_SSL=system \<br>-DWITH_ZLIB=system \<br>-DWITH_LIBWRAP=0 \<br>-DENABLED_LOCAL_INFILE=1  \<br>-DMYSQL_UNIX_ADDR=/data/mysql/mysql.sock \<br>-DDEFAULT_CHARSET=utf8 \<br>-DDEFAULT_COLLATION=utf8_general_ci make &amp;&amp; make install<br>提示：如果出错，执行rm -f CMakeCache.txt    </p><p>准备环境变量<br>echo ‘PATH=/app/mysql/bin:$PATH’ &gt; /etc/profile.d/mysql.sh<br>.     /etc/profile.d/mysql.sh<br>生成数据库文件<br>cd   /app/mysql/<br>scripts/mysql_install_db –datadir=/data/mysql/ –user=mysql<br>准备配置文件<br>cp  /app/mysql/support-files/my-huge.cnf   /etc/my.cnf<br>准备启动脚本<br>cp /app/mysql/support-files/mysql.server  /etc/init.d/mysqld<br>启动服务<br>chkconfig –add mysqld ;service mysqld start     </p><h2 id="关系型数据库的常见组件"><a href="#关系型数据库的常见组件" class="headerlink" title="关系型数据库的常见组件"></a>关系型数据库的常见组件</h2><p>数据库：database<br>表：table  行：row  列：column<br>索引：index<br>视图：view<br>用户：user<br>权限：privilege<br>存储过程：procedure<br>存储函数：function<br>触发器：trigger<br>事件调度器：event scheduler，任务计划   </p><h2 id="SQL语言的兴起与语法标准"><a href="#SQL语言的兴起与语法标准" class="headerlink" title="SQL语言的兴起与语法标准"></a>SQL语言的兴起与语法标准</h2><p>20世纪70年代，IBM开发出SQL，用于DB2<br>1981年，IBM推出SQL/DS数据库<br>业内标准微软和Sybase的T-SQL，Oracle的PL/SQL<br>SQL作为关系型数据库所使用的标准语言，最初是基于IBM的实现在1986年被 批准的。1987年，“国际标准化组织(ISO)”把ANSI(美国国家标准化组织) SQL作为国际标准。<br>SQL：ANSI SQL<br>SQL-1986, SQL-1989, SQL-1992, SQL-1999, SQL-2003 , SQL-2008  SQL-2011   </p><h2 id="SQL语言规范"><a href="#SQL语言规范" class="headerlink" title="SQL语言规范"></a>SQL语言规范</h2><p>在数据库系统中，SQL语句不区分大小写(建议用大写)<br>SQL语句可单行或多行书写，以“;”结尾<br>关键词不能跨多行或简写<br>用空格和缩进来提高语句的可读性<br>子句通常位于独立行，便于编辑，提高可读性<br>注释：<br>&ensp;&ensp;SQL标准：<br>&ensp;&ensp;/<em>注释内容</em>/   多行注释<br>&ensp;&ensp;– 注释内容    单行注释，注意有空格<br>&ensp;&ensp;MySQL注释：  #     </p><h2 id="数据库对象"><a href="#数据库对象" class="headerlink" title="数据库对象"></a>数据库对象</h2><p>数据库的组件(对象)：<br>&ensp;&ensp;数据库、表、索引、视图、用户、存储过程、函数、触发器、事件调度器等<br>命名规则：<br>&ensp;&ensp;必须以字母开头<br>&ensp;&ensp;可包括数字和三个特殊字符（# _ $）<br>&ensp;&ensp;不要使用MySQL的保留字<br>&ensp;&ensp;同一database(Schema)下的对象不能同名   </p><h2 id="SQL语句分类"><a href="#SQL语句分类" class="headerlink" title="SQL语句分类"></a>SQL语句分类</h2><p>SQL语句分类：<br>DDL: Data Defination Language 数据定义语言<br>&ensp;&ensp;CREATE，DROP，ALTER<br>DML: Data Manipulation Language 数据操纵语言<br>&ensp;&ensp;INSERT，DELETE，UPDATE<br>DCL：Data Control Language 数据控制语言<br>&ensp;&ensp;GRANT，REVOKE，COMMIT，ROLLBACK<br>DQL：Data Query Language 数据查询语言<br>&ensp;&ensp;SELECT </p><h2 id="SQL语句构成"><a href="#SQL语句构成" class="headerlink" title="SQL语句构成"></a>SQL语句构成</h2><p>SQL语句构成：<br>&ensp;&ensp;Keyword组成clause<br>&ensp;&ensp;多条clause组成语句<br>示例：<br>SELECT *                   SELECT子句<br>FROM products              FROM子句<br>WHERE price&gt;400            WHERE子句<br>说明：一组SQL语句，由三个子句构成，SELECT,FROM和WHERE是关键字     </p><h2 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a><code>数据库操作</code></h2><p>创建数据库：<br>&ensp;&ensp;CREATE DATABASE|SCHEMA [IF NOT EXISTS] ‘DB_NAME’;<br>&ensp;&ensp;CHARACTER SET ‘character set name’<br>&ensp;&ensp;COLLATE ‘collate name’<br>删除数据库<br>&ensp;&ensp;DROP DATABASE|SCHEMA [IF EXISTS] ‘DB_NAME’;<br>查看支持所有字符集：<br>&ensp;&ensp;SHOW CHARACTER SET;<br>查看支持所有排序规则：<br>&ensp;&ensp;SHOW COLLATION;<br>获取命令使用帮助：<br>&ensp;&ensp;mysql&gt; HELP KEYWORD;<br>查看数据库列表：<br>&ensp;&ensp;mysql&gt; SHOW DATABASES;  </p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;mysql安装和基本操作&quot;&gt;&lt;a href=&quot;#mysql安装和基本操作&quot; class=&quot;headerlink&quot; title=&quot;mysql安装和基本操作&quot;&gt;&lt;/a&gt;mysql安装和基本操作&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/13/mysql安装和基本操作/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://daizhe.net.cn/categories/mysql/"/>
    
    
      <category term="msql" scheme="https://daizhe.net.cn/tags/msql/"/>
    
  </entry>
  
  <entry>
    <title>mysql数据库基础原理</title>
    <link href="https://daizhe.net.cn/2019/01/13/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86/"/>
    <id>https://daizhe.net.cn/2019/01/13/数据库基础原理/</id>
    <published>2019-01-13T11:52:49.592Z</published>
    <updated>2019-01-13T11:57:15.778Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql数据库基础原理"><a href="#mysql数据库基础原理" class="headerlink" title="mysql数据库基础原理"></a>mysql数据库基础原理</h1><p><img src="/2019/01/13/数据库基础原理/标题.png" alt=""><br><a id="more"></a></p><h2 id="MYSQL数据库"><a href="#MYSQL数据库" class="headerlink" title="MYSQL数据库"></a>MYSQL数据库</h2><p>关系型数据库基础<br>安装MySQL<br>管理数据库和表<br>用户和权限管理<br>函数，存储过程和触发器<br>MySQL架构<br>存储引擎<br>服务器选项，系统和状态变量<br>优化查询和索引管理<br>锁和事务管理<br>日志管理<br>备份还原<br>MySQL集群  </p><h2 id="数据的时代"><a href="#数据的时代" class="headerlink" title="数据的时代"></a>数据的时代</h2><p>涉及的数据量大<br>数据不随程序的结束而消失<br>数据被多个应用程序共享<br>大数据   </p><h2 id="数据库的发展史"><a href="#数据库的发展史" class="headerlink" title="数据库的发展史"></a>数据库的发展史</h2><p>萌芽阶段：文件系统        使用磁盘文件来存储数据<br>初级阶段：第一代数据库    出现了网状模型、层次模型的数据库<br>中级阶段：第二代数据库    关系型数据库和结构化查询语言<br>高级阶段：新一代数据库    “关系-对象”型数据库   </p><h2 id="文件管理系统的缺点"><a href="#文件管理系统的缺点" class="headerlink" title="文件管理系统的缺点"></a>文件管理系统的缺点</h2><p>编写应用程序不方便<br>数据冗余不可避免<br>应用程序依赖性<br>不支持对文件的并发访问<br>数据间联系弱<br>难以按用户视图表示数据<br>无安全控制功能   </p><h2 id="数据库管理系统的优点"><a href="#数据库管理系统的优点" class="headerlink" title="数据库管理系统的优点"></a>数据库管理系统的优点</h2><p>相互关联的数据的集合<br>较少的数据冗余<br>程序与数据相互独立<br>保证数据的安全、可靠<br>最大限度地保证数据的正确性<br>数据可以并发使用并能同时保证一致性   </p><h2 id="数据库管理系统"><a href="#数据库管理系统" class="headerlink" title="数据库管理系统"></a>数据库管理系统</h2><p>数据库是数据的汇集，它以一定的组织形式存于存储介质上<br>DBMS是管理数据库的系统软件，它实现数据库系统的各种功能。是数据库系 统的核心<br>DBA：负责数据库的规划、设计、协调、维护和管理等工作<br>应用程序指以数据库为基础的应用程序   </p><h2 id="数据库管理系统的基本功能"><a href="#数据库管理系统的基本功能" class="headerlink" title="数据库管理系统的基本功能"></a>数据库管理系统的基本功能</h2><p>数据定义<br>数据处理<br>数据安全<br>数据备份 </p><h2 id="网状数据库"><a href="#网状数据库" class="headerlink" title="网状数据库"></a>网状数据库</h2><p>最早出现的是网状DBMS，1964年通用电气公司的Charles Bachman成功地开发出世界上第一 个网状IDS，也是第一个数据库管理系统，IDS 具有数据模式和日志的特征，只能在GE主机运行   </p><h2 id="层次数据库"><a href="#层次数据库" class="headerlink" title="层次数据库"></a>层次数据库</h2><p><img src="/2019/01/13/数据库基础原理/图.png" alt=""></p><h2 id="数据库系统的架构"><a href="#数据库系统的架构" class="headerlink" title="数据库系统的架构"></a>数据库系统的架构</h2><p>单机架构<br>大型主机/终端架构<br>主从式架构（C/S）<br>分布式架构   </p><h2 id="关系型数据库"><a href="#关系型数据库" class="headerlink" title="关系型数据库"></a>关系型数据库</h2><p>关系型数据库：使用的是sql语言，结构化的查询语言  ，内部机制特性ACID特性：保证数据库的安全稳定，影响性能<br>NOSQL：redis:高性能，高并发</p><p><code>关系 ：</code>关系就是二维表，其中：表中的行、列次序并不重要<br><code>行row：</code>表中的每一行，又称为一条记录<br><code>列column：</code>表中的每一列，称为属性，字段<br><code>主键（Primary key）：</code>用于惟一确定一个记录的字段<br><code>域domain：</code>属性的取值范围，如，性别只能是‘男’和‘女’两个值    </p><p>一个服务器可以搭建多个DBMS<br>DBMS:多个数据库  ，推荐存放一个数据库，防止访问量过大<br>库：同一个项目的相关系数据，多个表<br>表：一个表多个字段和记录  </p><h2 id="关系数据库"><a href="#关系数据库" class="headerlink" title="关系数据库"></a>关系数据库</h2><p>RDBMS：<br>&ensp;&ensp;MySQL: MySQL, MariaDB, Percona Server<br>&ensp;&ensp;PostgreSQL: 简称为pgsql，EnterpriseDB  &ensp;&ensp;Oracle    MSSQL<br>&ensp;&ensp;DB2<br>数据库排名：   <a href="https://db-engines.com/en/ranking" target="_blank" rel="noopener">https://db-engines.com/en/ranking</a>  </p><h2 id="实体-联系模型E-R"><a href="#实体-联系模型E-R" class="headerlink" title="实体-联系模型E-R"></a>实体-联系模型E-R</h2><p>实体Entity：客观存在并可以相互区分的客观事物或抽象事件称为实体<br>&ensp;&ensp;在E-R图中用矩形框表示实体，把实体名写在框内<br>属性：实体所具有的特征或性质<br>联系：联系是数据之间的关联集合，是客观存在的应用语义链<br>&ensp;&ensp;实体内部的联系：指组成实体的各属性之间的联系。如职工实体中，职工号和 部门经理号之间有一种关联关系<br>&ensp;&ensp;实体之间的联系：指不同实体之间联系。例：学生选课实体和学生基本信息实 体之间<br>&ensp;&ensp;实体之间的联系用菱形框表示   </p><h2 id="联系类型"><a href="#联系类型" class="headerlink" title="联系类型"></a>联系类型</h2><p>联系的类型<br>&ensp;&ensp;一对一联系(1:1)<br>&ensp;&ensp;一对多联系(1:n)<br>&ensp;&ensp;多对多联系(m:n)<br>数据的操作：<br>&ensp;&ensp;数据提取：在数据集合中提取感兴趣的内容。SELECT<br>&ensp;&ensp;数据更新：变更数据库中的数据。INSERT、DELETE、UPDATE<br>数据的约束条件 ：是一组完整性规则的集合<br>&ensp;&ensp;实体（行）完整性 Entity integrity<br>&ensp;&ensp;域（列）完整性 Domain Integrity<br>&ensp;&ensp;参考完整性 Referential Integrity </p><h2 id="简易数据规划流程"><a href="#简易数据规划流程" class="headerlink" title="简易数据规划流程"></a>简易数据规划流程</h2><p>第一阶段：收集数据，得到字段<br>&ensp;&ensp;收集必要且完整的数据项<br>&ensp;&ensp;转换成数据表的字段<br>第二阶段：把字段分类，归入表，建立表的关联<br>&ensp;&ensp;关联：表和表间的关系<br>&ensp;&ensp;分割数据表并建立关联的优点<br>&ensp;&ensp;节省空间<br>&ensp;&ensp;减少输入错误<br>&ensp;&ensp;方便数据修改<br>第三阶段：<br>&ensp;&ensp;规范化数据库   </p><h2 id="数据库的正规化分析"><a href="#数据库的正规化分析" class="headerlink" title="数据库的正规化分析"></a>数据库的正规化分析</h2><p>RDMBS设计范式基础概念<br>&ensp;&ensp;设计关系数据库时，遵从不同的规范要求，设计出合理的关系型数据库，这些不 同的规范要求被称为不同范式，各种范式呈递次规范，越高的范式数据库冗余越小<br>&ensp;&ensp;目前关系数据库有六种范式：第一范式（1NF）、第二范式（2NF）、第三范式 （3NF）、巴德斯科范式（BCNF）、第四范式(4NF）和第五范式（5NF，又称 完美范式）。满足最低要求的范式是第一范式（1NF）。在第一范式的基础上 进一步满足更多规范要求的称为第二范式（2NF），其余范式以次类推。一般 数据库只需满足第三范式(3NF）即可 </p><p><code>1NF：无重复的列，每一列都是不可分割的基本数据项，同一列中不能有多个 值，即实体中的某个属性不能有多个值或者不能有重复的属性。除去同类型的 字段，就是无重复的列</code><br>说明：第一范式（1NF）是对关系模式的基本要求，不满足第一范式（1NF） 的数据库就不是关系数据库<br><code>2NF：属性完全依赖于主键，第二范式必须先满足第一范式，要求表中的每个 行必须可以被唯一地区分。通常为表加上一个列，以存储各个实例的唯一标识 PK，非PK的字段需要与整个PK有直接相关性</code><br><code>3NF：属性不依赖于其它非主属性，满足第三范式必须先满足第二范式。第三 范式要求一个数据库表中不包含已在其它表中已包含的非主关键字信息，非PK 的字段间不能有从属关系</code>  </p><h2 id="SQL概念"><a href="#SQL概念" class="headerlink" title="SQL概念"></a>SQL概念</h2><p>SQL: Structure Query Language<br>&ensp;&ensp;结构化查询语言<br>&ensp;&ensp;SQL解释器：<br>&ensp;&ensp;数据存储协议：应用层协议，C/S<br>S：server, 监听于套接字，接收并处理客户端的应用请求<br>C：Client<br>&ensp;&ensp;客户端程序接口<br>&ensp;&ensp;&ensp;&ensp;CLI     字符、命令行<br>&ensp;&ensp;&ensp;&ensp;GUI     图形化<br>&ensp;&ensp;应用编程接口  API<br>&ensp;&ensp;&ensp;&ensp;ODBC：Open Database Connectivity     开放的数据库连接<br>&ensp;&ensp;&ensp;&ensp;JDBC：Java Data Base Connectivity     java开放数据库的开发接口</p><p>mysql：端口tcp 3306<br>oracle：端口tcp 1521<br>sqlserver:端口tcp 1433</p><h2 id="约束"><a href="#约束" class="headerlink" title="约束"></a>约束</h2><p><code>约束：constraint，表中的数据要遵守的限制</code><br>&ensp;&ensp;主键pk：一个或多个字段的组合，填入的数据必须能在本表中唯一标识本行； 必须提供数据，即NOT NULL，一个表只能有一个<br>&ensp;&ensp;惟一键uk：一个或多个字段的组合，填入的数据必须能在本表中唯一标识本行； 允许为NULL，一个表可以存在多个<br>&ensp;&ensp;外键fk：一个表中的某字段可填入的数据取决于另一个表的主键或唯一键已有 的数据 ,作用在依赖的表上，被依赖的表上，可以作用主键和唯一键<br>&ensp;&ensp;检查：字段值在一定范围内   </p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>索引：将表中的一个或多个字段中的数据复制一份另存，并且按特定次序排序 存储   （例如：书签，标识）<br>关系运算：<br>&ensp;&ensp;选择：挑选出符合条件的行<br>&ensp;&ensp;投影：挑选出需要的字段<br>&ensp;&ensp;连接：表间字段的关联  </p><h2 id="数据模型"><a href="#数据模型" class="headerlink" title="数据模型"></a>数据模型</h2><p>数据抽象：<br>&ensp;&ensp;物理层：数据存储格式，即RDBMS在磁盘上如何组织文件<br>&ensp;&ensp;逻辑层：DBA角度，描述存储什么数据，以及数据间存在什么样的关系<br>&ensp;&ensp;视图层：用户角度，描述DB中的部分数据<br>关系模型的分类：<br>&ensp;&ensp;关系模型<br>&ensp;&ensp;基于对象的关系模型<br>&ensp;&ensp;半结构化的关系模型：XML数据  ：扩展的标记语言</p><p><code>范例：基于xml语言存放的数据</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">下面目录内的文件都是基于xml语言存放数据的文件</span><br><span class="line">[root@centos6 gconf]<span class="comment"># cd /etc/gconf/gconf.xml.defaults/</span></span><br></pre></td></tr></table></figure></p><p><code>范例：设置开机自动登陆</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@centos6 ~]<span class="comment"># vim /etc/gdm/custom.conf </span></span><br><span class="line"><span class="comment"># GDM configuration storage</span></span><br><span class="line">[daemon]</span><br><span class="line">AutomaticLoginEnable=ture</span><br><span class="line">AutomaticLongin=root</span><br></pre></td></tr></table></figure></p><h2 id="MySQL历史"><a href="#MySQL历史" class="headerlink" title="MySQL历史"></a>MySQL历史</h2><p>1979年：TcX公司 Monty Widenius，Unireg<br>1996年：发布MySQL1.0，Solaris版本，Linux版本<br>1999年：MySQL AB公司，瑞典<br>2003年：MySQL 5.0版本，提供视图、存储过程等功能<br>2008年：Sun 收购<br>2009年：Oracle收购sun<br>2009年：Monty成立MariaDB   </p><h2 id="MySQL和MariaDB"><a href="#MySQL和MariaDB" class="headerlink" title="MySQL和MariaDB"></a>MySQL和MariaDB</h2><p>官方网址：<br><a href="https://www.mysql.com/" target="_blank" rel="noopener">https://www.mysql.com/</a><br><a href="http://mariadb.org/" target="_blank" rel="noopener">http://mariadb.org/</a><br><code>官方文档</code><br><code>https://dev.mysql.com/doc/</code><br><code>https://mariadb.com/kb/en/</code><br>版本演变：<br>MySQL：5.1 –&gt; 5.5 –&gt; 5.6 –&gt; 5.7 –&gt;8.0<br>MariaDB：5.5 –&gt;10.0–&gt; 10.1 –&gt; 10.2 –&gt; 10.3<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum info ..</span><br><span class="line">centos6默认光盘安装mysql 5.1.73</span><br><span class="line">centos7使用的是mariadb 5.5.56</span><br></pre></td></tr></table></figure></p><h2 id="MYSQL的特性"><a href="#MYSQL的特性" class="headerlink" title="MYSQL的特性"></a>MYSQL的特性</h2><p><code>插件式存储引擎：</code>也称为“表类型”，存储管理器有多种实现版本，功能和特 性可能均略有差别；用户可根据需要灵活选择,Mysql5.5.5开始innoDB引擎是 MYSQL默认引擎<br>&ensp;&ensp;MyISAM ==&gt; Aria<br>&ensp;&ensp;InnoDB ==&gt; XtraDB<br>单进程，多线程<br>诸多扩展和新特性<br>提供了较多测试组件<br>开源   </p><p>raw:裸文件系统：无文件系统：二进制方式存储</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;mysql数据库基础原理&quot;&gt;&lt;a href=&quot;#mysql数据库基础原理&quot; class=&quot;headerlink&quot; title=&quot;mysql数据库基础原理&quot;&gt;&lt;/a&gt;mysql数据库基础原理&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/13/数据库基础原理/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="mysql" scheme="https://daizhe.net.cn/categories/mysql/"/>
    
    
      <category term="msql" scheme="https://daizhe.net.cn/tags/msql/"/>
    
  </entry>
  
  <entry>
    <title>nginx高并发内核优化</title>
    <link href="https://daizhe.net.cn/2019/01/13/nginx%E9%AB%98%E5%B9%B6%E5%8F%91%E5%86%85%E6%A0%B8%E4%BC%98%E5%8C%96/"/>
    <id>https://daizhe.net.cn/2019/01/13/nginx高并发内核优化/</id>
    <published>2019-01-13T05:57:38.185Z</published>
    <updated>2019-01-13T07:24:13.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx作为负载均衡器高并发内核优化"><a href="#nginx作为负载均衡器高并发内核优化" class="headerlink" title="nginx作为负载均衡器高并发内核优化"></a>nginx作为负载均衡器高并发内核优化</h1><p><img src="/2019/01/13/nginx高并发内核优化/图标.png" alt=""><br><a id="more"></a></p><h2 id="实现nginx高并发linux内核优化"><a href="#实现nginx高并发linux内核优化" class="headerlink" title="实现nginx高并发linux内核优化"></a>实现nginx高并发linux内核优化</h2><ul><li><p>由于默认的linux内核的参数考虑的是最通用的场景，这明显不符合用于支持高并发访问的web服务器的定义，所以需要修改linux内核的参数，是的nginx可以拥有更高的性能，根据业务的特点来进行调整，当nginx作为静态web内容服务器、反向代理或者提供压缩服务器的服务器时，其内核的参数调整通常都是不同的，这里针对最通用的、使用nginx支持更多并发请求的tcp网络参数做简单的配置，修改/etc/sysctl.conf来更改内核的参数</p><ul><li><code>file-max = 999999</code><ul><li>表示单个进程较大可以打开的句柄数即文件描述符的数量</li></ul></li><li><code>net.ipv4.tcp_rw_reuse = 1</code><ul><li>参数设置为1，表示允许将TIME_WAIT状态的socket重新用于新的tcp连接，这对于服务器来说意义重大，因为总有大量TIME_WAIT状态的链接存在</li></ul></li><li>net.ipv4.tcp_keepalive_time = 600<ul><li>当keeplived启动时。tcp发送keeplived消息的频度；默认为2小时，将其设置为10分钟，可以更快的清理无效的链接</li></ul></li><li><code>net.piv4.tcp_fin_timeout = 30</code><ul><li>当服务器主动关闭连接时，socket保持在FIN_WAIT_2状态的较大时间</li></ul></li><li>net.piv4.tcp_max_tw_buckets - 5000<ul><li>这个参数表示操作系统允许TIME_WAIT套接字数量的较大值，如果超过这个数字，TIME_WAIT套接字将立刻被抢出并打印警告信息，默认为8000，过多的TIME_WAIT套接字会使web服务器变慢</li></ul></li><li>net.ipv4.ip_local_portrange = 1024 65000<ul><li>定义UDP和TCP连接的本地端口的取值范围</li></ul></li><li>net.ipv4.tcp_rmem = 1024 87380 12582912<ul><li>定义TCP接受缓存的最小值、默认值、最大值</li></ul></li><li>net.ipv4.tcp_wmem = 1024 87380 12582912<ul><li>定义了TCP发送缓存的最小值、默认值、较大值</li></ul></li><li><p>net.core.netdev_max_backlog = 8096</p><ul><li>当网卡接受数据包的速度大于内核处理速度时，会有一个列队保存这些数据包。这个参数表示该列队的较大值</li></ul></li><li><p>net.core.rmem_default = 6291456</p><ul><li>表示内核套接字接受缓存区默认的大小</li></ul></li><li>net.core.wmem_default = 6291456<ul><li>表示内核套接字发送缓存区默认的大小</li></ul></li><li>net.core.rmem_max = 12582912<ul><li>表示内核的套接字接受缓存区较大大小</li></ul></li><li>net.core.wmem_max = 12582912<ul><li>表示内核套接字发送缓存区较大大小</li></ul></li></ul></li><li><p>注意：以上四个参数，需要根据业务的逻辑和实际的硬件成本来综合考虑</p><ul><li>net.piv4.tcp_syncookies = 1<ul><li>与性能无关。用于解决tcp的syn攻击</li></ul></li><li>net.ipv4.tcp_max_syn_backlog = 8192<ul><li>这个参数表示tcp三次握手建立阶段接受syn请求的列队的较大长度，默认1024，将这个参数设置的大一点可使出现nginx繁忙来不及accept新的连接时，linux不至于丢失客户端的发起连接的请求</li></ul></li><li>net.ipv4.tcp_tw_recycle = 1<ul><li>这个参数用于设置启用timewait快速回收</li></ul></li><li>net.core.somaxconn = 262114<ul><li>选项默认值为128，这个参数用于调节系统同时发起的tcp连接数，在高并发的请求中，默认的值可能会导致连接超时或者重传，因此需要结合高并发请求数来调节此值</li></ul></li><li>net.ipv4.tcp_max_orphans = 262114<ul><li>选项用于设定系统中最多有多少个tcp套接字不被关联到任何一个用户文件句柄中。如果超过这个数字，孤立连接将立即被复位输出警告信息。这个限制指示为了防</li></ul></li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx作为负载均衡器高并发内核优化&quot;&gt;&lt;a href=&quot;#nginx作为负载均衡器高并发内核优化&quot; class=&quot;headerlink&quot; title=&quot;nginx作为负载均衡器高并发内核优化&quot;&gt;&lt;/a&gt;nginx作为负载均衡器高并发内核优化&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/13/nginx高并发内核优化/图标.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="https://daizhe.net.cn/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://daizhe.net.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx的stream模块</title>
    <link href="https://daizhe.net.cn/2019/01/13/nginx%E4%BC%AA%E5%9B%9B%E5%B1%82%E8%B4%9F%E8%BD%BD/"/>
    <id>https://daizhe.net.cn/2019/01/13/nginx伪四层负载/</id>
    <published>2019-01-13T03:27:06.777Z</published>
    <updated>2019-01-13T05:55:25.830Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx的stream模块（伪四层负载）"><a href="#nginx的stream模块（伪四层负载）" class="headerlink" title="nginx的stream模块（伪四层负载）"></a>nginx的stream模块（伪四层负载）</h1><p><img src="/2019/01/13/nginx伪四层负载/标题.png" alt=""><br><a id="more"></a></p><h2 id="nginx伪四层负载"><a href="#nginx伪四层负载" class="headerlink" title="nginx伪四层负载"></a>nginx伪四层负载</h2><ul><li>Nginx 1.9.0版本起支持四层负载均衡，从而使得Nginx变得更加强大。目前，四层软件负载均衡器用得比较多的是HaProxy；而Nginx也支持四层负载均衡。</li></ul><h3 id="ngx-stream-core-module"><a href="#ngx-stream-core-module" class="headerlink" title="ngx_stream_core_module"></a><code>ngx_stream_core_module</code></h3><ul><li><p>ngx_stream_core_module模块从1.9.0版本开始可用。默认情况下，此模块不是构建的，它应该使用-with-stream配置参数启用。</p></li><li><p><code>(1) listen address:port [ssl] [udp] [backlog=number] [bind] [ipv6only=on|off] [reuseport] [so_keepalive=on|off|[keepidle]:[keepintvl]:[keepcnt]];</code></p><ul><li>监听的端口；<ul><li>默认为tcp协议；<ul><li>udp: 监听udp协议的端口；</li></ul></li></ul></li></ul></li></ul><h3 id="ngx-stream-proxy-module"><a href="#ngx-stream-proxy-module" class="headerlink" title="ngx_stream_proxy_module"></a><code>ngx_stream_proxy_module</code></h3><ul><li>ngx_stream_proxy_module模块(1.9.0)允许通过TCP、UDP(1.9.13)和unix域套接字代理数据流。</li><li><p>(1) proxy_pass address;</p><ul><li>设置代理服务器的地址。该地址可以指定为域名或IP地址、端口或unix域套接字路径。</li></ul></li><li><p>(2) proxy_timeout timeout;</p><ul><li>设置客户端或代理服务器连接上的两个连续读写操作之间的超时。如果在此时间内没有传输数据，则连接将关闭。<pre><code>- 默认为10m; </code></pre></li></ul></li><li><p>(3) proxy_connect_timeout time;</p><ul><li>定义与代理服务器建立连接的超时。<pre><code>- 设置nginx与被代理的服务器尝试建立连接的超时时长；默认为60s；</code></pre></li></ul></li></ul><p>参考：<a href="http://nginx.org/en/docs/stream/ngx_stream_core_module.html#stream" target="_blank" rel="noopener">http://nginx.org/en/docs/stream/ngx_stream_core_module.html#stream</a></p><p>范例：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">实现nginx_stream代理mysql_server服务器面向客户端提供服务</span><br><span class="line"></span><br><span class="line">  clent</span><br><span class="line">  nginx_stream  : yum install nginx</span><br><span class="line">  mysql_server  : yum istall mariadb-server</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql_server</span><br><span class="line"><span class="comment">###</span></span><br><span class="line">  创建账号</span><br><span class="line">  MariaDB [(none)]&gt; grant all on *.* to daizhe@<span class="string">'%'</span> identified by <span class="string">'centos'</span>;</span><br><span class="line">  生效权限</span><br><span class="line">  MariaDB [(none)]&gt; flush privileges;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">nginx_server</span><br><span class="line"><span class="comment">#使用stream四层代理时使用的上下文都在stream &#123;&#125; 上下文当中，不要与http同时使用</span></span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">  stream &#123;</span><br><span class="line">        server &#123;</span><br><span class="line">        listen 3306;</span><br><span class="line">        proxy_pass  172.18.135.2:3306;  <span class="comment">#数据库的地址和端口</span></span><br><span class="line">        &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># systemctl restart nginx</span></span><br><span class="line">  ~]<span class="comment"># ss -tnl   </span></span><br><span class="line">    LISTEN      0      128       *:3306  </span><br><span class="line"></span><br><span class="line">client测试</span><br><span class="line">  <span class="comment">#使用client连接nginx_stream_server服务器验证是否被调度</span></span><br><span class="line">  ~]<span class="comment"># mysql -udaizhe -pcentos -h172.18.135.1  #地址为nginx地址</span></span><br><span class="line">  MariaDB [(none)]&gt;</span><br></pre></td></tr></table></figure></p><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">再次启动一个mysql数据库实现客户端访问的负载均衡</span><br><span class="line"><span class="comment">#模拟两个数据库的效果，为了使客户调度起来无差别感知，使两个mysql授权的账号和数据相同（生产中可以做主从）</span></span><br><span class="line"></span><br><span class="line">（后添加）mysql_server</span><br><span class="line"><span class="comment">###</span></span><br><span class="line">  创建账号</span><br><span class="line">  MariaDB [(none)]&gt; grant all on *.* to daizhe@<span class="string">'%'</span> identified by <span class="string">'centos'</span>;</span><br><span class="line">  生效权限</span><br><span class="line">  MariaDB [(none)]&gt; flush privileges;</span><br><span class="line"></span><br><span class="line">配置nginx_stream_server</span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line"></span><br><span class="line">    stream &#123;</span><br><span class="line">        upstream dbserver &#123;</span><br><span class="line">        server 172.18.135.2:3306;</span><br><span class="line">        server 172.18.135.5:3306;</span><br><span class="line">        &#125;</span><br><span class="line">        server &#123;</span><br><span class="line">        listen 3306;</span><br><span class="line">        proxy_pass dbserver;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">client 测试（为了使得看出差别可以在daizhe账号下创建不同的数据库以便看出算法）</span><br><span class="line">   ~]<span class="comment"># while true; do mysql -udaizhe -pcentos -h172.18.135.1 -e "show databases;"; sleep 1 ;done</span></span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| db1                |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| db2                |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">+--------------------+</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx的stream模块（伪四层负载）&quot;&gt;&lt;a href=&quot;#nginx的stream模块（伪四层负载）&quot; class=&quot;headerlink&quot; title=&quot;nginx的stream模块（伪四层负载）&quot;&gt;&lt;/a&gt;nginx的stream模块（伪四层负载）&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/13/nginx伪四层负载/标题.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="https://daizhe.net.cn/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://daizhe.net.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx的http_upstream模块</title>
    <link href="https://daizhe.net.cn/2019/01/13/nginx%E4%B8%83%E5%B1%82%E8%B0%83%E5%BA%A6/"/>
    <id>https://daizhe.net.cn/2019/01/13/nginx七层调度/</id>
    <published>2019-01-13T03:17:09.054Z</published>
    <updated>2019-01-13T03:22:09.408Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx的http-upstream模块（七层负载）"><a href="#nginx的http-upstream模块（七层负载）" class="headerlink" title="nginx的http_upstream模块（七层负载）"></a>nginx的http_upstream模块（七层负载）</h1><p><img src="/2019/01/13/nginx七层调度/图标.png" alt=""><br><a id="more"></a></p><h2 id="nginx的http-upstream模块"><a href="#nginx的http-upstream模块" class="headerlink" title="nginx的http_upstream模块"></a>nginx的http_upstream模块</h2><ul><li><p>我们知道单台服务器的性能是有上限的，当流量很大时，就需要使用多台服务器来共同提供服务，这就是所谓的集群。</p></li><li><p>负载均衡服务器，就是用来把经过它的流量，按照某种方法，分配到集群中的各台服务器上。这样一来不仅可以承担</p></li><li><p>更大的流量、降低服务的延迟，还可以避免单点故障造成服务不可用。一般的反向代理服务器，都具备负载均衡的功能。</p></li><li><p>负载均衡功能可以由硬件来提供，比如以前的F5设备。也可以由软件来提供，LVS可以提供四层的负载均衡(利用IP和端口)，</p></li><li><p>Haproxy和Nginx可以提供七层的负载均衡(利用应用层信息)。</p></li></ul><pre><code>硬件：F5 BigIP, Citrix NetScaler, A10 A10软件：    四层调度：lvs, nginx(stream module), haproxy(mode tcp)    七层调度：nginx(http_upstream module), haproxy(mode http), httpd, ats, ...        mysql: Proxy_SQL, ...        ... ...session sticky：会话粘滞    Source IP: sh, persistence    Cookie：session replication：session server：</code></pre><hr><p><img src="/2019/01/13/nginx七层调度/stream.png" alt=""></p><h3 id="ngx-http-upstream-module"><a href="#ngx-http-upstream-module" class="headerlink" title="ngx_http_upstream_module"></a><code>ngx_http_upstream_module</code></h3><ul><li>参考文档：<a href="http://nginx.org/en/docs/http/ngx_http_upstream_module.html" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_upstream_module.html</a></li><li>ngx_http_upstream_module模块用于定义可以由proxy_pass、fastcgi_pass、uwsgi_pass、scgi_pass和memcached_pass指令引用的服务器组。        </li><li><p><code>(1) upstream name { ... }</code></p><ul><li>定义后端服务器组；引入一个新的上下文；只能用于http{}上下文中；<ul><li>默认的调度方法是wrr；</li></ul></li></ul></li><li><p><code>(2) server address [parameters];</code></p><ul><li>定义服务器地址和相关的参数；</li><li>地址格式：<ul><li>IP[:PORT]</li><li>HOSTNAME[:PORT]</li><li>unix:/PATH/TO/SOME_SOCK_FILE<ul><li>参数：<ul><li>weight=number<ul><li>权重，默认为1；</li></ul></li><li>max_fails=number<ul><li>失败尝试的最大次数；</li></ul></li><li>fail_timeout=time<ul><li>设置服务器为不可用状态的超时时长，默认为10秒；</li></ul></li><li>backup<ul><li>把服务器标记为“备用”状态（sory server 只有所有的服务器全部没办法工作时才会上线）； </li></ul></li><li>down<ul><li>手动标记其为不可用；</li></ul></li></ul></li></ul></li></ul></li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">server 172.18.135.2 weight=2 backup max_fails=10m;</span><br></pre></td></tr></table></figure><ul><li><p>(3) least_conn;</p><ul><li>最少连接调度算法； 当server拥有不同的权重时为wlc；当所有后端主机的连接数相同时，则使用wrr进行调度；</li></ul></li><li><p>(4) ip_hash;</p><ul><li>源地址hash算法；能够将来自同一个源IP地址的请求始终发往同一个upstream server；</li></ul></li><li>(5) hash key [consistent];<ul><li>基于指定的key的hash表实现请求调度，此处的key可以文本、变量或二者的组合；<ul><li>consistent：参数，指定使用一致性hash算法；<ul><li>示例：<ul><li>hash $request_uri consistent<ul><li>hash $remote_addr</li><li>hash $cookie_name</li></ul></li></ul></li></ul></li></ul></li></ul></li><li>(6) keepalive connections;<ul><li>可使用长连接的连接数量；每worker与后端服务保持的最大空闲长连接数量；</li></ul></li></ul><hr><h3 id="范例：实现nginx调度"><a href="#范例：实现nginx调度" class="headerlink" title="范例：实现nginx调度"></a><code>范例：实现nginx调度</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">三台主机</span><br><span class="line">  client</span><br><span class="line">  nginx_stream_server :yum install nginx -y</span><br><span class="line">  web_server1 :yum install httpd -y</span><br><span class="line">  web_server2 :yum install httpd -y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">配置两台web_server的页面文件</span><br><span class="line">  <span class="comment">#为了达到负载均衡的web_server网页文件应该是相同的，这里为了演示调度器调度的差别有意的是web_server的网页文件设置有差别</span></span><br><span class="line">  web_server1</span><br><span class="line">  ~]<span class="comment"># echo "web_server1" &gt; /var/www/html/index.html</span></span><br><span class="line"></span><br><span class="line">  web_server2</span><br><span class="line">  ~]<span class="comment"># echo "web_server2" &gt; /var/www/html/index.html</span></span><br><span class="line"></span><br><span class="line">编辑nginx实现负载均衡</span><br><span class="line">  <span class="comment">#在原http配置</span></span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">  http &#123;  <span class="comment">#仅能在http上下文使用</span></span><br><span class="line">        upstream staticwebsrvs &#123;  <span class="comment">#定义后端服务器组</span></span><br><span class="line">        server 172.18.135.2;  <span class="comment">#web_server1</span></span><br><span class="line">        server 172.18.135.5;  <span class="comment">#web_server2</span></span><br><span class="line">        &#125;</span><br><span class="line">  ....</span><br><span class="line">  <span class="comment">#server中调用服务器组名称</span></span><br><span class="line">        server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        server_name www.centos.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://staticwebsrvs/;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">client客户端测试</span><br><span class="line"><span class="comment">#默认1:1轮询算法,支持加权轮询（Round-Robin）</span></span><br><span class="line">  ~]<span class="comment"># while true; do curl http://172.18.135.1:8080; sleep 1;done</span></span><br><span class="line">  web_server1</span><br><span class="line">  web_server2</span><br><span class="line">  web_server1</span><br><span class="line">  web_server2</span><br></pre></td></tr></table></figure><hr><h4 id="算法：使用加权轮询（wrr）"><a href="#算法：使用加权轮询（wrr）" class="headerlink" title="算法：使用加权轮询（wrr）"></a><code>算法：使用加权轮询（wrr）</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">使用加权轮询(默认权重都为1)</span><br><span class="line">  编辑nginx实现负载均衡</span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">  http &#123;</span><br><span class="line">        upstream staticwebsrvs &#123;</span><br><span class="line">        server 172.18.135.2 weight=2; <span class="comment">#将web_server1设置权重比为2</span></span><br><span class="line">        server 172.18.135.5;</span><br><span class="line">  &#125;</span><br><span class="line">    ....</span><br><span class="line">        server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        server_name www.centos.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://staticwebsrvs/;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">lient客户端测试</span><br><span class="line">  ~]<span class="comment"># while true; do curl http://172.18.135.1:8080; sleep 1;done</span></span><br><span class="line">  web_server1</span><br><span class="line">  web_server1</span><br><span class="line">  web_server2</span><br></pre></td></tr></table></figure><hr><h4 id="算法：least-conn做少连接（wlc）"><a href="#算法：least-conn做少连接（wlc）" class="headerlink" title="算法：least_conn做少连接（wlc）"></a><code>算法：least_conn做少连接（wlc）</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#对短链接最好使用：轮询</span></span><br><span class="line"><span class="comment">#对长连接最好使用：wlc</span></span><br><span class="line"></span><br><span class="line">使用least_conn做少连接算法</span><br><span class="line">  编辑nginx实现负载均衡</span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">  http &#123;</span><br><span class="line">        upstream staticwebsrvs &#123;</span><br><span class="line">        least_conn;</span><br><span class="line">        server 172.18.135.2 weight=2;</span><br><span class="line">        server 172.18.135.5;</span><br><span class="line">  &#125;</span><br><span class="line">  ....</span><br><span class="line">        server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        server_name www.centos.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://staticwebsrvs/;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">lient客户端测试</span><br><span class="line">  ~]<span class="comment"># while true; do curl http://172.18.135.1:8080; sleep 1;done</span></span><br></pre></td></tr></table></figure><hr><h4 id="算法：ip-hash-sh"><a href="#算法：ip-hash-sh" class="headerlink" title="算法：ip_hash (sh)"></a><code>算法：ip_hash (sh)</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">使用ip_hash：bash原ip地址</span><br><span class="line">  编辑nginx实现负载均衡</span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">  http &#123;</span><br><span class="line">        upstream staticwebsrvs &#123;</span><br><span class="line">        ip_hash;</span><br><span class="line">        server 172.18.135.2 weight=2;</span><br><span class="line">        server 172.18.135.5;</span><br><span class="line">  &#125;</span><br><span class="line">  ....</span><br><span class="line">        server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        server_name www.centos.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://staticwebsrvs/;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">lient客户端测试</span><br><span class="line">  ~]<span class="comment"># while true; do curl http://172.18.135.1:8080; sleep 1;done</span></span><br><span class="line">  web_server1</span><br><span class="line">  web_server1</span><br><span class="line">  web_server1</span><br><span class="line">  web_server1</span><br><span class="line">  web_server1</span><br><span class="line"></span><br><span class="line">工作方式：</span><br><span class="line"><span class="comment">#对客户端ip做bash计算，把后端服务器按权重bash成静态的数组，而后在数据上取模，取出模几，就映射到第几台服务器上</span></span><br><span class="line">缺点：</span><br><span class="line"><span class="comment">#如果服务器的总数发生了变化则此前的hash结果则发生变动</span></span><br><span class="line"><span class="comment">#当后端服务器宕机后，session会丢失；</span></span><br><span class="line"><span class="comment">#来自同一局域网的客户端会被转发到同一个后端服务器，可能导致负载失衡；</span></span><br><span class="line"><span class="comment">#不适用于CDN网络，不适用于前段还有代理的情况。</span></span><br></pre></td></tr></table></figure><hr><h4 id="算法：consistent-bashing-一致性hash"><a href="#算法：consistent-bashing-一致性hash" class="headerlink" title="算法：consistent bashing 一致性hash"></a><code>算法：consistent bashing 一致性hash</code></h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#无论权重怎么变，但是hash算法是不变的，仅对固定的进行bash取模</span></span><br><span class="line"><span class="comment">#bash:可以对任何数据进行hash</span></span><br><span class="line"><span class="comment">#consistent一致性hash,如果不添加则便是静态hash与ip_hash相同</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">hash</span> <span class="variable">$remote_addr</span> consistent;</span><br><span class="line">对原地址进行bash，不过做了一致性<span class="built_in">hash</span></span><br><span class="line">  编辑nginx实现负载均衡</span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">  http &#123;</span><br><span class="line">        upstream staticwebsrvs &#123;</span><br><span class="line">        <span class="built_in">hash</span> <span class="variable">$remote_addr</span> consistent;</span><br><span class="line">        server 172.18.135.2 weight=2;</span><br><span class="line">        server 172.18.135.5;</span><br><span class="line">  &#125;</span><br><span class="line">  ....</span><br><span class="line">        server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        server_name www.centos.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://staticwebsrvs/;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># nginx -t</span></span><br><span class="line">  ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">lient客户端测试</span><br><span class="line">  ~]<span class="comment"># while true; do curl http://172.18.135.1:8080; sleep 1;done</span></span><br><span class="line">  web_server1</span><br><span class="line">  web_server1</span><br><span class="line">  web_server1</span><br><span class="line">  web_server1</span><br><span class="line">  web_server1</span><br></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">对用户请求的uri进项<span class="built_in">hash</span>(适用于后端服务器为缓存服务器，提高命中率)</span><br><span class="line"><span class="built_in">hash</span> <span class="variable">$request_uri</span> consistent;</span><br><span class="line"></span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">  http &#123;</span><br><span class="line">        upstream staticwebsrvs &#123;</span><br><span class="line">        <span class="built_in">hash</span> <span class="variable">$request_uri</span> consistent;</span><br><span class="line">        server 172.18.135.2 weight=2;</span><br><span class="line">        server 172.18.135.5;</span><br><span class="line">  &#125;</span><br><span class="line">  ....</span><br><span class="line">        server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        server_name www.centos.com;</span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://staticwebsrvs/;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">nginx+才支持</span><br><span class="line">nginx-sticky-module的使用（基于cookie的会话保持）</span><br><span class="line"></span><br><span class="line">使用sticky_cookie_insert启用会话亲缘关系，这会导致来自同一客户端的请求被传递到一组服务器在同一台服务器。与ip_hash不同之处在于，它不是基于IP来判断客户端的，而是基于cookie来判断。因此可以避免上述ip_hash中来自同一局域网的客户端和前段代理导致负载失衡的情况。</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx的http-upstream模块（七层负载）&quot;&gt;&lt;a href=&quot;#nginx的http-upstream模块（七层负载）&quot; class=&quot;headerlink&quot; title=&quot;nginx的http_upstream模块（七层负载）&quot;&gt;&lt;/a&gt;nginx的http_upstream模块（七层负载）&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/13/nginx七层调度/图标.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="https://daizhe.net.cn/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://daizhe.net.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx的fastcgi模块</title>
    <link href="https://daizhe.net.cn/2019/01/12/nginx%E7%9A%84fastcgi%E6%A8%A1%E5%9D%97/"/>
    <id>https://daizhe.net.cn/2019/01/12/nginx的fastcgi模块/</id>
    <published>2019-01-12T05:51:45.884Z</published>
    <updated>2019-01-12T09:11:35.391Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx的fastcgi模块"><a href="#nginx的fastcgi模块" class="headerlink" title="nginx的fastcgi模块"></a>nginx的fastcgi模块</h1><p><img src="/2019/01/12/nginx的fastcgi模块/图标.png" alt=""><br><a id="more"></a></p><h2 id="nginx的fastcgi模块-1"><a href="#nginx的fastcgi模块-1" class="headerlink" title="nginx的fastcgi模块"></a>nginx的fastcgi模块</h2><p>1.1　什么是 FastCGI</p><ul><li><p>FastCGI是一个可伸缩地、高速地在HTTP server和动态脚本语言间通信的接口。多数流行的HTTP server都支持FastCGI，包括Apache、Nginx和lighttpd等。同时，FastCGI也被许多脚本语言支持，其中就有PHP。</p></li><li><p>FastCGI是从CGI发展改进而来的。传统CGI接口方式的主要缺点是性能很差，因为每次HTTP服务器遇到动态程序时都需要重新启动脚本解析器来执行解析，然后将结果返回给HTTP服务器。这在处理高并发访问时几乎是不可用的。另外传统的CGI接口方式安全性也很差，现在已经很少使用了。</p></li><li><p>FastCGI接口方式采用C/S结构，可以将HTTP服务器和脚本解析服务器分开，同时在脚本解析服务器上启动一个或者多个脚本解析守护进程。当HTTP服务器每次遇到动态程序时，可以将其直接交付给FastCGI进程来执行，然后将得到的结果返回给浏览器。这种方式可以让HTTP服务器专一地处理静态请求或者将动态脚本服务器的结果返回给客户端，这在很大程度上提高了整个应用系统的性能。</p></li></ul><p>1.2　Nginx+FastCGI运行原理(nginx+fcgi_module–&gt;fpm(php))=NMP</p><ul><li>Nginx不支持对外部程序的直接调用或者解析，所有的外部程序（包括PHP）必须通过FastCGI接口来调用。FastCGI接口在Linux下是socket（这个socket可以是文件socket，也可以是ip socket）。为了调用CGI程序，还需要一个FastCGI的wrapper（wrapper可以理解为用于启动另一个程序的程序），这个wrapper绑定在某个固定socket上，如端口或者文件socket。当Nginx将CGI请求发送给这个socket的时候，通过FastCGI接口，wrapper接收到请求，然后派生出一个新的线程，这个线程调用解释器或者外部程序处理脚本并读取返回数据；接着，wrapper再将返回的数据通过FastCGI接口，沿着固定的socket传递给Nginx；最后，Nginx将返回的数据发送给客户端。这就是Nginx+FastCGI的整个运作过程，</li></ul><p><img src="/2019/01/12/nginx的fastcgi模块/fpm.png" alt=""></p><h2 id="ngx-http-fastcgi-module模块："><a href="#ngx-http-fastcgi-module模块：" class="headerlink" title="ngx_http_fastcgi_module模块："></a>ngx_http_fastcgi_module模块：</h2><ul><li><p><code>1、fastcgi_pass address;</code></p><ul><li>address为fastcgi server的地址；    location, if in location；</li></ul></li><li><p><code>2、fastcgi_index name;</code></p><ul><li>fastcgi默认的主页资源; </li></ul></li><li><p><code>3、fastcgi_param parameter value [if_not_empty];</code></p><ul><li>设置应该传递给FastCGI服务器的参数。该值可以包含文本、变量及其组合。(用于向后端的fastcgi或者fpm_server来传递参数)        </li></ul></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装完nginx时在目录中就有fastcgi_paeams文件，里面装的时nginx给fpm服务传递的参数，（每个默认的参数都要启动生效，每一个默认值fastcgi服务端执行fpm服务时要配置启用的参数的默认设定）</span></span><br><span class="line">    ~]<span class="comment"># ls /etc/nginx/</span></span><br><span class="line">    fastcgi_params </span><br><span class="line"></span><br><span class="line">两台主机</span><br><span class="line">    client</span><br><span class="line">    proxy_nginx_server    :yum install nginx -y</span><br><span class="line">    fpm_server          :yum install php-fpm</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">编辑代理nginx_server</span><br><span class="line"></span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line">    </span><br><span class="line">        location  ~* \.php$  &#123;</span><br><span class="line">        fastcgi_pass 172.18.135.2:9000;  <span class="comment">#定义如果客户端请求的资源为.php结尾的文件转发到fpm_server服务器上</span></span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  /data<span class="variable">$fastcgi_script_name</span>;  <span class="comment">#/data是在fpm_server上</span></span><br><span class="line">        include        fastcgi_params;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    ~]<span class="comment"># nginx -t</span></span><br><span class="line">    ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">fpm_server创建.php文件供客户端访问</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># cat /data/info.php </span></span><br><span class="line">    &lt;?php</span><br><span class="line">phpinfo();</span><br><span class="line">    ?&gt;</span><br><span class="line">    编辑fpm的配置文件的允许监听的地址</span><br><span class="line">    ~]<span class="comment"># vim /etc/php-fpm.d/www.conf</span></span><br><span class="line">    listen = 172.18.135.2:9000</span><br><span class="line">    listen.allowed_clients = any</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># systemctl restart php-fpm</span></span><br><span class="line"></span><br><span class="line">client访问</span><br><span class="line">    http://172.18.135.1/info.php</span><br></pre></td></tr></table></figure><hr><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">使用压测工具进行压测（ab）</span><br><span class="line">     ~]<span class="comment"># yum install httpd-tools -y</span></span><br><span class="line">        ab 命令（n&gt;c）</span><br><span class="line">            -c 模拟并发的数量</span><br><span class="line">            -n 指定请求的个数</span><br><span class="line"></span><br><span class="line">对nginx调度器进行压测</span><br><span class="line">    ~]<span class="comment"># ab -c 100 -n 1000 http://172.18.135.1/infp.php</span></span><br><span class="line">    Requests per second:    2389.18 [<span class="comment">#/sec] (mean)</span></span><br><span class="line">----------------------------------------------------------------------</span><br><span class="line">对nginx调度器的fastcgi模块启用缓存</span><br><span class="line"><span class="comment">#http上下文定义键</span></span><br><span class="line">    ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">    http &#123;</span><br><span class="line">        fastcgi_cache_path /var/cache/fastcgi       levels=1:1:2 keys_zone=fastcgi:10m     max_size=2G;</span><br><span class="line">    ....</span><br><span class="line">    <span class="comment">#调用http定义的键</span></span><br><span class="line">       server &#123;</span><br><span class="line">        listen       80 default_server;</span><br><span class="line">        listen       [::]:80 default_server;</span><br><span class="line">        server_name  _;</span><br><span class="line">        root         /usr/share/nginx/html;</span><br><span class="line"></span><br><span class="line">        location  ~* \.php$  &#123;</span><br><span class="line">        fastcgi_pass 172.18.135.2:9000;</span><br><span class="line">        fastcgi_index index.php;</span><br><span class="line">        fastcgi_param  SCRIPT_FILENAME  /data<span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">        fastcgi_cache     fastcgi;</span><br><span class="line">        fastcgi_cache_key <span class="variable">$request_uri</span>;</span><br><span class="line">        fastcgi_cache_valid 200 302 10m;</span><br><span class="line">        fastcgi_cache_valid 301   1h;</span><br><span class="line">        fastcgi_cache_valid any   1m;</span><br><span class="line">        fastcgi_cache_methods GET HEAD;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># mkdir -p /var/cache/fastcgi</span></span><br><span class="line">    ~]<span class="comment"># nginx -t</span></span><br><span class="line">    ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">再次访问测试验证是否加速</span><br><span class="line">    ~]<span class="comment"># ab -c 100 -n 1000 http://172.18.135.1/infp.php  #第一次访问生成缓存</span></span><br><span class="line">    [root@centos7 ~]<span class="comment"># tree /var/cache/fastcgi/</span></span><br><span class="line">    /var/cache/fastcgi/</span><br><span class="line">    └── 5</span><br><span class="line">      └── 6</span><br><span class="line">          └── af</span><br><span class="line">             └── 48fe86dcef16714ba3e4f82bba2daf65</span><br><span class="line">    3 directories, 1 file</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># ab -c 100 -n 1000 http://172.18.135.1/infp.php</span></span><br><span class="line">    Requests per second:    10657.12 [<span class="comment">#/sec] (mean)</span></span><br></pre></td></tr></table></figure><p>4、fastcgi_cache_path path [levels=levels] [use_temp_path=on|off] keys_zone=name:size [inactive=time] [max_size=size] [manager_files=number] [manager_sleep=time] [manager_threshold=time] [loader_files=number] [loader_sleep=time] [loader_threshold=time] [purger=on|off] [purger_files=number] [purger_sleep=time] [purger_threshold=time];</p><ul><li><p>定义fastcgi的缓存；缓存位置为磁盘上的文件系统，由path所指定路径来定义；</p><ul><li>levels=levels：缓存目录的层级数量，以及每一级的目录数量；levels=ONE:TWO:THREE</li><li>leves=1:2:2</li><li>keys_zone=name:size<ul><li>k/v映射的内存空间的名称及大小<ul><li>inactive=time<ul><li>非活动时长</li></ul></li><li>max_size=size<ul><li>磁盘上用于缓存数据的缓存空间上限</li></ul></li></ul></li></ul></li></ul></li><li><p>5、fastcgi_cache zone | off;</p><ul><li>调用指定的缓存空间来缓存数据；http, server, location</li></ul></li><li><p>6、fastcgi_cache_key string;</p><ul><li>定义用作缓存项的key的字符串；</li></ul></li><li><p>7、fastcgi_cache_methods GET | HEAD | POST …;</p><ul><li>为哪些请求方法使用缓存；</li></ul></li><li><p>8、fastcgi_cache_min_uses number;</p><ul><li>缓存空间中的缓存项在inactive定义的非活动时间内至少要被访问到此处所指定的次数方可被认作活动项；</li></ul></li><li><p>9、fastcgi_cache_valid [code …] time;</p><ul><li>不同的响应码各自的缓存时长；</li></ul></li><li><p>10、fastcgi_keep_conn on | off;</p><ul><li>默认情况下，FastCGI服务器会在发送响应后立即关闭连接。但是，当这个指令被设置为on时，nginx将指示FastCGI服务器保持连接打开。    </li></ul></li></ul><p>范例：fastcgi模块内键有两个url可以输出fastcgi健康状态以及健康页面信息<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">fastcgi_server配置文件中开启两个内建的url(这两个url的输出默认使用的fastcgi协议)</span><br><span class="line">    ~]<span class="comment"># vim /etc/php-fpm.d/www.conf </span></span><br><span class="line">    121 pm.status_path = /pm_status</span><br><span class="line">    133 ping.path = /ping   <span class="comment">#ping·pong</span></span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># systemctl restart php-fpm</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">编辑nginx代理</span><br><span class="line">    ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">        location ~* ^/(pm_status|ping)$ &#123;</span><br><span class="line">        fastcgi_pass 172.18.135.2:9000;</span><br><span class="line">         fastcgi_param  SCRIPT_FILENAME  <span class="variable">$fastcgi_script_name</span>;</span><br><span class="line">        include        fastcgi_params;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">     ~]<span class="comment"># nginx -t</span></span><br><span class="line">     ~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">客户端访问测试</span><br><span class="line">    ~]<span class="comment"># curl 172.18.135.1/pm_status</span></span><br><span class="line">    pool:                 www</span><br><span class="line">    process manager:      dynamic</span><br><span class="line">    start time:           12/Jan/2019:17:09:39 +0800</span><br><span class="line">    start since:          57</span><br><span class="line">    accepted conn:        1</span><br><span class="line">    listen queue:         0</span><br><span class="line">    max listen queue:     0</span><br><span class="line">    listen queue len:     128</span><br><span class="line">    idle processes:       4</span><br><span class="line">    active processes:     1</span><br><span class="line">    total processes:      5</span><br><span class="line">    max active processes: 1</span><br><span class="line">    max children reached: 0</span><br><span class="line">    slow requests:        0</span><br><span class="line"></span><br><span class="line">    ~]<span class="comment"># curl 172.18.135.1/ping</span></span><br><span class="line">    pong</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx的fastcgi模块&quot;&gt;&lt;a href=&quot;#nginx的fastcgi模块&quot; class=&quot;headerlink&quot; title=&quot;nginx的fastcgi模块&quot;&gt;&lt;/a&gt;nginx的fastcgi模块&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/12/nginx的fastcgi模块/图标.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="https://daizhe.net.cn/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://daizhe.net.cn/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>nginx的proxy模块</title>
    <link href="https://daizhe.net.cn/2019/01/10/nginx%E7%9A%84proxy%E6%A8%A1%E5%9D%97/"/>
    <id>https://daizhe.net.cn/2019/01/10/nginx的proxy模块/</id>
    <published>2019-01-10T11:56:48.546Z</published>
    <updated>2019-01-12T06:00:57.552Z</updated>
    
    <content type="html"><![CDATA[<h1 id="nginx的proxy模块"><a href="#nginx的proxy模块" class="headerlink" title="nginx的proxy模块"></a>nginx的proxy模块</h1><p><img src="/2019/01/10/nginx的proxy模块/图标.png" alt=""><br><a id="more"></a></p><h2 id="nginx的proxy模块-1"><a href="#nginx的proxy模块-1" class="headerlink" title="nginx的proxy模块"></a>nginx的proxy模块</h2><p>一、反向代理</p><ul><li><p>1.什么是反向代理（DNAT）<br>通常的代理服务器，只用于代理内部网络对Internet的连接请求，客户机必须指定代理服务器,并将本来要直接发送到Web服务器上的http请求发送到代理服务器中由代理服务器向Internet上的web服务器发起请求，最终达到客户机上网的目的（也就是正向代理）。</p></li><li><p>而反向代理（Reverse Proxy）方式是指以代理服务器来接受internet上的连接请求，然后将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给internet上请求连接的客户端，此时代理服务器对外就表现为一个反向代理服务器。</p></li><li>Nginx只做请求的转发，后台有多个http服务器提供服务，nginx的功能就是把请求转发给后面的服务器，决定把请求转发给谁</li></ul><p><img src="/2019/01/10/nginx的proxy模块/代理.png" alt=""></p><h2 id="ngx-http-proxy-module模块："><a href="#ngx-http-proxy-module模块：" class="headerlink" title="ngx_http_proxy_module模块："></a>ngx_http_proxy_module模块：</h2><ul><li>1、proxy_pass URL;    <ul><li>Context:    location, if in location, limit_except<ul><li>作用：将用户的请求代理到哪个URL上（完成的是两个路径的映射关系）<ul><li>注意：proxy_pass后面的路径不带uri时，其会将location的uri传递给后端主机；</li></ul></li></ul></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">...</span><br><span class="line">server_name HOSTNAME;</span><br><span class="line">location /uri/ &#123;</span><br><span class="line">proxy http://hos[:port];</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http://HOSTNAME/uri --&gt; http://host/uri </span><br><span class="line"></span><br><span class="line">proxy_pass后面的路径是一个uri时，其会将location的uri替换为proxy_pass的uri；</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">...</span><br><span class="line">server_name HOSTNAME;</span><br><span class="line">location /uri/ &#123;</span><br><span class="line">proxy http://host/new_uri/;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http://HOSTNAME/uri/ --&gt; http://host/new_uri/</span><br><span class="line"></span><br><span class="line">如果location定义其uri时使用了正则表达式的模式，或在if语句或limt_execept中使用proxy_pass指令，则proxy_pass之后必须不能使用uri; 用户请求时传递的uri将直接附加代理到的服务的之后；</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">...</span><br><span class="line">server_name HOSTNAME;</span><br><span class="line">location ~|~* /uri/ &#123;</span><br><span class="line">proxy http://host;</span><br><span class="line">&#125;</span><br><span class="line">...</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">http://HOSTNAME/uri/ --&gt; http://host/uri/；</span><br></pre></td></tr></table></figure><p><img src="/2019/01/10/nginx的proxy模块/代理1.png" alt=""></p><p><code>范例：实现简单的代理</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line">使用docker镜像创建两个web_server服务器</span><br><span class="line"><span class="comment">#容易已经绑定宿主机的存储卷，默认安装完docker生成的一个net的地址桥</span></span><br><span class="line"><span class="comment">#无需暴漏端口，因为此web_server仅用于和前端内网中的nginx_proxy_server通讯不需要直接和客户端进行通讯</span></span><br><span class="line"></span><br><span class="line">   ~]<span class="comment"># docker run --name webser1 -it --network bridge -v /vols/websrv1:/vole/htdocs1 busybox</span></span><br><span class="line">   / <span class="comment"># httpd -f -v -h  /vole/htdocs1</span></span><br><span class="line"><span class="comment">#-f 运行在前台</span></span><br><span class="line"><span class="comment">#-v 打印信息在前台</span></span><br><span class="line"><span class="comment">#-h 指定家目录</span></span><br><span class="line"></span><br><span class="line">   ~]<span class="comment"># docker run --name webser2 -it --network bridge -v /vols/websrv2:/vole/htdocs1 busybox</span></span><br><span class="line">   / <span class="comment"># httpd -f -v -h  /vole/htdocs1</span></span><br><span class="line"></span><br><span class="line">在宿主机上创建对应的存储卷上对应的网页文件</span><br><span class="line">~]<span class="comment"># mkdir -p /vols/websrv1</span></span><br><span class="line">~]<span class="comment"># mkdir -p /vols/websrv2</span></span><br><span class="line">~]<span class="comment"># echo "webser1" &gt; /vols/websrv1/index.html</span></span><br><span class="line">  ~]<span class="comment"># echo "webser2" &gt; /vols/websrv2/index.html</span></span><br><span class="line">  ~]<span class="comment"># curl 172.17.0.2</span></span><br><span class="line">    websrv1</span><br><span class="line">  ~]<span class="comment"># curl 172.17.0.3</span></span><br><span class="line">    websrv2</span><br><span class="line"></span><br><span class="line">配置nginx代理</span><br><span class="line">  ~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">        server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        location / &#123;</span><br><span class="line">        proxy_pass http://172.17.0.2/;         <span class="comment">#proxy_pass的优先级比root的优先级要高 ,/有和无是有区别的。</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~]<span class="comment"># nginx -t</span></span><br><span class="line">~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">客户端请求nginx代理的地址</span><br><span class="line">~]<span class="comment"># curl 172.18.135.1:8080</span></span><br><span class="line">websrv1</span><br><span class="line">-----------------------------------------------------------------------</span><br><span class="line"><span class="comment">###实验说明/有和无是有区别的</span></span><br><span class="line"><span class="comment">##无/##</span></span><br><span class="line">       server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        root /nginx/html;</span><br><span class="line">        location /bbs &#123;</span><br><span class="line">        proxy_pass http://172.17.0.2; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">~]<span class="comment"># mkdir -p /nginx/html/ddb</span></span><br><span class="line">~]<span class="comment"># mkdir -p /nginx/html/bbs</span></span><br><span class="line">~]<span class="comment"># echo "/nginx/html/bbs/index.html" &gt; /nginx/html/bbs/index.html</span></span><br><span class="line"></span><br><span class="line">测试</span><br><span class="line">~]<span class="comment"># curl 172.18.135.1:8080/bbs</span></span><br><span class="line">/nginx/html/bbs/index.html</span><br><span class="line"></span><br><span class="line">查看web_server打印的日志</span><br><span class="line">[::ffff:172.17.0.1]:50650: response:404</span><br><span class="line"></span><br><span class="line"><span class="comment">##有/##</span></span><br><span class="line">       server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        root /nginx/html;</span><br><span class="line">        location /bbs &#123;</span><br><span class="line">        proxy_pass http://172.17.0.2/; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">~]<span class="comment"># curl 172.18.135.1:8080/bbs</span></span><br><span class="line">websrv1</span><br><span class="line"></span><br><span class="line">查看web_server打印的日志</span><br><span class="line">[::ffff:172.17.0.1]:50648: response:200</span><br><span class="line"></span><br><span class="line">··············································································</span><br><span class="line">范例：使用正则表达式匹配客户端请求的文件进行代理</span><br><span class="line">配置nginx代理</span><br><span class="line"><span class="comment">#"proxy_pass"不能在正则表达式给出的位置中</span></span><br><span class="line">~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">    server &#123;</span><br><span class="line">        listen 8080;</span><br><span class="line">        location ~* \.(jpg|png|jpeg) &#123;<span class="comment">#如果客户端请求这些资源则代理则将客户段的请求代理到web_server的/images/目录下文件</span></span><br><span class="line">        proxy_pass http://172.17.0.1;<span class="comment">#proxy_pass定义的匹配条件后面不可以url（客户的请求资源url和自动补在服务器上，如果客户请求的http://172.18.135.1:8888/bbs/a.jpg,如果后端的web服务器上有这个资源，则客户端也回加载此图片（后面的uri是原封不动的放在后端服务器上的））</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~]<span class="comment"># nginx -t</span></span><br><span class="line">~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">在web_server上放置图片提供访问（从宿主机上查找图片放在容器对应映射在宿主机上的存储卷）</span><br><span class="line">~]<span class="comment"># cd /vols/websrv1/</span></span><br><span class="line">websrv1]<span class="comment"># cp /usr/share/cups/www/images/smiley.jpg .</span></span><br><span class="line"></span><br><span class="line">客户端访问测试</span><br><span class="line">http://172.18.135.1:8888/smiley.jpg</span><br><span class="line"></span><br><span class="line">查看web_server是否接受请求</span><br><span class="line">[::ffff:172.17.0.1]:50720: response:200</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##测试请求web_server下的其他url的图片</span></span><br><span class="line">宿主机放置资源在存储卷上</span><br><span class="line">bbs]<span class="comment"># pwd</span></span><br><span class="line">/vols/websrv1/bbs</span><br><span class="line">请求测试</span><br><span class="line">http://172.18.135.1:8888/bbs/profile.jpg</span><br><span class="line">```</span><br><span class="line">- `2、proxy_set_header field value;`</span><br><span class="line">- 设定发往后端主机的请求报文的请求首部的值；Context:http, server, location</span><br><span class="line">- proxy_set_header X-Real-IP  <span class="variable">$remote_addr</span>;</span><br><span class="line">- proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line"></span><br><span class="line">`范例：proxy_set_header ：将请求报文发送给后端被代理的服务器时，修改请求报文的某些或者某个首部`</span><br><span class="line">```bash</span><br><span class="line">七层调度是可以操纵两路报文：</span><br><span class="line">第一：把请求转给后端时，可以操作报文</span><br><span class="line">第二：将后端服务器的响应发还给客户端时，可以操作报文</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">实现被调度的服务器显示的日志查看到的源地址为客户端的地址</span><br><span class="line"><span class="comment">#利用变量操作客户端请求被调度的服务器的请求报文的源地址的修改</span></span><br><span class="line"><span class="comment">#proxy_set_header X-Real-IP  $remote_addr</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#日志查看被调度的默认的请求的客户端的地址，默认显示的不是真正的客户端的地址，显示的是调度的器的地址（请求报文的源地址）</span></span><br><span class="line"><span class="comment">#[::ffff:172.17.0.1]:50728: response:200</span></span><br><span class="line"></span><br><span class="line">（让代理服务器发请求报文时添加特定的请求首部，修改为真正的客户端地址，让后端被调度的服务器记录日志时，改为记录新的日志）</span><br><span class="line"></span><br><span class="line">编辑被调度的web服务的配置文件</span><br><span class="line">1.查看后端web服务器的使用的日志的格式</span><br><span class="line">CustomLog /path/to/file 格式定义（common、combined、combinedio）</span><br><span class="line"></span><br><span class="line">2.修改web后端使用的日志的格式</span><br><span class="line">LogFormat <span class="string">"%&#123;X-Real-IP&#125;i %l %u %t \"%r\" %&gt;s %b"</span> common</span><br><span class="line"></span><br><span class="line">3.修改nginx调度器的配置文件</span><br><span class="line">~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        listen 8888;</span><br><span class="line">        location ~* \.(jpg|png|jpeg) &#123;</span><br><span class="line">        proxy_pass http://172.18.135.2;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">~]<span class="comment"># nginx -t</span></span><br><span class="line">~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">4.客户端访问调度器并查看后端的web_server服务器的访问日志信息</span><br><span class="line">~]<span class="comment"># cat /var/log/httpd/access_log </span></span><br><span class="line">172.18.135.5 - - [12/Jan/2019:10:08:05 +0800] <span class="string">"GET /smiley.jpg HTTP/1.0"</span> 200 14120</span><br><span class="line">(此地址文真实客户端地址)</span><br></pre></td></tr></table></figure><ul><li><code>3、proxy_cache_path</code><ul><li>定义可用于proxy功能的缓存；Context:    http            <ul><li>proxy_cache_path path [levels=levels] [use_temp_path=on|off] keys_zone=name:size [inactive=time] [max_size=size] [manager_files=number] [manager_sleep=time] [manager_threshold=time] [loader_files=number] [loader_sleep=time] [loader_threshold=time] [purger=on|off] [purger_files=number] [purger_sleep=time] [purger_threshold=time];</li></ul></li></ul></li></ul><p>范例：    定义可用于proxy功能的缓存<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">页面缓存（http服务）</span><br><span class="line"><span class="comment">#nginx作为反向代理服务器时支持缓存功能的，缓存是由缓存模块个缓存机制来提供的，对于缓存服务来说要想启用起来，是由代理模块自带的，在nginx上想要使用代理，必须要匹配模式，在nginx中的缓存是要先定义在使用的，</span></span><br><span class="line">levels=levels <span class="comment">#定义使用几级索引，做多使用三级=每级索引当中打算使用几个字符创建多少个子项（一个字符是16个，两个字符就是256个，2^8）</span></span><br><span class="line"><span class="comment">#inactive=time非活动时间</span></span><br><span class="line"><span class="comment">#max_size=size  整个磁盘空间用于缓存的时间的空间的大小</span></span><br><span class="line"><span class="comment">#manager_sleep=time每隔多长时间检查缓存的有效性</span></span><br><span class="line"><span class="comment">#manager_threshold=time如果缓存时间沾满，如何使用LRU（最近最少使用算法）算法激活，并清理缓存</span></span><br><span class="line"></span><br><span class="line">范例：配置nginx的proxy功能的页面缓存</span><br><span class="line"><span class="comment">#直接定义在http的上下文</span></span><br><span class="line"><span class="comment"># proxy_cache_path定义缓存的放置路径，并确保定义的缓存的目录的存在,应该放置在当前主机上的io性能最好的设备上（固态硬盘）（缓存对cpu的压力小，但是最磁盘io的压力很大）</span></span><br><span class="line"><span class="comment">#levels=1:1:1 定义缓存的路由级别，每个路由有16个子目录</span></span><br><span class="line"><span class="comment">#keys_zone定义内存空间的路径和定义内存数据或者索引数据的缓存（K/V）</span></span><br><span class="line"><span class="comment">#max_size=size指定磁盘空间的大小</span></span><br><span class="line"><span class="comment">#proxy_cache调用缓存的名称</span></span><br><span class="line"><span class="comment">#proxy_cache_key $schene$proxy_host$is_args$args;#定义使用的键bash（协议：服务器地址：端口：请求的uri）如果是服务器的地址使用了泛域名解析，则要去掉协议和服务器地址</span></span><br><span class="line"><span class="comment">#proxy_cache_valid 定义缓存进来的键被保留多长时间</span></span><br><span class="line"><span class="comment">#proxy_cache_methods(默认为GET、POST)(对web服务器来讲通常仅缓存读操作，不缓存写操作，查询缓存时只对读操作查缓存)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#proxy_cache_use_stale (缓存的内容不一定是权威的内容，所有能够响应客户端的前提是后端服务器时ok的，如果客户的某一请求来了服务器时不在了，代理联系不到后端的服务器，并且缓存中的内容已经过期了客户端的且缓存中的内容还是存在的，决定代理服务器还要不要给客户端返回结果)off代表如果服务器有问题时代理服务器不拿缓存中数据去对客户端进行响应，定义服务器出现问题是代理继续使用未过期的缓存进行响应proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off ...;</span></span><br><span class="line"></span><br><span class="line">编辑nginx代理节点的配置文件</span><br><span class="line"><span class="comment">#定义缓存功能</span></span><br><span class="line">~]<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">http &#123;</span><br><span class="line">        proxy_cache_path /var/cache/nginxlevels=1:1:2 keys_zone=webcache:10mmax_size=2G;</span><br><span class="line">....</span><br><span class="line"><span class="comment">#调用缓存</span></span><br><span class="line">        server &#123;</span><br><span class="line">        proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        listen 8888;</span><br><span class="line">        location ~* \.(jpg|png|jpeg) &#123;</span><br><span class="line">        proxy_pass http://172.18.135.2;</span><br><span class="line">        proxy_cache     webcache;</span><br><span class="line">proxy_cache_key <span class="variable">$request_uri</span>;<span class="comment">#设置仅使用uri当客户端请求的bash的键</span></span><br><span class="line">proxy_cache_valid 200 302 10m;<span class="comment">#根据用户第一次请求的响应码定义缓存的时长</span></span><br><span class="line">proxy_cache_valid 3011h;</span><br><span class="line">proxy_cache_valid any1m;</span><br><span class="line">proxy_cache_methods GET HEAD;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">~]<span class="comment"># nginx -t</span></span><br><span class="line">~]<span class="comment"># nginx -s reload</span></span><br><span class="line"></span><br><span class="line">客户端进行访问测试</span><br><span class="line">http://172.18.135.1:8888/smiley.jpg</span><br><span class="line"></span><br><span class="line">调度器查看是否生成缓存</span><br><span class="line">~]<span class="comment"># tree /var/cache/nginx</span></span><br><span class="line">/var/cache/nginx</span><br><span class="line">└── 2<span class="comment">#一级桶</span></span><br><span class="line">    └── b<span class="comment">#二级桶</span></span><br><span class="line">        └── df<span class="comment">#三级桶</span></span><br><span class="line">            └── ac2582e15d13e9fa21b8da128b16dfb2</span><br><span class="line">3 directories, 1 file</span><br><span class="line"></span><br><span class="line">~]<span class="comment"># cat /var/cache/nginx/2/b/df/ac2582e15d13e9fa21b8da128b16dfb2 </span></span><br><span class="line">޷9\YJ9\u9\¼b]<span class="string">"3728-57f392ebe4ca8"</span></span><br><span class="line">KEY: /smiley.jpg</span><br><span class="line">HTTP/1.1 200 OK</span><br><span class="line">Date: Sat, 12 Jan 2019 05:05:11 GMT</span><br><span class="line">Server: Apache/2.4.6 (CentOS)</span><br><span class="line">Last-Modified: Sat, 12 Jan 2019 02:00:57 GMT</span><br><span class="line">ETag: <span class="string">"3728-57f392ebe4ca8"</span></span><br><span class="line">Accept-Ranges: bytes</span><br><span class="line">Content-Length: 14120</span><br><span class="line">Connection: close</span><br><span class="line">Content-Type: image/jpeg</span><br></pre></td></tr></table></figure></p><ul><li><p>4、proxy_cache zone | off;</p><ul><li>指明要调用的缓存，或关闭缓存机制；Context:    http, server, location</li></ul></li><li><p>5、    proxy_cache_key string;</p><ul><li>缓存中用于“键”的内容；<ul><li>默认值：proxy_cache_key $scheme$proxy_host$request_uri;</li></ul></li></ul></li><li><p>6、proxy_cache_valid [code …] time;</p><ul><li><p>定义对特定响应码的响应内容的缓存时长；</p><ul><li><p>定义在http{…}中；</p><ul><li>proxy_cache_path /var/cache/nginx/proxy_cache levels=1:1:1 keys_zone=pxycache:20m max_size=1g;</li></ul></li><li><p>定义在需要调用缓存功能的配置段，例如server{…}；</p><ul><li>proxy_cache pxycache;</li><li>proxy_cache_key $request_uri;</li><li>proxy_cache_valid 200 302 301 1h;</li><li>proxy_cache_valid any 1m;</li></ul></li></ul></li></ul></li><li><p>7、proxy_cache_use_stale</p><ul><li>proxy_cache_use_stale error | timeout | invalid_header | updating | http_500 | http_502 | http_503 | http_504 | http_403 | http_404 | off …;</li><li>确定在与代理服务器通信期间发生错误时，可以在哪些情况下使用陈旧的缓存响应。        </li></ul></li><li><p>8、proxy_cache_methods GET | HEAD | POST …;</p><ul><li>如果在这个指令中列出了客户机请求方法，那么响应将被缓存。“GET”和“HEAD”方法总是添加到列表中，但是建议显式地指定它们。    </li></ul></li><li><p><code>9、proxy_hide_header field;</code>    #操纵发送给客户端的响应报文</p><ul><li>默认情况下，nginx不传递头字段“Date”、“Server”、“X-Pad”和“X-Accel-…”从代理服务器到客户机的响应。proxy_hide_header指令设置不传递的其他字段。    (参考文档：<a href="http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_purge" target="_blank" rel="noopener">http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_cache_purge</a>)</li></ul></li><li><p><code>10、proxy_connect_timeout time;</code></p><ul><li>定义与代理服务器建立连接的超时。应该注意的是，这个超时通常不能超过75秒。</li><li>默认为60s；最长为75s；</li></ul></li><li><code>11、proxy_read_timeout time;</code> <ul><li>定义从代理服务器读取响应的超时。超时仅在两个连续读取操作之间设置，而不是为整个响应的传输设置。</li></ul></li><li><code>12、proxy_send_timeout time;</code><ul><li>设置将请求发送到代理服务器的超时。仅在两个连续的写操作之间设置超时，而不是为整个请求的传输设置超时。如果代理服务器在此期间没有收到任何消息，则连接将关闭。</li></ul></li></ul><h3 id="ngx-http-headers-module模块"><a href="#ngx-http-headers-module模块" class="headerlink" title="ngx_http_headers_module模块"></a><code>ngx_http_headers_module模块</code></h3><ul><li>ngx_http_headers_module模块允许将“Expires”和“Cache-Control”报头字段以及任意字段添加到响应报头中。</li><li><p>向由代理服务器响应给客户端的响应报文添加自定义首部，或修改指定首部的值；</p></li><li><p><code>1、add_header name value [always];</code></p><ul><li>添加自定义首部；<ul><li>add_header X-Via  $server_addr;</li><li>add_header X-Accel $server_name;</li></ul></li></ul></li><li>2、expires [modified] time;<ul><li>expires epoch | max | off;</li><li>用于定义Expire或Cache-Control首部的值；</li></ul></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;nginx的proxy模块&quot;&gt;&lt;a href=&quot;#nginx的proxy模块&quot; class=&quot;headerlink&quot; title=&quot;nginx的proxy模块&quot;&gt;&lt;/a&gt;nginx的proxy模块&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/2019/01/10/nginx的proxy模块/图标.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Nginx" scheme="https://daizhe.net.cn/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://daizhe.net.cn/tags/Nginx/"/>
    
  </entry>
  
</feed>
